{"version":3,"file":"OpenChannelSettings.js","sources":["../../../src/ui/ChannelAvatar/OpenChannelAvatar.tsx","../../../src/smart-components/OpenChannelSettings/components/EditDetailsModal.tsx","../../../src/smart-components/OpenChannelSettings/components/ChannelProfile.tsx","../../../src/smart-components/OpenChannelSettings/components/ParticipantsModal.tsx","../../../src/smart-components/OpenChannelSettings/components/ParticipantsAccordion.tsx","../../../src/smart-components/OpenChannelSettings/components/DeleteChannel.tsx","../../../src/smart-components/OpenChannelSettings/components/ParticipantsList.tsx","../../../src/smart-components/OpenChannelSettings/components/InvalidChannel.tsx","../../../src/smart-components/OpenChannelSettings/index.tsx"],"sourcesContent":["import React, { useMemo, useContext } from 'react';\n\nimport Avatar from '../Avatar/index';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nimport * as utils from './utils';\n\ninterface Props {\n  channel: SendBird.OpenChannel;\n  theme: string;\n  height?: number;\n  width?: number;\n}\n\nfunction ChannelAvatar({\n  channel,\n  theme,\n  height = 56,\n  width = 56,\n}: Props): JSX.Element{\n  const { stringSet } = useContext(LocalizationContext);\n  const memoizedAvatar = useMemo(() => {\n    return (\n      <Avatar\n        className=\"sendbird-chat-header__avatar--open-channel\"\n        src={utils.getOpenChannelAvatar(channel)}\n        width={`${width}px`}\n        height={`${height}px`}\n        alt={channel.name || stringSet.OPEN_CHANNEL_SETTINGS__NO_TITLE}\n      />\n    );\n  }, [channel.coverUrl, theme]);\n  return (\n    <>{ memoizedAvatar }</>\n  );\n}\n\nexport default ChannelAvatar;\n","import React, {\n  useState,\n  useRef,\n  useContext,\n  ReactElement,\n} from 'react';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Modal from '../../../ui/Modal';\nimport Input, { InputLabel } from '../../../ui/Input';\nimport Avatar from '../../../ui/Avatar/index';\nimport { Type as ButtonType } from '../../../ui/Button/type';\nimport Label, { LabelColors, LabelTypography } from '../../../ui/Label';\nimport TextButton from '../../../ui/TextButton';\nimport OpenChannelAvatar from '../../../ui/ChannelAvatar/OpenChannelAvatar';\n\ninterface Props {\n  onSubmit(newFile: File, newTitle: string): void;\n  onCancel(): void;\n  channel: SendBird.OpenChannel;\n  theme: string;\n}\n\nconst EditDetails = (props: Props): ReactElement => {\n  const {\n    onSubmit,\n    onCancel,\n    channel,\n    theme,\n  } = props;\n  const inputRef = useRef(null);\n  const formRef = useRef(null);\n  const hiddenInputRef = useRef(null);\n  const [currentImg, setCurrentImg] = useState(null);\n  const [newFile, setNewFile] = useState(null);\n  const { stringSet } = useContext(LocalizationContext);\n  const title = channel.name;\n  return (\n    <Modal\n      titleText={stringSet.MODAL__CHANNEL_INFORMATION__TITLE}\n      submitText={stringSet.BUTTON__SAVE}\n      onCancel={onCancel}\n      onSubmit={() => {\n        if (title !== '' && !inputRef.current.value) {\n          if (formRef.current.reportValidity) { // might not work in explorer\n            formRef.current.reportValidity();\n          }\n          return;\n        }\n        onSubmit(newFile, inputRef.current.value);\n        onCancel();\n      }}\n      type={ButtonType.PRIMARY}\n    >\n      <form\n        className=\"channel-profile-form\"\n        ref={formRef}\n        onSubmit={(e) => { e.preventDefault(); }}\n      >\n        <div className=\"channel-profile-form__img-section\">\n          <InputLabel>\n            {stringSet.MODAL__CHANNEL_INFORMATION__CHANNEL_IMAGE}\n          </InputLabel>\n          <div className=\"channel-profile-form__avatar\">\n            {\n              currentImg\n                ? (\n                  <Avatar\n                    height=\"80px\"\n                    width=\"80px\"\n                    src={currentImg}\n                  />\n                ) : (\n                  <OpenChannelAvatar\n                    height={80}\n                    width={80}\n                    channel={channel}\n                    theme={theme}\n                  />\n                )\n              }\n          </div>\n          <input\n            ref={hiddenInputRef}\n            type=\"file\"\n            accept=\"image/gif, image/jpeg, image/png\"\n            style={{ display: 'none' }}\n            onChange={(e) => {\n              setCurrentImg(URL.createObjectURL(e.target.files[0]));\n              setNewFile(e.target.files[0]);\n              hiddenInputRef.current.value = '';\n            }}\n          />\n          <TextButton\n            className=\"channel-profile-form__avatar-button\"\n            onClick={() => hiddenInputRef.current.click()}\n            notUnderline\n          >\n            <Label type={LabelTypography.BUTTON_1} color={LabelColors.PRIMARY}>\n              {stringSet.MODAL__CHANNEL_INFORMATION__UPLOAD}\n            </Label>\n          </TextButton>\n        </div>\n        <div className=\"channel-profile-form__name-section\">\n          <InputLabel>\n            {stringSet.MODAL__CHANNEL_INFORMATION__CHANNEL_NAME}\n          </InputLabel>\n          <Input\n            required={title !== ''}\n            name=\"channel-profile-form__name\"\n            ref={inputRef}\n            value={title}\n            placeHolder={stringSet.MODAL__CHANNEL_INFORMATION__INPUT__PLACE_HOLDER}\n          />\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nexport default EditDetails;\n","import React, {\n  ReactElement,\n  useContext,\n  useState,\n} from 'react';\n\nimport './channel-profile.scss';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Label, { LabelColors, LabelTypography } from '../../../ui/Label';\nimport TextButton from '../../../ui/TextButton';\nimport OpenChannelAvatar from '../../../ui/ChannelAvatar/OpenChannelAvatar';\nimport EditDetailsModal from './EditDetailsModal';\n\ninterface Props {\n  channel: SendBird.OpenChannel;\n  disabled: boolean;\n  theme: string;\n  onChannelInfoChange(currentImg: File, currentTitle: string): void;\n}\n\nexport default function ChannelProfile(props: Props): ReactElement {\n  const {\n    disabled,\n    channel,\n    theme,\n    onChannelInfoChange,\n  } = props;\n  const title = channel.name;\n  const [showModal, setShowModal] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n\n  return (\n    <div className=\"sendbird-openchannel-profile\">\n      <div className=\"sendbird-openchannel-profile--inner\">\n        <div className=\"sendbird-openchannel-profile__avatar\">\n          <OpenChannelAvatar\n            channel={channel}\n            theme={theme}\n            height={80}\n            width={80}\n          />\n        </div>\n        <Label\n          type={LabelTypography.SUBTITLE_2}\n          color={LabelColors.ONBACKGROUND_1}\n          className=\"sendbird-openchannel-profile__title\"\n        >\n          {title || stringSet.OPEN_CHANNEL_SETTINGS__NO_TITLE}\n        </Label>\n        <TextButton\n          disabled={disabled}\n          className=\"sendbird-openchannel-profile__edit\"\n          onClick={() => {\n            if (disabled) { return; }\n            setShowModal(true);\n          }}\n          notUnderline\n        >\n          <Label\n            type={LabelTypography.BUTTON_1}\n            color={disabled ? LabelColors.ONBACKGROUND_2 : LabelColors.PRIMARY}\n          >\n            {stringSet.CHANNEL_SETTING__PROFILE__EDIT}\n          </Label>\n        </TextButton>\n        {\n          showModal && (\n            <EditDetailsModal\n              onCancel={() => setShowModal(false)}\n              onSubmit={onChannelInfoChange}\n              channel={channel}\n              theme={theme}\n            />\n          )\n        }\n      </div>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useContext,\n} from 'react';\n\nimport Modal from '../../../ui/Modal';\nimport UserListItem from '../../../ui/UserListItem';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport { noop } from '../../../utils/utils';\n\ninterface Props {\n  currentUser: string;\n  hideModal(): void;\n  channel: SendBird.OpenChannel;\n}\n\nexport default function ParticipantsModal({\n  hideModal,\n  channel,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  const [participants, setParticipants] = useState<Array<SendBird.User>|null>([]);\n  const [participantListQuery, setParticipantListQuery] = useState<SendBird.ParticipantListQuery | null>(null);\n  useEffect(() => {\n    if (!channel || !channel.createParticipantListQuery) {\n      return;\n    }\n    const participantListQuery = channel.createParticipantListQuery();\n    setParticipantListQuery(participantListQuery);\n    participantListQuery.next((participantList, error) => {\n      if (error) {\n        return;\n      }\n      setParticipants(participantList);\n    });\n  }, []);\n  return (\n    <div>\n      <Modal\n        hideFooter\n        onCancel={() => hideModal()}\n        onSubmit={noop}\n        titleText={stringSet.OPEN_CHANNEL_SETTINGS__ALL_PARTICIPANTS_TITLE}\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = participantListQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              participantListQuery.next((fetchedParticipants, error) => {\n                if (error) {\n                  return;\n                }\n                setParticipants([\n                  ...participants,\n                  ...fetchedParticipants,\n                ])\n              });\n            }\n          }}\n        >\n          { participants.map((p) => (\n            <UserListItem\n              user={p}\n              key={p.userId}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  )\n}\n","import React, {\n  ReactElement,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react'\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\n\nimport { UserProfileContext } from '../../../lib/UserProfileContext';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../ui/Button';\nimport Accordion from '../../../ui/Accordion';\nimport Icon, { IconTypes, IconColors } from '../../../ui/Icon';\nimport Avatar from '../../../ui/Avatar/index';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport ParticipantsModal from './ParticipantsModal';\nimport UserProfile from '../../../ui/UserProfile';\nimport ContextMenu, { MenuItems } from '../../../ui/ContextMenu';\n\nconst SHOWN_MEMBER_MAX = 10;\n\ninterface UserListItemProps {\n  member: SendBird.User;\n  currentUser?: string;\n}\n\nexport const UserListItem = ({\n  member,\n  currentUser = '',\n}: UserListItemProps): ReactElement => {\n  const avatarRef = useRef(null);\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = useContext(UserProfileContext);\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-participants-accordion__member\">\n      <div className=\"sendbird-participants-accordion__member-avatar\">\n        <ContextMenu\n          menuTrigger={(toggleDropdown) => (\n            <Avatar\n              onClick={() => {\n                if (!disableUserProfile) {\n                  toggleDropdown();\n                }\n              }}\n              ref={avatarRef}\n              src={member.profileUrl}\n              width={24}\n              height={24}\n            />\n          )}\n          menuItems={(closeDropdown) => (\n            <MenuItems\n              openLeft\n              parentRef={avatarRef}\n              // for catching location(x, y) of MenuItems\n              parentContainRef={avatarRef}\n              // for toggling more options(menus & reactions)\n              closeDropdown={closeDropdown}\n              style={{ paddingTop: 0, paddingBottom: 0 }}\n            >\n              {\n                renderUserProfile\n                  ? renderUserProfile({\n                    user: member,\n                    currentUserId: currentUser,\n                    close: closeDropdown,\n                  })\n                  : (\n                    <UserProfile\n                      disableMessaging\n                      user={member}\n                      currentUserId={currentUser}\n                      onSuccess={closeDropdown}\n                    />\n                  )\n              }\n            </MenuItems>\n          )}\n        />\n      </div>\n      <Label type={LabelTypography.SUBTITLE_2} color={LabelColors.ONBACKGROUND_1}>\n        {member.nickname || stringSet.NO_NAME}\n        {\n          (currentUser === member.userId) && (\n            stringSet.YOU\n          )\n        }\n      </Label>\n    </div>\n  );\n};\n\ninterface Props {\n  channel: SendBird.OpenChannel;\n  currentUser: string;\n}\n\nexport default function ParticipantsAccordion({ channel, currentUser }: Props): ReactElement {\n  const [participants, setParticipants] = useState([]);\n  const [showMoreModal, setShowMoreModal] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n\n  useEffect(() => {\n    if (!channel || !channel.createParticipantListQuery) {\n      return;\n    }\n    const participantListQuery = channel.createParticipantListQuery();\n    participantListQuery.next((participantList, error) => {\n      if (error) {\n        return;\n      }\n      setParticipants(participantList);\n    });\n  }, [channel]);\n\n  return (\n    <Accordion\n      className=\"sendbird-participants-accordion\"\n      id=\"participants\"\n      renderTitle={() => (\n        <>\n          <Icon\n            type={IconTypes.MEMBERS}\n            fillColor={IconColors.PRIMARY}\n            width={24}\n            height={24}\n            className=\"sendbird-openchannel-settings__accordion-icon\"\n          />\n          <Label\n            type={LabelTypography.SUBTITLE_1}\n            color={LabelColors.ONBACKGROUND_1}\n          >\n            {stringSet.OPEN_CHANNEL_SETTINGS__PARTICIPANTS_ACCORDION_TITLE}\n          </Label>\n        </>\n      )}\n      renderContent={() => (\n        <div className=\"\">\n          <div className=\"sendbird-participants-accordion__list\">\n            {\n              participants.slice(0, SHOWN_MEMBER_MAX).map((p) => (\n                <UserListItem\n                  member={p}\n                  currentUser={currentUser}\n                  key={p.userId}\n                />\n              ))\n            }\n            {\n              (participants && participants.length === 0)\n                ? (\n                    <Label\n                      className=\"sendbird-channel-settings__empty-list\"\n                      type={LabelTypography.SUBTITLE_2}\n                      color={LabelColors.ONBACKGROUND_3}\n                    >\n                      {stringSet.OPEN_CHANNEL_SETTINGS__EMPTY_LIST}\n                    </Label>\n                ): null\n            }\n          </div>\n          {\n            participants.length >= SHOWN_MEMBER_MAX && (\n              <div className=\"sendbird-participants-accordion__footer\">\n                <Button\n                  className=\"sendbird-participants-accordion__footer__all-participants\"\n                  type={ButtonTypes.SECONDARY}\n                  size={ButtonSizes.SMALL}\n                  onClick={() => setShowMoreModal(true)}\n                >\n                  {stringSet.OPEN_CHANNEL_SETTINGS__SEE_ALL}\n                </Button>\n                {\n                  showMoreModal && (\n                    <ParticipantsModal\n                      currentUser={currentUser}\n                      hideModal={() => {\n                        setShowMoreModal(false);\n                      }}\n                      channel={channel}\n                    />\n                  )\n                }\n              </div>\n            )\n          }\n        </div>\n      )}\n    />\n  );\n}\n","import React, {\n  ReactElement,\n  useState,\n  useContext,\n} from 'react';\n\nimport Modal from '../../../ui/Modal';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport Icon, { IconTypes } from '../../../ui/Icon';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\n\ninterface Props {\n  isOnline: boolean;\n  onDeleteChannel(): void;\n}\n\nexport default function DeleteChannel({\n  isOnline,\n  onDeleteChannel,\n}: Props): ReactElement {\n  const [showDeleteChannelModal, setShowDeleteChannelModal] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <>\n      <div\n        className={\n          `sendbird-openchannel-settings__panel-item\n          sendbird-openchannel-settings__delete-channel\n            ${!isOnline ? 'sendbird-openchannel-settings__panel-item__disabled' : ''}`\n        }\n        role=\"button\"\n        tabIndex={0}\n        onKeyDown={() => {\n          if (!isOnline) { return; }\n          setShowDeleteChannelModal(true);\n        }}\n        onClick={() => {\n          if (!isOnline) { return; }\n          setShowDeleteChannelModal(true);\n        }}\n      >\n        <Icon\n          type={IconTypes.DELETE}\n          className={[\n            'sendbird-openchannel-settings__panel-icon-left',\n            'sendbird-openchannel-settings__panel-icon__delete',\n          ].join(' ')}\n          height=\"24px\"\n          width=\"24px\"\n        />\n        <Label\n          type={LabelTypography.SUBTITLE_1}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {stringSet.OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_PANEL}\n        </Label>\n      </div>\n      {\n        showDeleteChannelModal && (\n          <Modal\n            onCancel={() => {\n              setShowDeleteChannelModal(false);\n            }}\n            onSubmit={() => {\n              onDeleteChannel();\n            }}\n            submitText={stringSet.OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_SUBMIT}\n            titleText={stringSet.OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_TITLE}\n          />\n        )\n      }\n    </>\n  )\n}\n","import React, {\n  ReactElement,\n  useContext,\n  useState,\n  useEffect,\n} from 'react';\n\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport Icon, { IconTypes } from '../../../ui/Icon';\n\nimport { UserListItem } from './ParticipantsAccordion';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\n\ninterface Props {\n  channel: SendBird.OpenChannel;\n  onCloseClick(): void;\n  currentUser: string;\n}\n\nexport default function ParticipantsList({\n  channel,\n  onCloseClick,\n  currentUser,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  const [participants, setParticipants] = useState<Array<SendBird.User>|null>([]);\n  const [participantListQuery, setParticipantListQuery] = useState<SendBird.ParticipantListQuery | null>(null);\n  useEffect(() => {\n    if (!channel || !channel.createParticipantListQuery) {\n      return;\n    }\n    const participantListQuery = channel.createParticipantListQuery();\n    setParticipantListQuery(participantListQuery);\n    participantListQuery.next((participantList, error) => {\n      if (error) {\n        return;\n      }\n      setParticipants(participantList);\n    });\n  }, [channel]);\n  return (\n    <div className=\"sendbird-openchannel-settings__participant\">\n      <div className=\"sendbird-openchannel-settings__header\">\n        <Label type={LabelTypography.H_2} color={LabelColors.ONBACKGROUND_1}>\n          {stringSet.OPEN_CHANNEL_SETTINGS__PARTICIPANTS_TITLE}\n        </Label>\n        <Icon\n          type={IconTypes.CLOSE}\n          className=\"sendbird-openchannel-settings__close-icon\"\n          height=\"24px\"\n          width=\"24px\"\n          onClick={() => {\n            onCloseClick();\n          }}\n        />\n      </div>\n      <div\n        className=\"sendbird-openchannel-settings__participants-list\"\n        onScroll={(e) => {\n          const { hasNext } = participantListQuery;\n          const target = e.target as HTMLTextAreaElement;\n          const fetchMore = (\n            target.clientHeight + target.scrollTop === target.scrollHeight\n          );\n\n          if (hasNext && fetchMore) {\n            participantListQuery.next((fetchedParticipants, error) => {\n              if (error) {\n                return;\n              }\n              setParticipants([\n                ...participants,\n                ...fetchedParticipants,\n              ])\n            });\n          }\n        }}\n      >\n        <div>\n          {\n            participants.map((p: SendBird.User) => (\n              <UserListItem\n                member={p}\n                currentUser={currentUser}\n                key={p.userId}\n              />\n            ))\n          }\n          {\n            (participants && participants.length === 0)\n              ? (\n                  <Label\n                    className=\"sendbird-channel-settings__empty-list\"\n                    type={LabelTypography.SUBTITLE_2}\n                    color={LabelColors.ONBACKGROUND_3}\n                  >\n                    {stringSet.OPEN_CHANNEL_SETTINGS__EMPTY_LIST}\n                  </Label>\n              ): null\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { ReactElement, useContext } from 'react'\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\n\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport Icon, { IconTypes } from '../../../ui/Icon';\n\nimport PlaceHolder from '../../../ui/PlaceHolder';\nimport PlaceHolderTypes from '../../../ui/PlaceHolder/type';\n\ninterface Props {\n  onCloseClick?(): void;\n}\n\nexport default function InvalidChannel({\n  onCloseClick,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-openchannel-settings\">\n      <div className=\"sendbird-openchannel-settings__header\">\n        <Label type={LabelTypography.H_2} color={LabelColors.ONBACKGROUND_1}>\n          {stringSet.CHANNEL_SETTING__HEADER__TITLE}\n        </Label>\n        <Icon\n          type={IconTypes.CLOSE}\n          className=\"sendbird-openchannel-settings__close-icon\"\n          height=\"24px\"\n          width=\"24px\"\n          onClick={() => {\n            onCloseClick();\n          }}\n        />\n      </div>\n      <div className=\"sendbird-openchannel-settings__placeholder\">\n        <PlaceHolder type={PlaceHolderTypes.WRONG} />\n      </div>\n    </div>\n  )\n}\n","import React, {\n  useContext,\n  useState,\n  useEffect,\n} from 'react';\nimport { OpenChannelSettingsProps } from '../../index';\n\nimport { UserProfileProvider } from '../../lib/UserProfileContext';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport withSendbirdContext from '../../lib/SendbirdSdkContext';\nimport selectors from '../../lib/selectors';\n\nimport { copyToClipboard } from '../../utils'\n\nimport './index.scss';\nimport Label, { LabelTypography, LabelColors } from '../../ui/Label';\nimport Icon, { IconTypes } from '../../ui/Icon';\nimport ChannelProfile from './components/ChannelProfile';\nimport ParticipantsAccordion from './components/ParticipantsAccordion';\nimport DeleteChannel from './components/DeleteChannel';\nimport ParticipantsList from './components/ParticipantsList';\nimport InvalidChannel from './components/InvalidChannel';\nimport { AccordionGroup } from '../../ui/Accordion';\nimport { noop } from '../../utils/utils';\n\nconst emptyLogger = () => ({\n  info: noop,\n  error: noop,\n  warning: noop,\n});\n\ninterface Props extends OpenChannelSettingsProps {\n  logger: SendbirdUIKit.Logger;\n  sdk: SendBird.SendBirdInstance;\n  theme: string;\n  user: SendBird.User;\n  isOnline: boolean;\n}\n\nfunction OpenChannelSettings(props: Props) {\n  const {\n    channelUrl,\n    onCloseClick = noop,\n    onBeforeUpdateChannel,\n    onChannelModified = noop,\n    renderChannelProfile,\n    renderUserProfile,\n    onDeleteChannel,\n    disableUserProfile = false,\n    logger = emptyLogger(),\n    sdk,\n    theme,\n    user,\n    isOnline,\n  } = props;\n\n  const currentUser = user.userId;\n  const [channel, setChannel] = useState<SendBird.OpenChannel | null>(null);\n  const { stringSet } = useContext(LocalizationContext);\n  useEffect(() => {\n    if (!channelUrl || !sdk || !sdk.getConnectionState) {\n      setChannel(null);\n      return;\n    }\n\n    sdk.OpenChannel.getChannel(channelUrl, (openChannel, error) => {\n      if (!error) {\n        setChannel(openChannel);\n      } else {\n        setChannel(null);\n      }\n    });\n  }, [channelUrl, sdk])\n  if (!channel) {\n    return (\n      <InvalidChannel\n        onCloseClick={() => {\n          logger.info('OpenChannelSettings: Click close');\n          if (onCloseClick) {\n            onCloseClick();\n          }\n        }}\n      />\n    );\n  }\n  return (\n    <UserProfileProvider\n      className=\"sendbird-openchannel-settings\"\n      disableUserProfile={disableUserProfile}\n      renderUserProfile={renderUserProfile}\n    >\n      {\n        channel.isOperator(user)\n          ? (\n            <>\n              <div className=\"sendbird-openchannel-settings__header\">\n                <Label type={LabelTypography.H_2} color={LabelColors.ONBACKGROUND_1}>\n                  {stringSet.CHANNEL_SETTING__HEADER__TITLE}\n                </Label>\n                <Icon\n                  className=\"sendbird-openchannel-settings__close-icon\"\n                  type={IconTypes.CLOSE}\n                  height=\"24px\"\n                  width=\"24px\"\n                  onClick={() => {\n                    onCloseClick();\n                  }}\n                />\n              </div>\n              <div className=\"sendbird-openchannel-settings__profile\">\n              {\n                renderChannelProfile\n                  ? renderChannelProfile({ channel, user })\n                  : (\n                    <ChannelProfile\n                      disabled={!isOnline}\n                      channel={channel}\n                      theme={theme}\n                      onChannelInfoChange={(currentImg: File, currentTitle: string) => {\n                        logger.info('ChannelSettings: Channel information being updated');\n                        if (onBeforeUpdateChannel) {\n                          const params = onBeforeUpdateChannel(currentTitle, currentImg, channel.data);\n                          logger.info('ChannelSettings: onBeforeUpdateChannel', params);\n                          channel.updateChannel(params, (openChannel) => {\n                            onChannelModified(openChannel);\n                            // setChannel(openChannel) => alone not working\n                            setChannel(null);\n                            setChannel(openChannel);\n                          });\n                        } else {\n                          channel.updateChannel(\n                            currentTitle,\n                            currentImg,\n                            channel.data,\n                            (openChannel) => {\n                              logger.info('ChannelSettings: Channel information updated', openChannel);\n                              onChannelModified(openChannel);\n                              // setChannel(openChannel) => alone not working\n                              setChannel(null);\n                              setChannel(openChannel);\n                            },\n                          );\n                        }\n                      }}\n                    />\n                  )\n                }\n              </div>\n              <div className=\"sendbird-openchannel-settings__url\">\n                <Icon\n                  className=\"sendbird-openchannel-settings__copy-icon\"\n                  type={IconTypes.COPY}\n                  height=\"22px\"\n                  width=\"22px\"\n                  onClick={() => {\n                    copyToClipboard(channel.url);\n                  }}\n                />\n                <Label\n                  className=\"sendbird-openchannel-settings__url-label\"\n                  type={LabelTypography.CAPTION_2}\n                  color={LabelColors.ONBACKGROUND_2}\n                >\n                  {stringSet.OPEN_CHANNEL_SETTINGS__OPERATOR_URL}\n                </Label>\n                <Label\n                  className=\"sendbird-openchannel-settings__url-value\"\n                  type={LabelTypography.SUBTITLE_2}\n                >\n                  {channel.url}\n                </Label>\n              </div>\n              <AccordionGroup>\n                <ParticipantsAccordion\n                  channel={channel}\n                  currentUser={currentUser}\n                />\n              </AccordionGroup>\n              <DeleteChannel\n                isOnline={isOnline}\n                onDeleteChannel={() => {\n                  channel.delete((response, error) => {\n                    if (error) {\n                      logger.warning('OpenChannelSettings: Delete channel failed', error);\n                      return;\n                    }\n                    logger.info('OpenChannelSettings: Delete channel success', response);\n                    if (onDeleteChannel) {\n                      onDeleteChannel(channel);\n                    }\n                  });\n                }}\n              />\n            </>\n          ) : (\n            <ParticipantsList\n              currentUser={currentUser}\n              channel={channel}\n              onCloseClick={() => {\n                onCloseClick();\n              }}\n            />\n          )\n      }\n    </UserProfileProvider>\n  )\n}\n\nconst ChannelSettingsWithSendbird = withSendbirdContext(OpenChannelSettings, (store) => {\n  const logger = (store && store.config && store.config.logger);\n  const theme = (store && store.config && store.config.theme) || 'light';\n  const isOnline = (store && store.config && store.config.isOnline);\n  const user = (store && store.stores && store.stores.userStore\n    && store.stores.userStore.user);\n  return {\n    sdk: selectors.getSdk(store),\n    logger,\n    theme,\n    isOnline,\n    user,\n  };\n});\n\nexport default ChannelSettingsWithSendbird;\n"],"names":["ChannelAvatar","_a","channel","theme","_b","height","_c","width","stringSet","useContext","LocalizationContext","memoizedAvatar","useMemo","React","Avatar","utils","name","OPEN_CHANNEL_SETTINGS__NO_TITLE","coverUrl","EditDetails","props","onSubmit","onCancel","inputRef","useRef","formRef","hiddenInputRef","useState","currentImg","setCurrentImg","newFile","setNewFile","title","Modal","MODAL__CHANNEL_INFORMATION__TITLE","BUTTON__SAVE","current","value","reportValidity","ButtonType","PRIMARY","e","preventDefault","InputLabel","MODAL__CHANNEL_INFORMATION__CHANNEL_IMAGE","OpenChannelAvatar","display","URL","createObjectURL","target","files","TextButton","click","Label","LabelTypography","BUTTON_1","LabelColors","MODAL__CHANNEL_INFORMATION__UPLOAD","MODAL__CHANNEL_INFORMATION__CHANNEL_NAME","Input","MODAL__CHANNEL_INFORMATION__INPUT__PLACE_HOLDER","ChannelProfile","disabled","onChannelInfoChange","showModal","setShowModal","SUBTITLE_2","ONBACKGROUND_1","ONBACKGROUND_2","CHANNEL_SETTING__PROFILE__EDIT","EditDetailsModal","ParticipantsModal","hideModal","participants","setParticipants","participantListQuery","setParticipantListQuery","useEffect","createParticipantListQuery","next","participantList","error","noop","OPEN_CHANNEL_SETTINGS__ALL_PARTICIPANTS_TITLE","hasNext","fetchMore","clientHeight","scrollTop","scrollHeight","fetchedParticipants","map","p","UserListItem","userId","SHOWN_MEMBER_MAX","member","currentUser","avatarRef","UserProfileContext","disableUserProfile","renderUserProfile","ContextMenu","toggleDropdown","profileUrl","closeDropdown","MenuItems","paddingTop","paddingBottom","user","currentUserId","close","UserProfile","nickname","NO_NAME","YOU","ParticipantsAccordion","showMoreModal","setShowMoreModal","Accordion","Icon","IconTypes","MEMBERS","IconColors","SUBTITLE_1","OPEN_CHANNEL_SETTINGS__PARTICIPANTS_ACCORDION_TITLE","slice","length","ONBACKGROUND_3","OPEN_CHANNEL_SETTINGS__EMPTY_LIST","Button","ButtonTypes","SECONDARY","ButtonSizes","SMALL","OPEN_CHANNEL_SETTINGS__SEE_ALL","DeleteChannel","isOnline","onDeleteChannel","showDeleteChannelModal","setShowDeleteChannelModal","DELETE","join","OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_PANEL","OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_SUBMIT","OPEN_CHANNEL_SETTINGS__DELETE_CHANNEL_TITLE","ParticipantsList","onCloseClick","H_2","OPEN_CHANNEL_SETTINGS__PARTICIPANTS_TITLE","CLOSE","InvalidChannel","CHANNEL_SETTING__HEADER__TITLE","PlaceHolder","PlaceHolderTypes","WRONG","emptyLogger","info","warning","OpenChannelSettings","channelUrl","onBeforeUpdateChannel","onChannelModified","renderChannelProfile","_d","logger","sdk","_e","setChannel","getConnectionState","OpenChannel","getChannel","openChannel","UserProfileProvider","isOperator","currentTitle","params","data","updateChannel","COPY","copyToClipboard","url","CAPTION_2","OPEN_CHANNEL_SETTINGS__OPERATOR_URL","AccordionGroup","delete","response","ChannelSettingsWithSendbird","withSendbirdContext","store","config","stores","userStore","selectors","getSdk"],"mappings":"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"}