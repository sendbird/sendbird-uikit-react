{"version":3,"file":"ChannelSettings.js","sources":["../../../src/smart-components/ChannelSettings/components/EditDetails.jsx","../../../src/smart-components/ChannelSettings/components/ChannelProfile.jsx","../../../src/smart-components/ChannelSettings/components/AdminPanel/MembersModal.tsx","../../../src/smart-components/ChannelSettings/components/MembersAccordion.jsx","../../../src/smart-components/ChannelSettings/components/UserListItem.tsx","../../../src/smart-components/ChannelSettings/components/AdminPanel/OperatorsModal.tsx","../../../src/smart-components/ChannelSettings/components/AdminPanel/AddOperatorsModal.tsx","../../../src/smart-components/ChannelSettings/components/AdminPanel/OperatorList.tsx","../../../src/smart-components/ChannelSettings/components/AdminPanel/InviteMembersModal.tsx","../../../src/smart-components/ChannelSettings/components/AdminPanel/MemberList.tsx","../../../src/smart-components/ChannelSettings/components/AdminPanel/BannedMembersModal.tsx","../../../src/smart-components/ChannelSettings/components/AdminPanel/BannedMemberList.tsx","../../../src/smart-components/ChannelSettings/components/AdminPanel/MutedMembersModal.tsx","../../../src/smart-components/ChannelSettings/components/AdminPanel/MutedMemberList.tsx","../../../src/smart-components/ChannelSettings/components/AdminPanel/index.tsx","../../../src/smart-components/ChannelSettings/index.jsx"],"sourcesContent":["import React, { useState, useRef, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Modal from '../../../ui/Modal';\nimport Input, { InputLabel } from '../../../ui/Input';\nimport Avatar from '../../../ui/Avatar/index';\nimport { Type as ButtonType } from '../../../ui/Button/type';\nimport Label, { LabelColors, LabelTypography } from '../../../ui/Label';\nimport TextButton from '../../../ui/TextButton';\nimport ChannelAvatar from '../../../ui/ChannelAvatar/index';\n\nconst EditDetails = (props) => {\n  const {\n    onSubmit,\n    onCancel,\n    channel,\n    userId,\n    theme,\n  } = props;\n  const inputRef = useRef(null);\n  const formRef = useRef(null);\n  const hiddenInputRef = useRef(null);\n  const [currentImg, setCurrentImg] = useState(null);\n  const [newFile, setNewFile] = useState(null);\n  const { stringSet } = useContext(LocalizationContext);\n  const title = channel.name;\n  return (\n    <Modal\n      titleText={stringSet.MODAL__CHANNEL_INFORMATION__TITLE}\n      submitText={stringSet.BUTTON__SAVE}\n      onCancel={onCancel}\n      onSubmit={() => {\n        if (title !== '' && !inputRef.current.value) {\n          if (formRef.current.reportValidity) { // might not work in explorer\n            formRef.current.reportValidity();\n          }\n          return;\n        }\n        onSubmit(newFile, inputRef.current.value);\n        onCancel();\n      }}\n      type={ButtonType.PRIMARY}\n    >\n      <form\n        className=\"channel-profile-form\"\n        ref={formRef}\n        onSubmit={(e) => { e.preventDefault(); }}\n      >\n        <div className=\"channel-profile-form__img-section\">\n          <InputLabel>\n            {stringSet.MODAL__CHANNEL_INFORMATION__CHANNEL_IMAGE}\n          </InputLabel>\n          <div className=\"channel-profile-form__avatar\">\n            {\n              currentImg\n                ? (\n                  <Avatar\n                    height=\"80px\"\n                    width=\"80px\"\n                    src={currentImg}\n                  />\n                ) : (\n                  <ChannelAvatar\n                    height={80}\n                    width={80}\n                    channel={channel}\n                    userId={userId}\n                    theme={theme}\n                  />\n                )\n              }\n          </div>\n          <input\n            ref={hiddenInputRef}\n            type=\"file\"\n            accept=\"image/gif, image/jpeg, image/png\"\n            style={{ display: 'none' }}\n            onChange={(e) => {\n              setCurrentImg(URL.createObjectURL(e.target.files[0]));\n              setNewFile(e.target.files[0]);\n              hiddenInputRef.current.value = '';\n            }}\n          />\n          <TextButton\n            className=\"channel-profile-form__avatar-button\"\n            onClick={() => hiddenInputRef.current.click()}\n            notUnderline\n          >\n            <Label type={LabelTypography.BUTTON_1} color={LabelColors.PRIMARY}>\n              {stringSet.MODAL__CHANNEL_INFORMATION__UPLOAD}\n            </Label>\n          </TextButton>\n        </div>\n        <div className=\"channel-profile-form__name-section\">\n          <InputLabel>\n            {stringSet.MODAL__CHANNEL_INFORMATION__CHANNEL_NAME}\n          </InputLabel>\n          <Input\n            required={title !== ''}\n            name=\"channel-profile-form__name\"\n            ref={inputRef}\n            value={title}\n            placeHolder={stringSet.MODAL__CHANNEL_INFORMATION__INPUT__PLACE_HOLDER}\n          />\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nEditDetails.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  channel: PropTypes.shape({\n    name: PropTypes.string,\n  }).isRequired,\n  userId: PropTypes.string.isRequired,\n  theme: PropTypes.string.isRequired,\n};\n\nexport default EditDetails;\n","import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './channel-profile.scss';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Label, { LabelColors, LabelTypography } from '../../../ui/Label';\nimport EditDetailsModal from './EditDetails';\nimport TextButton from '../../../ui/TextButton';\nimport ChannelAvatar from '../../../ui/ChannelAvatar/index';\n\nconst ChannelProfile = (props) => {\n  const {\n    disabled,\n    channel,\n    userId,\n    theme,\n    onChannelInfoChange,\n  } = props;\n  const [showModal, setShowModal] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n\n  const getChannelName = () => {\n    if (channel && channel.name && channel.name !== 'Group Channel') {\n      return channel.name;\n    }\n    if (channel && (channel.name === 'Group Channel' || !channel.name)) {\n      return channel.members.map((member) => member.nickname || stringSet.NO_NAME).join(', ');\n    }\n    return stringSet.NO_TITLE;\n  };\n\n  return (\n    <div className=\"sendbird-channel-profile\">\n      <div className=\"sendbird-channel-profile--inner\">\n        <div className=\"sendbird-channel-profile__avatar\">\n          <ChannelAvatar\n            channel={channel}\n            userId={userId}\n            theme={theme}\n            width={80}\n            height={80}\n          />\n        </div>\n        <Label\n          className=\"sendbird-channel-profile__title\"\n          type={LabelTypography.SUBTITLE_2}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {getChannelName()}\n        </Label>\n        <TextButton\n          disabled={disabled}\n          className=\"sendbird-channel-profile__edit\"\n          onClick={() => {\n            if (disabled) { return; }\n            setShowModal(true);\n          }}\n          notUnderline\n        >\n          <Label\n            type={LabelTypography.BUTTON_1}\n            color={disabled ? LabelColors.ONBACKGROUND_2 : LabelColors.PRIMARY}\n          >\n            {stringSet.CHANNEL_SETTING__PROFILE__EDIT}\n          </Label>\n        </TextButton>\n        {\n          showModal && (\n            <EditDetailsModal\n              onCancel={() => setShowModal(false)}\n              onSubmit={onChannelInfoChange}\n              channel={channel}\n              userId={userId}\n              theme={theme}\n            />\n          )\n        }\n      </div>\n    </div>\n  );\n};\n\nChannelProfile.propTypes = {\n  channel: PropTypes.shape({\n    name: PropTypes.string,\n    members: PropTypes.arrayOf(\n      PropTypes.shape({\n        nickname: PropTypes.string,\n      }),\n    ),\n  }).isRequired,\n  userId: PropTypes.string.isRequired,\n  theme: PropTypes.string,\n  disabled: PropTypes.bool,\n  onChannelInfoChange: PropTypes.func,\n};\n\nChannelProfile.defaultProps = {\n  theme: 'light',\n  disabled: false,\n  onChannelInfoChange: () => { },\n};\n\nexport default ChannelProfile;\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react'\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport { noop } from '../../../../utils/utils';\n\ninterface Props {\n  hideModal(): void;\n  currentUser?: string;\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport default function MembersModal({\n  hideModal,\n  channel,\n  currentUser,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [memberQuery, setMemberQuery] = useState(null);\n\n  useEffect(() => {\n    const memberListQuery = channel.createMemberListQuery();\n    memberListQuery.limit = 20;\n    memberListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n    });\n    setMemberQuery(memberListQuery);\n  }, [])\n  return (\n    <div>\n      <Modal\n        hideFooter\n        onCancel={() => hideModal()}\n        onSubmit={noop}\n        titleText=\"All Members\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              user={member}\n              key={member.userId}\n              currentUser={currentUser}\n              action={({ parentRef, actionRef }) => (\n                <>\n                  {channel.myRole === 'operator' && (\n                    <ContextMenu\n                      menuTrigger={(toggleDropdown) => (\n                        <IconButton\n                          className=\"sendbird-user-message__more__menu\"\n                          width=\"32px\"\n                          height=\"32px\"\n                          onClick={toggleDropdown}\n                        >\n                          <Icon\n                            width=\"24px\"\n                            height=\"24px\"\n                            type={IconTypes.MORE}\n                            fillColor={IconColors.CONTENT_INVERSE}\n                          />\n                        </IconButton>\n                      )}\n                      menuItems={(closeDropdown) => (\n                        <MenuItems\n                          parentContainRef={parentRef}\n                          parentRef={actionRef} // for catching location(x, y) of MenuItems\n                          closeDropdown={closeDropdown}\n                          openLeft\n                        >\n                          <MenuItem\n                            onClick={() => {\n                              if ((member.role !== 'operator')) {\n                                channel.addOperators([member.userId], () => {\n                                  setMembers(members.map(m => {\n                                    if(m.userId === member.userId) {\n                                      return {\n                                        ...member,\n                                        role: 'operator',\n                                      };\n                                    }\n                                    return m;\n                                  }));\n                                  closeDropdown();\n                                });\n                              } else {\n                                channel.removeOperators([member.userId], () => {\n                                  setMembers(members.map(m => {\n                                    if(m.userId === member.userId) {\n                                      return {\n                                        ...member,\n                                        role: '',\n                                      };\n                                    }\n                                    return m;\n                                  }));\n                                  closeDropdown();\n                                });\n                              }\n                            }}\n                          >\n                            { member.role !== 'operator' ? 'Promote to operator' : 'Demote operator'}\n                          </MenuItem>\n                          {\n                            // No muted members in broadcast channel\n                            !channel.isBroadcast && (\n                              <MenuItem\n                                onClick={() => {\n                                  if (member.isMuted) {\n                                    channel.unmuteUser(member, () => {\n                                      setMembers(members.map(m => {\n                                        if(m.userId === member.userId) {\n                                          return {\n                                            ...member,\n                                            isMuted: false,\n                                          };\n                                        }\n                                        return m;\n                                      }));\n                                      closeDropdown();\n                                    })\n                                  } else {\n                                    channel.muteUser(member, () => {\n                                      setMembers(members.map(m => {\n                                        if(m.userId === member.userId) {\n                                          return {\n                                            ...member,\n                                            isMuted: true,\n                                          };\n                                        }\n                                        return m;\n                                      }));\n                                      closeDropdown();\n                                    });\n                                  }\n                                }}\n                              >\n                                { member.isMuted ? 'Unmute' : 'Mute' }\n                              </MenuItem>\n                            )\n                          }\n                          <MenuItem\n                            onClick={() => {\n                              channel.banUser(member, -1, '', () => {\n                                setMembers(members.filter(({ userId }) => {\n                                  return userId !== member.userId;\n                                }));\n                              });\n                            }}\n                          >\n                            Ban\n                          </MenuItem>\n                        </MenuItems>\n                      )}\n                    />\n                  )}\n                </>\n              )}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, { useState, useRef, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './members-accordion.scss';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport { UserProfileContext } from '../../../lib/UserProfileContext';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../ui/Button';\nimport Avatar from '../../../ui/Avatar/index';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport InviteMembers from '../../InviteMembers';\nimport MembersModal from './AdminPanel/MembersModal';\nimport UserProfile from '../../../ui/UserProfile';\nimport ContextMenu, { MenuItems } from '../../../ui/ContextMenu';\n\nconst SHOWN_MEMBER_MAX = 10;\n\nconst UserListItem = ({ member = {}, currentUser = '' }) => {\n  const avatarRef = useRef(null);\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = useContext(UserProfileContext);\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-members-accordion__member\">\n      <div className=\"sendbird-members-accordion__member-avatar\">\n        <ContextMenu\n          menuTrigger={(toggleDropdown) => (\n            <Avatar\n              onClick={() => {\n                if (!disableUserProfile) {\n                  toggleDropdown();\n                }\n              }}\n              ref={avatarRef}\n              src={member.profileUrl}\n              width={24}\n              height={24}\n            />\n          )}\n          menuItems={(closeDropdown) => (\n            <MenuItems\n              openLeft\n              parentRef={avatarRef}\n              // for catching location(x, y) of MenuItems\n              parentContainRef={avatarRef}\n              // for toggling more options(menus & reactions)\n              closeDropdown={closeDropdown}\n              style={{ paddingTop: 0, paddingBottom: 0 }}\n            >\n              {\n                renderUserProfile\n                  ? renderUserProfile({\n                    user: member,\n                    currentUserId: currentUser,\n                    close: closeDropdown,\n                  })\n                  : (\n                    <UserProfile\n                      user={member}\n                      currentUserId={currentUser}\n                      onSuccess={closeDropdown}\n                    />\n                  )\n              }\n            </MenuItems>\n          )}\n        />\n      </div>\n      <Label type={LabelTypography.SUBTITLE_2} color={LabelColors.ONBACKGROUND_1}>\n        {member.nickname || stringSet.NO_NAME}\n        {\n          (currentUser === member.userId) && (\n            stringSet.YOU\n          )\n        }\n      </Label>\n    </div>\n  );\n};\n\nUserListItem.propTypes = {\n  member: PropTypes.shape({\n    userId: PropTypes.string,\n    profileUrl: PropTypes.string,\n    nickname: PropTypes.string,\n  }).isRequired,\n  currentUser: PropTypes.string.isRequired,\n};\n\nconst MembersAccordion = ({\n  channel,\n  disabled,\n  currentUser,\n  userQueryCreator,\n  onInviteMembers,\n  swapParams,\n}) => {\n  const members = channel.members || [];\n  const [showMoreModal, setShowMoreModal] = useState(false);\n  const [showAddUserModal, setShowAddUserModal] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-members-accordion\">\n      <div className=\"sendbird-members-accordion__list\">\n        {\n          members.slice(0, SHOWN_MEMBER_MAX).map((member) => (\n            <UserListItem\n              member={member}\n              currentUser={currentUser}\n              key={member.userId}\n            />\n          ))\n        }\n      </div>\n      <div className=\"sendbird-members-accordion__footer\">\n        {\n          members.length >= SHOWN_MEMBER_MAX && (\n            <Button\n              className=\"sendbird-members-accordion__footer__all-members\"\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => setShowMoreModal(true)}\n            >\n              {stringSet.CHANNEL_SETTING__MEMBERS__SEE_ALL_MEMBERS}\n            </Button>\n          )\n        }\n        {\n          members.length >= SHOWN_MEMBER_MAX && showMoreModal && (\n            <MembersModal\n              currentUser={currentUser}\n              hideModal={() => {\n                setShowMoreModal(false);\n              }}\n              channel={channel}\n            />\n          )\n        }\n        <Button\n          className=\"sendbird-members-accordion__footer__invite-users\"\n          type={ButtonTypes.SECONDARY}\n          size={ButtonSizes.SMALL}\n          disabled={disabled}\n          onClick={() => {\n            if (disabled) { return; }\n            setShowAddUserModal(true);\n          }}\n        >\n          {stringSet.CHANNEL_SETTING__MEMBERS__INVITE_MEMBER}\n        </Button>\n        {\n          showAddUserModal && (\n            <InviteMembers\n              swapParams={swapParams}\n              titleText={stringSet.MODAL__INVITE_MEMBER__TITLE}\n              submitText={stringSet.BUTTON__INVITE}\n              closeModal={() => setShowAddUserModal(false)}\n              idsToFilter={members.map((member) => (member.userId))}\n              userQueryCreator={userQueryCreator}\n              onSubmit={onInviteMembers}\n            />\n          )\n        }\n      </div>\n    </div>\n  );\n};\n\nMembersAccordion.propTypes = {\n  swapParams: PropTypes.bool,\n  disabled: PropTypes.bool,\n  channel: PropTypes.shape({\n    members: PropTypes.arrayOf(PropTypes.shape({})),\n  }),\n  currentUser: PropTypes.string,\n  userQueryCreator: PropTypes.func.isRequired,\n  onInviteMembers: PropTypes.func.isRequired,\n};\n\nMembersAccordion.defaultProps = {\n  swapParams: false,\n  currentUser: '',\n  disabled: false,\n  channel: {},\n};\n\nexport default MembersAccordion;\n","// might move to reusable/UI\n\nimport React, { ReactElement, useRef, useContext } from 'react';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport { UserProfileContext } from '../../../lib/UserProfileContext';\nimport Avatar from '../../../ui/Avatar/index';\nimport MutedAvatarOverlay from '../../../ui/Avatar/MutedAvatarOverlay';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport UserProfile from '../../../ui/UserProfile';\nimport ContextMenu, { MenuItems } from '../../../ui/ContextMenu';\n\nimport './user-list-item.scss';\nimport { SendbirdTypes } from '../../../types';\n\nconst COMPONENT_NAME = 'sendbird-user-list-item--small';\n\ninterface ActionProps {\n  actionRef: React.RefObject<HTMLInputElement>;\n  parentRef: React.RefObject<HTMLInputElement>;\n}\n\ntype CustomUser = SendbirdTypes['User'] & {\n  isMuted: boolean;\n  role: string;\n};\n\ninterface Props {\n  user: CustomUser;\n  currentUser?: string;\n  className?: string;\n  action?(props: ActionProps): ReactElement;\n}\n\nconst UserListItem = ({\n  user,\n  className,\n  currentUser,\n  action,\n}: Props): ReactElement => {\n  const actionRef = useRef(null);\n  const parentRef = useRef(null);\n  const avatarRef = useRef(null);\n  const { stringSet } = useContext(LocalizationContext);\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = useContext(UserProfileContext);\n  const injectingClassNames = Array.isArray(className) ? className : [className];\n  return (\n    <div\n      ref={parentRef}\n      className={[\n        COMPONENT_NAME, ...injectingClassNames,\n      ].join(' ')}\n    >\n      {\n        user.isMuted && (\n          <MutedAvatarOverlay />\n        )\n      }\n      <ContextMenu\n        menuTrigger={(toggleDropdown) => (\n          <Avatar\n            onClick={() => {\n              if (!disableUserProfile) {\n                toggleDropdown();\n              }\n            }}\n            ref={avatarRef}\n            className={`${COMPONENT_NAME}__avatar`}\n            src={user.profileUrl}\n            width={24}\n            height={24}\n          />\n        )}\n        menuItems={(closeDropdown) => (\n          <MenuItems\n            openLeft\n            parentRef={avatarRef}\n            // for catching location(x, y) of MenuItems\n            parentContainRef={avatarRef}\n            // for toggling more options(menus & reactions)\n            closeDropdown={closeDropdown}\n            style={{ paddingTop: 0, paddingBottom: 0 }}\n          >\n            {\n              renderUserProfile\n                ? renderUserProfile({\n                  user,\n                  currentUserId: currentUser,\n                  close: closeDropdown,\n                })\n                : (\n                  <UserProfile\n                    user={user}\n                    currentUserId={currentUser}\n                    onSuccess={closeDropdown}\n                  />\n                )\n            }\n          </MenuItems>\n        )}\n      />\n      <Label\n        className={`${COMPONENT_NAME}__title`}\n        type={LabelTypography.SUBTITLE_1}\n        color={LabelColors.ONBACKGROUND_1}\n      >\n        {user.nickname || stringSet.NO_NAME}\n        {\n          (currentUser === user.userId) && (\n            \" (You)\"\n          )\n        }\n      </Label>\n      { // if there is now nickname, display userId\n        !user.nickname && (\n          <Label\n            className={`${COMPONENT_NAME}__subtitle`}\n            type={LabelTypography.CAPTION_3}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {user.userId}\n          </Label>\n        )\n      }\n      {\n        user.role === 'operator' && (\n          <Label\n            className={`${COMPONENT_NAME}__operator`}\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            Operator\n          </Label>\n        )\n      }\n      {\n        action && (\n          <div ref={actionRef} className={`${COMPONENT_NAME}__action`}>\n            { action({ actionRef, parentRef }) }\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nexport default UserListItem;\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react'\n\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport { noop } from '../../../../utils/utils';\n\ninterface Props {\n  hideModal(): void;\n  channel: SendbirdTypes[\"GroupChannel\"];\n  currentUser?: string;\n}\n\nexport default function OperatorsModal({\n  hideModal,\n  channel,\n  currentUser,\n}: Props): ReactElement {\n  const [operators, setOperators] = useState([]);\n  const [operatorQuery, setOperatorQuery] = useState(null);\n\n  useEffect(() => {\n    const operatorListQuery = channel.createOperatorListQuery();\n    operatorListQuery.limit = 20;\n    operatorListQuery.next((operators, error) => {\n      if (error) {\n        return;\n      }\n      setOperators(operators);\n    });\n    setOperatorQuery(operatorListQuery);\n  }, [])\n  return (\n    <div>\n      <Modal\n        hideFooter\n        onCancel={() => hideModal()}\n        onSubmit={noop}\n        titleText=\"All operators\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = operatorQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              operatorQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setOperators([\n                  ...operators,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { operators.map((member) => (\n            <UserListItem\n              currentUser={currentUser}\n              user={member}\n              key={member.userId}\n              action={({ parentRef, actionRef }) => (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.removeOperators([member.userId], (response, error) => {\n                            if (error) {\n                              return;\n                            }\n                            setOperators(operators.filter(({ userId }) => {\n                              return userId !== member.userId;\n                            }));\n                          });\n                          closeDropdown();\n                        }}\n                      >\n                        Dismiss operator\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              )}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  )\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useContext,\n} from 'react'\n\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport Modal from '../../../../ui/Modal';\nimport Label, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport { Type as ButtonType } from '../../../../ui/Button/type';\nimport UserListItem from '../../../../ui/UserListItem';\n\ninterface Props {\n  hideModal(): void;\n  onSubmit(members: Array<string>): void;\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport default function AddOperatorsModal({\n  hideModal,\n  channel,\n  onSubmit,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [selectedMembers, setSelectedMembers] = useState({});\n  const [memberQuery, setMemberQuery] = useState(null);\n  const { stringSet } = useContext(LocalizationContext);\n\n  useEffect(() => {\n    const memberListQuery = channel.createMemberListQuery();\n    memberListQuery.limit = 20;\n    memberListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n    });\n    setMemberQuery(memberListQuery);\n  }, [])\n\n  const selectedCount = Object.keys(selectedMembers).filter((m) => selectedMembers[m]).length;\n  return (\n    <div>\n      <Modal\n        type={ButtonType.PRIMARY}\n        submitText=\"Add\"\n        onCancel={() => hideModal()}\n        onSubmit={() => {\n          const members = Object.keys(selectedMembers).filter((m) => selectedMembers[m]);\n          onSubmit(members);\n        }}\n        titleText=\"Select members\"\n      >\n        <Label\n          color={(selectedCount > 0) ? LabelColors.PRIMARY : LabelColors.ONBACKGROUND_3}\n          type={LabelTypography.CAPTION_1}\n        >\n          {`${selectedCount} ${stringSet.MODAL__INVITE_MEMBER__SELECTEC}`}\n        </Label>\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              checkBox\n              checked={selectedMembers[member.userId]}\n              onChange={\n                (event) => {\n                  const modifiedSelectedMembers = {\n                    ...selectedMembers,\n                    [event.target.id]: event.target.checked,\n                  };\n                  if (!event.target.checked) {\n                    delete modifiedSelectedMembers[event.target.id];\n                  }\n                  setSelectedMembers(modifiedSelectedMembers);\n                }\n              }\n              user={member}\n              key={member.userId}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n  useContext,\n} from 'react';\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport withSendbirdContext from '../../../../lib/SendbirdSdkContext';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport { getSdk } from '../../../../lib/selectors';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport UserListItem from '../UserListItem';\nimport OperatorsModal from './OperatorsModal';\nimport AddOperatorsModal from './AddOperatorsModal';\n\ninterface Props {\n  sdk: SendbirdTypes[\"SendBirdInstance\"];\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport const OperatorList = ({ sdk, channel }: Props): ReactElement => {\n  const [operators, setOperators] = useState([]);\n  const [showMore, setShowMore] = useState(false);\n  const [showAdd, setShowAdd] = useState(false);\n  const [hasNext, setHasNext] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n\n  useEffect(() => {\n    if (!channel) {\n      setOperators([]);\n      return;\n    }\n\n    const operatorListQuery = channel.createOperatorListQuery();\n    operatorListQuery.limit = 10;\n    operatorListQuery.next((operators, error) => {\n      if (error) {\n        return;\n      }\n      setOperators(operators);\n      setHasNext(operatorListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refershList = useCallback(\n    () => {\n      if (!channel) {\n        setOperators([]);\n        return;\n      }\n      const operatorListQuery = channel.createOperatorListQuery();\n      operatorListQuery.limit = 10;\n      operatorListQuery.next((operators, error) => {\n        if (error) {\n          return;\n        }\n        setOperators(operators);\n        setHasNext(operatorListQuery.hasNext);\n      });\n    },\n    [channel],\n  );\n\n  return (\n    <>\n      {\n        operators.map((operator) => (\n          <UserListItem\n            key={operator.userId}\n            user={operator}\n            currentUser={sdk.currentUser.userId}\n            action={({ actionRef, parentRef }) => {\n              return (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.removeOperators([operator.userId], (response, error) => {\n                            if (error) {\n                              return;\n                            }\n                            setOperators(operators.filter(({ userId }) => {\n                              return userId !== operator.userId;\n                            }))\n                          });\n                          closeDropdown();\n                        }}\n                      >\n                        Dismiss operator\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              );\n            }}\n          />\n        ))\n      }\n      {\n        hasNext && (\n          <div\n            className=\"sendbird-channel-settings-accordion__footer\"\n          >\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowMore(true);\n              }}\n            >\n              {stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ALL}\n            </Button>\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowAdd(true);\n              }}\n            >\n              {stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ADD}\n            </Button>\n          </div>\n        )\n      }\n      {\n        showMore && (\n          <OperatorsModal\n            currentUser={sdk.currentUser.userId}\n            hideModal={() => {\n              setShowMore(false);\n              refershList();\n            }}\n            channel={channel}\n          />\n        )\n      }\n      {\n        showAdd && (\n          <AddOperatorsModal\n            hideModal={() => setShowAdd(false)}\n            channel={channel}\n            onSubmit={(members) => {\n              setShowAdd(false);\n              channel.addOperators(members, () => {\n                refershList();\n              });\n            }}\n          />\n        )\n      }\n    </>\n  );\n}\n\nconst mapStoreToProps = (store) => ({\n  sdk: getSdk(store),\n});\n\nexport default withSendbirdContext(OperatorList, mapStoreToProps);\n","import React, { ReactElement, useEffect, useState } from 'react'\n\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport Modal from '../../../../ui/Modal';\nimport { Type as ButtonType } from '../../../../ui/Button/type';\nimport UserListItem from '../../../../ui/UserListItem';\n\ninterface Props {\n  hideModal(): void;\n  onSubmit(members: Array<string>): void;\n  channel: SendbirdTypes['GroupChannel'];\n  userQueryCreator(): SendbirdTypes['UserListQuery'];\n}\n\nexport default function InviteMembers({\n  hideModal,\n  userQueryCreator,\n  onSubmit,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [selectedMembers, setSelectedMembers] = useState({});\n  const [userQuery, setUserQuery] = useState(null);\n\n  useEffect(() => {\n    const userListQuery = userQueryCreator();\n    userListQuery.limit = 20;\n    userListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n    });\n    setUserQuery(userListQuery);\n  }, [])\n  return (\n    <div>\n      <Modal\n        disabled={Object.keys(selectedMembers).length === 0}\n        submitText=\"Invite\"\n        type={ButtonType.PRIMARY}\n        onCancel={() => hideModal()}\n        onSubmit={() => {\n          const members = Object.keys(selectedMembers).filter((m) => selectedMembers[m]);\n          onSubmit(members);\n        }}\n        titleText=\"Select members\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = userQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              userQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              checkBox\n              checked={selectedMembers[member.userId]}\n              onChange={\n                (event) => {\n                  const modifiedSelectedMembers = {\n                    ...selectedMembers,\n                    [event.target.id]: event.target.checked,\n                  };\n                  if (!event.target.checked) {\n                    delete modifiedSelectedMembers[event.target.id];\n                  }\n                  setSelectedMembers(modifiedSelectedMembers);\n                }\n              }\n              user={member}\n              key={member.userId}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n} from 'react';\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport withSendbirdContext from '../../../../lib/SendbirdSdkContext';\nimport { getSdk } from '../../../../lib/selectors';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport UserListItem from '../UserListItem';\nimport MembersModal from './MembersModal';\nimport InviteMembers from './InviteMembersModal';\n\ninterface Props {\n  sdk: SendbirdTypes['SendBirdInstance'];\n  channel: SendbirdTypes['GroupChannel'];\n  userQueryCreator(): SendbirdTypes['UserListQuery'];\n  userId: string;\n}\n\nexport const MemberList = ({\n  sdk,\n  channel,\n  userQueryCreator,\n  userId,\n}: Props): ReactElement => {\n  const [members, setMembers] = useState([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showAllMembers, setShowAllMembers] = useState(false);\n  const [showInviteMembers, setShowInviteMembers] = useState(false);\n\n  useEffect(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refershList = useCallback(\n    () => {\n      if (!channel) {\n        setMembers([]);\n        return;\n      }\n      const memberUserListQuery = channel.createMemberListQuery();\n      memberUserListQuery.limit = 10;\n      memberUserListQuery.next((members, error) => {\n        if (error) {\n          return;\n        }\n        setMembers(members);\n        setHasNext(memberUserListQuery.hasNext);\n      });\n    },\n    [channel],\n  );\n\n  return (\n    <>\n      {\n        members.map((member) => (\n          <UserListItem\n            key={member.userId}\n            user={member}\n            currentUser={sdk.currentUser.userId}\n            action={\n              (userId !== member.userId)\n                ? ({ actionRef, parentRef }) => (\n                  <ContextMenu\n                    menuTrigger={(toggleDropdown) => (\n                      <IconButton\n                        className=\"sendbird-user-message__more__menu\"\n                        width=\"32px\"\n                        height=\"32px\"\n                        onClick={toggleDropdown}\n                      >\n                        <Icon\n                          width=\"24px\"\n                          height=\"24px\"\n                          type={IconTypes.MORE}\n                          fillColor={IconColors.CONTENT_INVERSE}\n                        />\n                      </IconButton>\n                    )}\n                    menuItems={(closeDropdown) => (\n                      <MenuItems\n                        parentContainRef={parentRef}\n                        parentRef={actionRef} // for catching location(x, y) of MenuItems\n                        closeDropdown={closeDropdown}\n                        openLeft\n                      >\n                        <MenuItem\n                          onClick={() => {\n                            if ((member.role !== 'operator')) {\n                              channel.addOperators([member.userId], () => {\n                                refershList();\n                                closeDropdown();\n                              });\n                            } else {\n                              channel.removeOperators([member.userId], () => {\n                                refershList();\n                                closeDropdown();\n                              });\n                            }\n                          }}\n                        >\n                          {member.role !== 'operator' ? 'Promote to operator' : 'Demote operator'}\n                        </MenuItem>\n                        {\n                          // No muted members in broadcast channel\n                          !channel.isBroadcast && (\n                            <MenuItem\n                              onClick={() => {\n                                if (member.isMuted) {\n                                  channel.unmuteUser(member, () => {\n                                    refershList();\n                                    closeDropdown();\n                                  })\n                                } else {\n                                  channel.muteUser(member, () => {\n                                    refershList();\n                                    closeDropdown();\n                                  });\n                                }\n                              }}\n                            >\n                              { member.isMuted ? 'Unmute' : 'Mute'}\n                            </MenuItem>\n                          )\n                        }\n                        <MenuItem\n                          onClick={() => {\n                            channel.banUser(member, -1, '', () => {\n                              refershList();\n                              closeDropdown();\n                            });\n                          }}\n                        >\n                          Ban\n                    </MenuItem>\n                      </MenuItems>\n                    )}\n                  />\n                )\n                : null\n            }\n          />\n        ))\n      }\n      <div\n        className=\"sendbird-channel-settings-accordion__footer\"\n      >\n        {\n          hasNext && (\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => setShowAllMembers(true)}\n            >\n              All members\n            </Button>\n          )\n        }\n        <Button\n          type={ButtonTypes.SECONDARY}\n          size={ButtonSizes.SMALL}\n          onClick={() => setShowInviteMembers(true)}\n        >\n          Invite members\n        </Button>\n      </div>\n      {\n        showAllMembers && (\n          <MembersModal\n            currentUser={sdk.currentUser.userId}\n            channel={channel}\n            hideModal={() => {\n              setShowAllMembers(false);\n              refershList();\n            }}\n          />\n        )\n      }\n      {\n        showInviteMembers && (\n          <InviteMembers\n            userQueryCreator={userQueryCreator}\n            onSubmit={(selectedMembers: Array<string>) => {\n              channel.inviteWithUserIds(selectedMembers, () => {\n                setShowInviteMembers(false);\n                refershList();\n              });\n            }}\n            channel={channel}\n            hideModal={() => setShowInviteMembers(false)}\n          />\n        )\n      }\n    </>\n  );\n}\n\nconst mapStoreToProps = (store) => ({\n  sdk: getSdk(store),\n});\n\nexport default withSendbirdContext(MemberList, mapStoreToProps);\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react'\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport { noop } from '../../../../utils/utils';\n\ninterface Props {\n  hideModal(): void;\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport default function BannedMembersModal({\n  hideModal,\n  channel,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [memberQuery, setMemberQuery] = useState(null);\n\n  useEffect(() => {\n    const bannedUserListQuery = channel.createBannedUserListQuery();\n    bannedUserListQuery.next((users, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(users);\n    });\n    setMemberQuery(bannedUserListQuery);\n  }, []);\n  return (\n    <div>\n      <Modal\n        hideFooter\n        onCancel={() => hideModal()}\n        onSubmit={noop}\n        titleText=\"Muted members\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              user={member}\n              key={member.userId}\n              action={({ parentRef, actionRef }) => (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.unbanUser(member, () => {\n                            closeDropdown();\n                            setMembers(members.filter(m => {\n                              return (m.userId !== member.userId);\n                            }));\n                          })\n                        }}\n                      >\n                        Unban\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              )\n              }\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n} from 'react';\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport withSendbirdContext from '../../../../lib/SendbirdSdkContext';\nimport { getSdk } from '../../../../lib/selectors';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport\n  Label, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport UserListItem from '../UserListItem';\nimport BannedMembersModal from './BannedMembersModal';\n\ninterface Props {\n  sdk: SendbirdTypes[\"SendBirdInstance\"];\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport const BannedMemberList = ({ channel }: Props): ReactElement => {\n  const [members, setMembers] = useState([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const bannedUserListQuery = channel.createBannedUserListQuery();\n    bannedUserListQuery.next((users, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(users);\n      setHasNext(bannedUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refreshList = useCallback(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const bannedUserListQuery = channel.createBannedUserListQuery();\n    bannedUserListQuery.next(function(users, error) {\n      if (error) {\n        return;\n      }\n      setMembers(users);\n      setHasNext(bannedUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return (\n    <>\n      {\n        members.map((member) => (\n          <UserListItem\n            key={member.userId}\n            user={member}\n            action={({ actionRef, parentRef }) => {\n              return (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.unbanUser(member, () => {\n                            closeDropdown();\n                            refreshList();\n                          })\n                        }}\n                      >\n                        Unban\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              )\n            }}\n          />\n        ))\n      }\n      {\n        members && members.length === 0 && (\n          <Label\n            className=\"sendbird-channel-settings__empty-list\"\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_3}\n          >\n            No banned members yet\n          </Label>\n        )\n      }\n      {\n        hasNext && (\n          <div\n            className=\"sendbird-channel-settings-accordion__footer\"\n          >\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowModal(true);\n              }}\n            >\n              All banned members\n            </Button>\n          </div>\n        )\n      }\n      {\n        showModal && (\n          <BannedMembersModal\n            channel={channel}\n            hideModal={() => {\n              setShowModal(false);\n              refreshList();\n            }}\n          />\n        )\n      }\n    </>\n  );\n}\n\nconst mapStoreToProps = (store) => ({\n  sdk: getSdk(store),\n});\n\nexport default withSendbirdContext(BannedMemberList, mapStoreToProps);\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react'\n\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport { noop } from '../../../../utils/utils';\n\ninterface Props {\n  hideModal(): void;\n  channel: SendbirdTypes[\"GroupChannel\"];\n  currentUser?: string;\n}\n\nexport default function MutedMembersModal({\n  hideModal,\n  channel,\n  currentUser,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [memberQuery, setMemberQuery] = useState(null);\n\n  useEffect(() => {\n    const memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.mutedMemberFilter = 'muted';\n    memberUserListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n    });\n    setMemberQuery(memberUserListQuery);\n  }, []);\n  return (\n    <div>\n      <Modal\n        hideFooter\n        onCancel={() => hideModal()}\n        onSubmit={noop}\n        titleText=\"Muted members\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              currentUser={currentUser}\n              user={member}\n              key={member.userId}\n              action={({ actionRef, parentRef }) => (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.unmuteUser(member, () => {\n                            closeDropdown();\n                            setMembers(members.filter(m => {\n                              return (m.userId !== member.userId);\n                            }));\n                          })\n                        }}\n                      >\n                        Unmute\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              )}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n} from 'react';\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport withSendbirdContext from '../../../../lib/SendbirdSdkContext';\nimport { getSdk } from '../../../../lib/selectors';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport\n  Label, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport UserListItem from '../UserListItem';\nimport MutedMembersModal from './MutedMembersModal';\n\ninterface Props {\n  sdk: SendbirdTypes[\"SendBirdInstance\"];\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport const MutedMemberList = ({ sdk, channel }: Props): ReactElement => {\n  const [members, setMembers] = useState([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.mutedMemberFilter = 'muted';\n    memberUserListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refreshList = useCallback(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.mutedMemberFilter = 'muted';\n    memberUserListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return (\n    <>\n      {\n        members.map((member) => (\n          <UserListItem\n            key={member.userId}\n            user={member}\n            currentUser={sdk.currentUser.userId}\n            action={({ actionRef, parentRef }) => {\n              return (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.unmuteUser(member, () => {\n                            refreshList();\n                            closeDropdown();\n                          })\n                        }}\n                      >\n                        Unmute\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              );\n            }\n            }\n          />\n        ))\n      }\n      {\n        members && members.length === 0 && (\n          <Label\n            className=\"sendbird-channel-settings__empty-list\"\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_3}\n          >\n            No muted members yet\n          </Label>\n        )\n      }\n      {\n        hasNext && (\n          <div\n            className=\"sendbird-channel-settings-accordion__footer\"\n          >\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowModal(true);\n              }}\n            >\n              All muted members\n            </Button>\n          </div>\n        )\n      }\n      {\n        showModal && (\n          <MutedMembersModal\n            currentUser={sdk.currentUser.userId}\n            channel={channel}\n            hideModal={() => {\n              setShowModal(false);\n              refreshList();\n            }}\n          />\n        )\n      }\n    </>\n  );\n}\n\nconst mapStoreToProps = (store) => ({\n  sdk: getSdk(store),\n});\n\nexport default withSendbirdContext(MutedMemberList, mapStoreToProps);\n","import './index.scss';\nimport React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useContext,\n} from 'react';\nimport { SendbirdTypes } from '../../../../types';\n\nimport Accordion, { AccordionGroup } from '../../../../ui/Accordion';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport\n  Label, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport Badge from '../../../../ui/Badge';\n\nimport OperatorList from './OperatorList';\nimport MemberList from './MemberList';\nimport BannedMemberList from './BannedMemberList';\nimport MutedMemberList from './MutedMemberList';\n\nconst kFormatter = (num: number): string|number => {\n  return Math.abs(num) > 999\n    ? `${(Math.abs(num)/1000).toFixed(1)}K`\n    : num;\n}\n\ninterface Props {\n  channel: SendbirdTypes['GroupChannel'];\n  userQueryCreator(): SendbirdTypes['UserListQuery'];\n  userId: string;\n}\n\nexport default function AdminPannel({\n  userQueryCreator,\n  channel,\n  userId,\n}: Props): ReactElement {\n  const [frozen, setFrozen] = useState(false);\n\n  // work around for\n  // https://sendbird.slack.com/archives/G01290GCDCN/p1595922832000900\n  // SDK bug - after frozen/unfrozen myRole becomes \"none\"\n  useEffect(() => {\n    setFrozen(channel.isFrozen);\n  }, [channel]);\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <AccordionGroup className=\"sendbird-channel-settings__operator\">\n      <Accordion\n        className=\"sendbird-channel-settings__operators-list\"\n        id=\"operators\"\n        renderTitle={() => (\n          <>\n            <Icon\n              type={IconTypes.OPERATOR}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__OPERATORS__TITLE}\n            </Label>\n          </>\n        )}\n        renderContent={() => (\n          <>\n            <OperatorList channel={channel} />\n          </>\n        )}\n      />\n      <Accordion\n        className=\"sendbird-channel-settings__members-list\"\n        id=\"members\"\n        renderTitle={() => (\n          <>\n            <Icon\n              type={IconTypes.MEMBERS}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__MEMBERS__TITLE}\n            </Label>\n            <Badge count={kFormatter(channel.memberCount)} />\n          </>\n        )}\n        renderContent={() => (\n          <>\n            <MemberList\n              userQueryCreator={userQueryCreator}\n              channel={channel}\n              userId={userId}\n            />\n          </>\n        )}\n      />\n      {\n        // No muted members in broadcast channel\n        !channel.isBroadcast && (\n          <Accordion\n            id=\"mutedMembers\"\n            className=\"sendbird-channel-settings__muted-members-list\"\n            renderTitle={() => (\n              <>\n                <Icon\n                  type={IconTypes.MUTE}\n                  fillColor={IconColors.PRIMARY}\n                  width={24}\n                  height={24}\n                  className=\"sendbird-channel-settings__accordion-icon\"\n                />\n                <Label\n                  type={LabelTypography.SUBTITLE_1}\n                  color={LabelColors.ONBACKGROUND_1}\n                >\n                  {stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE}\n                </Label>\n              </>\n            )}\n            renderContent={() => (\n              <>\n                <MutedMemberList channel={channel} />\n              </>\n            )}\n          />\n        )\n      }\n      <Accordion\n        className=\"sendbird-channel-settings__banned-members-list\"\n        id=\"bannedMembers\"\n        renderTitle={() => (\n          <>\n            <Icon\n              type={IconTypes.BAN}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__BANNED_MEMBERS__TITLE}\n            </Label>\n          </>\n        )}\n        renderContent={() => (\n          <>\n            <BannedMemberList channel={channel} />\n          </>\n        )}\n      />\n      {\n        // cannot frozen broadcast channel\n        !channel.isBroadcast && (\n          <div className=\"sendbird-channel-settings__freeze\">\n            <Icon\n              type={IconTypes.FREEZE}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__FREEZE_CHANNEL}\n            </Label>\n            <div className=\"sendbird-channel-settings__frozen-icon\">\n              {\n                frozen\n                  ? (\n                    <Icon\n                      onClick={() => {\n                        channel.unfreeze(() => {\n                          setFrozen(false);\n                        });\n                      }}\n                      type={IconTypes.TOGGLE_ON}\n                      fillColor={IconColors.PRIMARY}\n                      width={44}\n                      height={24}\n                    />\n                  )\n                  : (\n                    <Icon\n                      onClick={() => {\n                        channel.freeze(() => {\n                          setFrozen(true);\n                        });\n                      }}\n                      type={IconTypes.TOGGLE_OFF}\n                      fillColor={IconColors.PRIMARY}\n                      width={44}\n                      height={24}\n                    />\n                  )\n              }\n            </div>\n          </div>\n        )\n      }\n    </AccordionGroup>\n  );\n}\n","import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport withSendbirdContext from '../../lib/SendbirdSdkContext';\nimport { UserProfileProvider } from '../../lib/UserProfileContext';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nimport './index.scss';\nimport Badge from '../../ui/Badge';\nimport Label, { LabelTypography, LabelColors } from '../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../ui/Icon';\nimport IconButton from '../../ui/IconButton';\n\nimport ChannelProfile from './components/ChannelProfile';\nimport MembersAccordion from './components/MembersAccordion';\nimport LeaveChannelModal from './components/LeaveChannel';\nimport AdminPanel from './components/AdminPanel';\nimport PlaceHolder from '../../ui/PlaceHolder';\nimport PlaceHolderTypes from '../../ui/PlaceHolder/type';\nimport { uuidv4 } from '../../utils/uuid';\nimport { createDefaultUserListQuery } from '../ChannelList/components/utils';\n\nconst COMPONENT_CLASS_NAME = 'sendbird-channel-settings';\n\nconst kFormatter = (num) => (\n  Math.abs(num) > 999\n    ? `${(Math.abs(num) / 1000).toFixed(1)}K`\n    : num\n);\n\nfunction ChannelSettings(props) {\n  const {\n    className,\n    onCloseClick,\n    channelUrl,\n    disableUserProfile,\n    renderUserProfile,\n    onChannelModified,\n    renderChannelProfile,\n    onBeforeUpdateChannel,\n  } = props;\n\n  const {\n    stores: { sdkStore },\n    config: {\n      userListQuery,\n      theme,\n      userId,\n      logger,\n      isOnline,\n    },\n    queries = {},\n  } = props;\n\n  const { config = {} } = props;\n  const userDefinedDisableUserProfile = disableUserProfile || config.disableUserProfile;\n  const userDefinedRenderProfile = renderUserProfile || config.renderUserProfile;\n\n  const userFilledApplicationUserListQuery = queries.applicationUserListQuery;\n  const { stringSet } = useContext(LocalizationContext);\n\n  const { sdk, initialized } = sdkStore;\n\n  // hack to kepp track of channel updates by triggering useEffect\n  const [channelUpdateId, setChannelUpdateId] = useState(uuidv4());\n  const [channel, setChannel] = useState(null);\n  const [invalidChannel, setInvalidChannel] = useState(false);\n  const [showAccordion, setShowAccordion] = useState(false);\n  const [showLeaveChannelModal, setShowLeaveChannelModal] = useState(false);\n\n  const componentClassNames = (\n    Array.isArray(className)\n      ? [COMPONENT_CLASS_NAME, ...className]\n      : [COMPONENT_CLASS_NAME, className]\n  ).join(' ');\n\n  useEffect(() => {\n    logger.info('ChannelSettings: Setting up');\n    if (!channelUrl || !initialized || !sdk) {\n      logger.warning('ChannelSettings: Setting up failed', 'No channelUrl or sdk uninitialized');\n      setInvalidChannel(false);\n    } else {\n      if (!sdk || !sdk.GroupChannel) {\n        logger.warning('ChannelSettings: No GroupChannel');\n        return;\n      }\n      sdk.GroupChannel.getChannel(channelUrl, (groupChannel) => {\n        if (!groupChannel) {\n          logger.warning('ChannelSettings: Channel not found');\n          setInvalidChannel(true);\n        } else {\n          logger.info('ChannelSettings: Fetched group channel', groupChannel);\n          setInvalidChannel(false);\n          setChannel(groupChannel);\n        }\n      });\n    }\n  }, [channelUrl, initialized, channelUpdateId]);\n\n  if (!channel || invalidChannel) {\n    return (\n      <div className={componentClassNames}>\n        <div className=\"sendbird-channel-settings__header\">\n          <Label type={LabelTypography.H_2} color={LabelColors.ONBACKGROUND_1}>\n            {stringSet.CHANNEL_SETTING__HEADER__TITLE}\n          </Label>\n          <Icon\n            className=\"sendbird-channel-settings__close-icon\"\n            type={IconTypes.CLOSE}\n            height=\"24px\"\n            width=\"24px\"\n            onClick={() => {\n              logger.info('ChannelSettings: Click close');\n              onCloseClick();\n            }}\n          />\n        </div>\n        <div>\n          <PlaceHolder type={PlaceHolderTypes.WRONG} />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <UserProfileProvider\n      className={componentClassNames}\n      disableUserProfile={userDefinedDisableUserProfile}\n      renderUserProfile={userDefinedRenderProfile}\n    >\n      <div className=\"sendbird-channel-settings__header\">\n        <Label type={LabelTypography.H_2} color={LabelColors.ONBACKGROUND_1}>\n          {stringSet.CHANNEL_SETTING__HEADER__TITLE}\n        </Label>\n        <div className=\"sendbird-channel-settings__header-icon\">\n          <IconButton\n            width=\"32px\"\n            height=\"32px\"\n            onClick={() => {\n              logger.info('ChannelSettings: Click close');\n              onCloseClick();\n            }}\n          >\n            <Icon\n              className=\"sendbird-channel-settings__close-icon\"\n              type={IconTypes.CLOSE}\n              height=\"22px\"\n              width=\"22px\"\n            />\n          </IconButton>\n        </div>\n      </div>\n      <div className=\"sendbird-channel-settings__scroll-area\">\n        {\n          renderChannelProfile\n            ? renderChannelProfile({ channel })\n            : (\n              <ChannelProfile\n                disabled={!isOnline}\n                channel={channel}\n                userId={userId}\n                theme={theme}\n                onChannelInfoChange={(currentImg, currentTitle) => {\n                  logger.info('ChannelSettings: Channel information being updated');\n                  const swapParams = sdk.getErrorFirstCallback();\n                  if (onBeforeUpdateChannel) {\n                    const params = onBeforeUpdateChannel(currentTitle, currentImg, channel.data);\n                    // swapParams\n                    channel.updateChannel(params, (response, error) => {\n                      let groupChannel = response;\n                      if (swapParams) {\n                        groupChannel = error;\n                      }\n\n                      onChannelModified(groupChannel);\n                      setChannelUpdateId(uuidv4());\n                    });\n                    return;\n                  }\n                  channel.updateChannel(\n                    currentTitle,\n                    currentImg,\n                    channel.data,\n                    (response, error) => {\n                      let groupChannel = response;\n                      if (swapParams) {\n                        groupChannel = error;\n                      }\n                      logger.info('ChannelSettings: Channel information updated', groupChannel);\n                      onChannelModified(groupChannel);\n                      setChannelUpdateId(uuidv4());\n                    },\n                  );\n                }}\n              />\n            )\n        }\n        {\n          channel.myRole === 'operator'\n            ? (\n              <AdminPanel\n                channel={channel}\n                userId={userId}\n                onChannelModified={(groupChannel) => {\n                  // setChannelUpdateId(uuidv4());\n                  onChannelModified(groupChannel);\n                }}\n                userQueryCreator={\n                  () => ((userListQuery && typeof userListQuery === 'function')\n                    ? userListQuery()\n                    : createDefaultUserListQuery({ sdk, userFilledApplicationUserListQuery })\n                  )\n                }\n              />\n            )\n            : (\n              <>\n                {/* Move to different file */}\n                <div\n                  className={[\n                    'sendbird-channel-settings__panel-item',\n                    'sendbird-channel-settings__members',\n                  ].join(' ')}\n                  role=\"switch\"\n                  aria-checked={showAccordion}\n                  onKeyDown={() => setShowAccordion(!showAccordion)}\n                  onClick={() => setShowAccordion(!showAccordion)}\n                  tabIndex={0}\n                >\n                  <Icon\n                    className=\"sendbird-channel-settings__panel-icon-left\"\n                    type={IconTypes.MEMBERS}\n                    fillColor={IconColors.PRIMARY}\n                    height=\"24px\"\n                    width=\"24px\"\n                  />\n                  <Label\n                    type={LabelTypography.SUBTITLE_1}\n                    color={LabelColors.ONBACKGROUND_1}\n                  >\n                    {stringSet.CHANNEL_SETTING__MEMBERS__TITLE}\n                    <Badge count={kFormatter(channel.memberCount)} />\n                  </Label>\n                  <Icon\n                    className={[\n                      'sendbird-channel-settings__panel-icon-right',\n                      'sendbird-channel-settings__panel-icon--chevron',\n                      (showAccordion ? 'sendbird-channel-settings__panel-icon--open' : ''),\n                    ].join(' ')}\n                    type={IconTypes.CHEVRON_RIGHT}\n                    height=\"24px\"\n                    width=\"24px\"\n                  />\n                </div>\n                {\n                  showAccordion && (\n                    <MembersAccordion\n                      currentUser={userId}\n                      disabled={!isOnline}\n                      // eslint-disable-next-line\n                      userQueryCreator={\n                        () => ((userListQuery && typeof userListQuery === 'function')\n                          ? userListQuery()\n                          : createDefaultUserListQuery({ sdk, userFilledApplicationUserListQuery })\n                        )\n                      }\n                      swapParams={\n                        sdk && sdk.getErrorFirstCallback && sdk.getErrorFirstCallback()\n                      }\n                      channel={channel}\n                      members={channel.members}\n                      onInviteMembers={(selectedMembers) => {\n                        logger.info('ChannelSettings: Inviting new users');\n                        channel.inviteWithUserIds(selectedMembers)\n                          .then((res) => {\n                            onChannelModified(res);\n                            setChannelUpdateId(uuidv4());\n                            logger.info('ChannelSettings: Inviting new users success!', res);\n                          });\n                      }}\n                    />\n                  )\n                }\n              </>\n            )\n        }\n\n        <div\n          className={[\n            'sendbird-channel-settings__panel-item',\n            'sendbird-channel-settings__leave-channel',\n            !isOnline ? 'sendbird-channel-settings__panel-item__disabled' : '',\n          ].join(' ')}\n          role=\"button\"\n          disabled\n          onKeyDown={() => {\n            if (!isOnline) { return; }\n            setShowLeaveChannelModal(true);\n          }}\n          onClick={() => {\n            if (!isOnline) { return; }\n            setShowLeaveChannelModal(true);\n          }}\n          tabIndex={0}\n        >\n          <Icon\n            className={[\n              'sendbird-channel-settings__panel-icon-left',\n              'sendbird-channel-settings__panel-icon__leave',\n            ].join(' ')}\n            type={IconTypes.LEAVE}\n            fillColor={IconColors.ERROR}\n            height=\"24px\"\n            width=\"24px\"\n          />\n          <Label\n            type={LabelTypography.SUBTITLE_1}\n            color={LabelColors.ONBACKGROUND_1}\n          >\n            {stringSet.CHANNEL_SETTING__LEAVE_CHANNEL__TITLE}\n          </Label>\n        </div>\n        {\n          showLeaveChannelModal && (\n            <LeaveChannelModal\n              onCloseModal={() => setShowLeaveChannelModal(false)}\n              onLeaveChannel={() => {\n                logger.info('ChannelSettings: Leaving channel', channel);\n                channel.leave()\n                  .then(() => {\n                    logger.info('ChannelSettings: Leaving channel successful!', channel);\n                    onCloseClick();\n                  });\n              }}\n            />\n          )\n        }\n      </div>\n    </UserProfileProvider>\n  );\n}\n\nChannelSettings.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  onCloseClick: PropTypes.func,\n  onChannelModified: PropTypes.func,\n  onBeforeUpdateChannel: PropTypes.func,\n  renderChannelProfile: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  disableUserProfile: PropTypes.bool,\n  renderUserProfile: PropTypes.func,\n  channelUrl: PropTypes.string.isRequired,\n  queries: PropTypes.shape({\n    applicationUserListQuery: PropTypes.shape({\n      limit: PropTypes.number,\n      userIdsFilter: PropTypes.arrayOf(PropTypes.string),\n      metaDataKeyFilter: PropTypes.string,\n      metaDataValuesFilter: PropTypes.arrayOf(PropTypes.string),\n    }),\n  }),\n  // from withSendbirdContext\n  stores: PropTypes.shape({\n    sdkStore: PropTypes.shape({\n      sdk: PropTypes.shape({\n        getErrorFirstCallback: PropTypes.func,\n        GroupChannel: PropTypes.oneOfType([\n          PropTypes.shape({\n            getChannel: PropTypes.func,\n          }),\n          PropTypes.func,\n        ]),\n        createApplicationUserListQuery: PropTypes.any,\n      }),\n      initialized: PropTypes.bool,\n    }),\n  }).isRequired,\n  config: PropTypes.shape({\n    userId: PropTypes.string,\n    theme: PropTypes.string,\n    userListQuery: PropTypes.func,\n    isOnline: PropTypes.bool,\n    logger: PropTypes.shape({\n      info: PropTypes.func,\n      error: PropTypes.func,\n      warning: PropTypes.func,\n    }),\n  }).isRequired,\n};\n\nChannelSettings.defaultProps = {\n  className: '',\n  onBeforeUpdateChannel: null,\n  queries: {},\n  disableUserProfile: false,\n  renderUserProfile: null,\n  renderChannelProfile: null,\n  onCloseClick: () => { },\n  onChannelModified: () => { },\n};\n\nexport default withSendbirdContext(ChannelSettings);\n"],"names":["EditDetails","props","onSubmit","onCancel","channel","userId","theme","inputRef","useRef","formRef","hiddenInputRef","useState","currentImg","setCurrentImg","newFile","setNewFile","useContext","LocalizationContext","stringSet","title","name","React","Modal","MODAL__CHANNEL_INFORMATION__TITLE","BUTTON__SAVE","current","value","reportValidity","ButtonType","PRIMARY","e","preventDefault","InputLabel","MODAL__CHANNEL_INFORMATION__CHANNEL_IMAGE","Avatar","ChannelAvatar","display","URL","createObjectURL","target","files","TextButton","click","Label","LabelTypography","BUTTON_1","LabelColors","MODAL__CHANNEL_INFORMATION__UPLOAD","MODAL__CHANNEL_INFORMATION__CHANNEL_NAME","Input","MODAL__CHANNEL_INFORMATION__INPUT__PLACE_HOLDER","propTypes","PropTypes","func","isRequired","shape","string","ChannelProfile","disabled","onChannelInfoChange","showModal","setShowModal","getChannelName","members","map","member","nickname","NO_NAME","join","NO_TITLE","SUBTITLE_2","ONBACKGROUND_1","ONBACKGROUND_2","CHANNEL_SETTING__PROFILE__EDIT","EditDetailsModal","arrayOf","bool","defaultProps","MembersModal","_a","hideModal","currentUser","_b","setMembers","_c","memberQuery","setMemberQuery","useEffect","memberListQuery","createMemberListQuery","limit","next","error","noop","hasNext","fetchMore","clientHeight","scrollTop","scrollHeight","o","UserListItem","parentRef","actionRef","myRole","ContextMenu","toggleDropdown","IconButton","Icon","IconTypes","MORE","IconColors","CONTENT_INVERSE","closeDropdown","MenuItems","MenuItem","role","addOperators","m","removeOperators","isBroadcast","isMuted","unmuteUser","muteUser","banUser","filter","SHOWN_MEMBER_MAX","avatarRef","UserProfileContext","disableUserProfile","renderUserProfile","profileUrl","paddingTop","paddingBottom","user","currentUserId","close","UserProfile","YOU","MembersAccordion","userQueryCreator","onInviteMembers","swapParams","showMoreModal","setShowMoreModal","showAddUserModal","setShowAddUserModal","slice","length","Button","ButtonTypes","SECONDARY","ButtonSizes","SMALL","CHANNEL_SETTING__MEMBERS__SEE_ALL_MEMBERS","CHANNEL_SETTING__MEMBERS__INVITE_MEMBER","InviteMembers","MODAL__INVITE_MEMBER__TITLE","BUTTON__INVITE","COMPONENT_NAME","className","action","injectingClassNames","Array","isArray","__spreadArray","MutedAvatarOverlay","SUBTITLE_1","CAPTION_3","OperatorsModal","operators","setOperators","operatorQuery","setOperatorQuery","operatorListQuery","createOperatorListQuery","response","AddOperatorsModal","selectedMembers","setSelectedMembers","_d","selectedCount","Object","keys","ONBACKGROUND_3","CAPTION_1","MODAL__INVITE_MEMBER__SELECTEC","event","modifiedSelectedMembers","id","checked","OperatorList","sdk","showMore","setShowMore","showAdd","setShowAdd","_e","setHasNext","refershList","useCallback","operator","CHANNEL_SETTING__OPERATORS__TITLE_ALL","CHANNEL_SETTING__OPERATORS__TITLE_ADD","mapStoreToProps","store","getSdk","withSendbirdContext","userQuery","setUserQuery","userListQuery","MemberList","showAllMembers","setShowAllMembers","showInviteMembers","setShowInviteMembers","memberUserListQuery","inviteWithUserIds","BannedMembersModal","bannedUserListQuery","createBannedUserListQuery","users","unbanUser","BannedMemberList","refreshList","MutedMembersModal","mutedMemberFilter","MutedMemberList","kFormatter","num","Math","abs","toFixed","AdminPannel","frozen","setFrozen","isFrozen","AccordionGroup","Accordion","OPERATOR","CHANNEL_SETTING__OPERATORS__TITLE","MEMBERS","CHANNEL_SETTING__MEMBERS__TITLE","Badge","memberCount","MUTE","CHANNEL_SETTING__MUTED_MEMBERS__TITLE","BAN","CHANNEL_SETTING__BANNED_MEMBERS__TITLE","FREEZE","CHANNEL_SETTING__FREEZE_CHANNEL","unfreeze","TOGGLE_ON","freeze","TOGGLE_OFF","COMPONENT_CLASS_NAME","ChannelSettings","onCloseClick","channelUrl","onChannelModified","renderChannelProfile","onBeforeUpdateChannel","sdkStore","stores","config","logger","isOnline","queries","userDefinedDisableUserProfile","userDefinedRenderProfile","userFilledApplicationUserListQuery","applicationUserListQuery","initialized","uuidv4","channelUpdateId","setChannelUpdateId","setChannel","invalidChannel","setInvalidChannel","showAccordion","setShowAccordion","showLeaveChannelModal","setShowLeaveChannelModal","componentClassNames","info","warning","GroupChannel","getChannel","groupChannel","H_2","CHANNEL_SETTING__HEADER__TITLE","CLOSE","PlaceHolder","PlaceHolderTypes","WRONG","UserProfileProvider","currentTitle","getErrorFirstCallback","params","data","updateChannel","AdminPanel","createDefaultUserListQuery","CHEVRON_RIGHT","then","res","LEAVE","ERROR","CHANNEL_SETTING__LEAVE_CHANNEL__TITLE","LeaveChannelModal","leave","oneOfType","element","number","userIdsFilter","metaDataKeyFilter","metaDataValuesFilter","createApplicationUserListQuery","any"],"mappings":"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"}