{"version":3,"file":"Channel.js","sources":["../../../src/smart-components/Conversation/dux/actionTypes.js","../../../src/smart-components/Conversation/utils.js","../../../src/smart-components/Conversation/dux/initialState.js","../../../src/smart-components/Conversation/dux/reducers.js","../../../src/smart-components/Conversation/hooks/useHandleChannelEvents.js","../../../src/smart-components/Conversation/hooks/useGetChannel.js","../../../src/smart-components/Conversation/hooks/useInitialMessagesFetch.js","../../../src/smart-components/Conversation/hooks/useHandleReconnect.js","../../../src/smart-components/Conversation/hooks/useScrollCallback.js","../../../src/smart-components/Conversation/hooks/useScrollDownCallback.js","../../../src/smart-components/Conversation/hooks/useDeleteMessageCallback.js","../../../src/smart-components/Conversation/hooks/useUpdateMessageCallback.js","../../../src/smart-components/Conversation/hooks/useResendMessageCallback.js","../../../src/smart-components/Conversation/hooks/useSendMessageCallback.js","../../../src/smart-components/Conversation/hooks/useSendFileMessageCallback.js","../../../src/ui/ReactionButton/index.jsx","../../../src/smart-components/Conversation/hooks/useMemoizedEmojiListItems.jsx","../../../src/smart-components/Conversation/hooks/useToggleReactionCallback.js","../../../src/smart-components/Conversation/hooks/useScrollToMessage.ts","../../../src/ui/MessageStatus/index.jsx","../../../src/ui/MessageItemMenu/index.tsx","../../../src/ui/MessageItemReactionMenu/index.tsx","../../../src/ui/Tooltip/index.jsx","../../../src/ui/TooltipWrapper/index.jsx","../../../src/ui/ReactionBadge/index.jsx","../../../src/ui/EmojiReactions/index.tsx","../../../src/ui/AdminMessage/index.jsx","../../../src/ui/TextMessageItemBody/index.tsx","../../../src/ui/FileMessageItemBody/index.tsx","../../../src/ui/ThumbnailMessageItemBody/index.tsx","../../../src/ui/OGMessageItemBody/index.tsx","../../../src/ui/UnknownMessageItemBody/index.tsx","../../../src/ui/MessageContent/index.tsx","../../../src/smart-components/Conversation/components/RemoveMessage.jsx","../../../src/smart-components/Conversation/components/MessageHOC.jsx","../../../src/smart-components/Conversation/components/ConversationScroll.jsx","../../../src/smart-components/Conversation/components/Notification.jsx","../../../src/smart-components/Conversation/components/FrozenNotification.tsx","../../../src/smart-components/Conversation/components/TypingIndicator.jsx","../../../src/smart-components/Conversation/components/MessageInputWrapper.tsx","../../../src/ui/ConnectionStatus/index.jsx","../../../src/ui/ChatHeader/utils.js","../../../src/ui/ChatHeader/index.jsx","../../../src/smart-components/Conversation/index.jsx"],"sourcesContent":["export const RESET_MESSAGES = 'RESET_MESSAGES';\nexport const RESET_STATE = 'RESET_STATE';\nexport const CLEAR_SENT_MESSAGES = 'CLEAR_SENT_MESSAGES';\nexport const GET_PREV_MESSAGES_START = 'GET_PREV_MESSAGES_START';\nexport const GET_PREV_MESSAGES_SUCESS = 'GET_PREV_MESSAGES_SUCESS';\nexport const GET_PREV_MESSAGES_FAILURE = 'GET_PREV_MESSAGES_FAILURE';\nexport const GET_NEXT_MESSAGES_SUCESS = 'GET_NEXT_MESSAGES_SUCESS';\nexport const GET_NEXT_MESSAGES_FAILURE = 'GET_NEXT_MESSAGES_FAILURE';\n\nexport const SEND_MESSAGEGE_START = 'SEND_MESSAGEGE_START';\nexport const SEND_MESSAGEGE_SUCESS = 'SEND_MESSAGEGE_SUCESS';\nexport const SEND_MESSAGEGE_FAILURE = 'SEND_MESSAGEGE_FAILURE';\n\nexport const RESEND_MESSAGEGE_START = 'RESEND_MESSAGEGE_START';\n\nexport const ON_MESSAGE_RECEIVED = 'ON_MESSAGE_RECEIVED';\nexport const UPDATE_UNREAD_COUNT = 'UPDATE_UNREAD_COUNT';\nexport const ON_MESSAGE_UPDATED = 'ON_MESSAGE_UPDATED';\nexport const ON_MESSAGE_DELETED = 'ON_MESSAGE_DELETED';\nexport const ON_MESSAGE_DELETED_BY_REQ_ID = 'ON_MESSAGE_DELETED_BY_REQ_ID';\n\nexport const SET_CURRENT_CHANNEL = 'SET_CURRENT_CHANNEL';\nexport const SET_CHANNEL_INVALID = 'SET_CHANNEL_INVALID';\nexport const MARK_AS_READ = 'MARK_AS_READ';\n\nexport const ON_REACTION_UPDATED = 'ON_REACTION_UPDATED';\nexport const SET_EMOJI_CONTAINER = 'SET_EMOJI_CONTAINER';\n\nexport const MESSAGE_LIST_PARAMS_CHANGED = 'MESSAGE_LIST_PARAMS_CHANGED';\n","import format from 'date-fns/format';\nimport * as channelActions from './dux/actionTypes';\nimport * as topics from '../../lib/pubSub/topics';\n\nimport { getSendingMessageStatus, getOutgoingMessageStates } from '../../utils';\n\nconst MessageStatusType = getOutgoingMessageStates();\nconst UNDEFINED = 'undefined';\nconst { SUCCEEDED, FAILED, PENDING } = getSendingMessageStatus();\n\nexport const scrollIntoLast = (intialTry = 0) => {\n  const MAX_TRIES = 10;\n  const currentTry = intialTry;\n  if (currentTry > MAX_TRIES) {\n    return;\n  }\n  try {\n    const scrollDOM = document.querySelector('.sendbird-conversation__scroll-container');\n    // eslint-disable-next-line no-multi-assign\n    scrollDOM.scrollTop = scrollDOM.scrollHeight;\n  } catch (error) {\n    setTimeout(() => {\n      scrollIntoLast(currentTry + 1);\n    }, 500 * currentTry);\n  }\n};\n\nexport const pubSubHandleRemover = (subscriber) => {\n  subscriber.forEach((s) => {\n    try {\n      s.remove();\n    } catch {\n      //\n    }\n  });\n};\n\nexport const pubSubHandler = (channelUrl, pubSub, dispatcher) => {\n  const subscriber = new Map();\n  if (!pubSub || !pubSub.subscribe) return subscriber;\n  subscriber.set(topics.SEND_USER_MESSAGE, pubSub.subscribe(topics.SEND_USER_MESSAGE, (msg) => {\n    const { channel, message } = msg;\n    scrollIntoLast();\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.SEND_MESSAGEGE_SUCESS,\n        payload: message,\n      });\n    }\n  }));\n  subscriber.set(topics.SEND_MESSAGE_START, pubSub.subscribe(topics.SEND_MESSAGE_START, (msg) => {\n    const { channel, message } = msg;\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.SEND_MESSAGEGE_START,\n        payload: message,\n      });\n    }\n  }));\n  subscriber.set(topics.SEND_FILE_MESSAGE, pubSub.subscribe(topics.SEND_FILE_MESSAGE, (msg) => {\n    const { channel, message } = msg;\n    scrollIntoLast();\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.SEND_MESSAGEGE_SUCESS,\n        payload: message,\n      });\n    }\n  }));\n  subscriber.set(topics.UPDATE_USER_MESSAGE, pubSub.subscribe(topics.UPDATE_USER_MESSAGE, (msg) => {\n    const { channel, message, fromSelector } = msg;\n    if (fromSelector && channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.ON_MESSAGE_UPDATED,\n        payload: { channel, message },\n      });\n    }\n  }));\n  subscriber.set(topics.DELETE_MESSAGE, pubSub.subscribe(topics.DELETE_MESSAGE, (msg) => {\n    const { channel, messageId } = msg;\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.ON_MESSAGE_DELETED,\n        payload: messageId,\n      });\n    }\n  }));\n\n  return subscriber;\n};\n\nexport const getParsedStatus = (message, currentGroupChannel) => {\n  if (message.requestState === FAILED) {\n    return MessageStatusType.FAILED;\n  }\n\n  if (message.requestState === PENDING) {\n    return MessageStatusType.PENDING;\n  }\n\n  if (message.requestState === SUCCEEDED) {\n    if (!currentGroupChannel) {\n      return MessageStatusType.SENT;\n    }\n\n    const unreadCount = currentGroupChannel.getReadReceipt(message);\n    if (unreadCount === 0) {\n      return MessageStatusType.READ;\n    }\n\n    const isDelivered = currentGroupChannel.getDeliveryReceipt(message) === 0;\n    if (isDelivered) {\n      return MessageStatusType.DELIVERED;\n    }\n\n    return MessageStatusType.SENT;\n  }\n\n  return null;\n};\n\nexport const isOperator = (groupChannel = {}) => {\n  const { myRole } = groupChannel;\n  return myRole === 'operator';\n};\n\nexport const isDisabledBecauseFrozen = (groupChannel = {}) => {\n  const { isFrozen } = groupChannel;\n  return isFrozen && !isOperator(groupChannel);\n};\n\nexport const isDisabledBecauseMuted = (groupChannel = {}) => {\n  const { myMutedState } = groupChannel;\n  return myMutedState === 'muted';\n};\n\nexport const getEmojiCategoriesFromEmojiContainer = (emojiContainer = {}) => (\n  emojiContainer.emojiCategories ? emojiContainer.emojiCategories : []\n);\n\nexport const getAllEmojisFromEmojiContainer = (emojiContainer = {}) => {\n  const { emojiCategories = [] } = emojiContainer;\n  const allEmojis = [];\n\n  for (let categoryIndex = 0; categoryIndex < emojiCategories.length; categoryIndex += 1) {\n    const { emojis } = emojiCategories[categoryIndex];\n    for (let emojiIndex = 0; emojiIndex < emojis.length; emojiIndex += 1) {\n      allEmojis.push(emojis[emojiIndex]);\n    }\n  }\n  return allEmojis;\n};\n\nexport const getEmojisFromEmojiContainer = (emojiContainer = {}, emojiCategoryId = '') => (\n  emojiContainer.emojiCategories\n    ? emojiContainer.emojiCategories\n      .filter((emojiCategory) => emojiCategory.id === emojiCategoryId)[0].emojis\n    : []\n);\n\nexport const getAllEmojisMapFromEmojiContainer = (emojiContainer = {}) => {\n  const { emojiCategories = [] } = emojiContainer;\n  const allEmojisMap = new Map();\n\n  for (let categoryIndex = 0; categoryIndex < emojiCategories.length; categoryIndex += 1) {\n    const { emojis } = emojiCategories[categoryIndex];\n    for (let emojiIndex = 0; emojiIndex < emojis.length; emojiIndex += 1) {\n      const { key, url } = emojis[emojiIndex];\n      allEmojisMap.set(key, url);\n    }\n  }\n  return allEmojisMap;\n};\n\nexport const getNicknamesMapFromMembers = (members = []) => {\n  const nicknamesMap = new Map();\n  for (let memberIndex = 0; memberIndex < members.length; memberIndex += 1) {\n    const { userId, nickname } = members[memberIndex];\n    nicknamesMap.set(userId, nickname);\n  }\n  return nicknamesMap;\n};\n\nexport const getMessageCreatedAt = (message) => format(message.createdAt, 'p');\n\nexport const isSameGroup = (message, comparingMessage) => {\n  if (\n    !message\n    || !comparingMessage\n    || !message.sender\n    || !comparingMessage.sender\n    || !message.createdAt\n    || !comparingMessage.createdAt\n    || !message.sender.userId\n    || !comparingMessage.sender.userId\n  ) {\n    return false;\n  }\n  return (\n    message.sendingStatus === comparingMessage.sendingStatus\n    && message.sender.userId === comparingMessage.sender.userId\n    && getMessageCreatedAt(message) === getMessageCreatedAt(comparingMessage)\n  );\n};\n\nexport const compareMessagesForGrouping = (\n  prevMessage,\n  currMessage,\n  nextMessage,\n) => (\n  [\n    isSameGroup(prevMessage, currMessage),\n    isSameGroup(currMessage, nextMessage),\n  ]\n);\n\nexport const hasOwnProperty = (property) => (payload) => {\n  // eslint-disable-next-line no-prototype-builtins\n  if (payload && payload.hasOwnProperty && payload.hasOwnProperty(property)) {\n    return true;\n  }\n  return false;\n};\n\nexport const passUnsuccessfullMessages = (allMessages, newMessage) => {\n  const { sendingStatus = UNDEFINED } = newMessage;\n  if (sendingStatus === SUCCEEDED || sendingStatus === PENDING) {\n    const lastIndexOfSucceededMessage = allMessages\n      .map((message) => (\n        message.sendingStatus\n        || ((message.isAdminMessage && message.isAdminMessage()) ? SUCCEEDED : UNDEFINED)\n      ))\n      .lastIndexOf(SUCCEEDED);\n    if (lastIndexOfSucceededMessage + 1 < allMessages.length) {\n      const messages = [...allMessages];\n      messages.splice(lastIndexOfSucceededMessage + 1, 0, newMessage);\n      return messages;\n    }\n  }\n  return [\n    ...allMessages,\n    newMessage,\n  ];\n};\n\nexport const pxToNumber = (px) => {\n  if (typeof px === 'number') {\n    return px;\n  }\n  if (typeof px === 'string') {\n    const parsed = Number.parseFloat(px);\n    if (!Number.isNaN(parsed)) {\n      return parsed;\n    }\n  }\n  return null;\n};\n\nexport default getParsedStatus;\n","export default {\n  initialized: false,\n  loading: false,\n  allMessages: [],\n  currentGroupChannel: { members: [] },\n  // for scrollup\n  hasMore: false,\n  lastMessageTimeStamp: 0,\n  // for scroll down\n  // onScrollDownCallback is added for navigation to different timestamps on messageSearch\n  // hasMoreToBottom, onScrollDownCallback -> scroll down\n  // hasMore, onScrollCallback -> scroll up(default behavior)\n  hasMoreToBottom: false,\n  latestFetchedMessageTimeStamp: 0,\n  emojiContainer: {},\n  unreadCount: 0,\n  unreadSince: null,\n  isInvalid: false,\n  messageListParams: null,\n};\n","import format from 'date-fns/format';\n\nimport * as actionTypes from './actionTypes';\nimport initialState from './initialState';\n\nimport compareIds from '../../../utils/compareIds';\nimport { passUnsuccessfullMessages, hasOwnProperty } from '../utils';\nimport { filterMessageListParams, getSendingMessageStatus } from '../../../utils';\n\nconst {\n  SUCCEEDED,\n  FAILED,\n  PENDING,\n} = getSendingMessageStatus();\n\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case actionTypes.RESET_STATE:\n      return initialState;\n    case actionTypes.RESET_MESSAGES:\n      return {\n        ...state,\n        // when user switches channel, if the previous channel `hasMore`\n        // the onScroll gets called twice, setting hasMore false prevents this\n        hasMore: false,\n        allMessages: [],\n      };\n    case actionTypes.GET_PREV_MESSAGES_START:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actionTypes.CLEAR_SENT_MESSAGES:\n      return {\n        ...state,\n        allMessages: [\n          ...state.allMessages.filter((m) => (\n            m.sendingStatus !== SUCCEEDED\n          )),\n        ],\n      };\n    case actionTypes.GET_PREV_MESSAGES_SUCESS: {\n      const receivedMessages = action.payload.messages || [];\n      const { currentGroupChannel = {} } = action.payload;\n\n      const stateChannel = state.currentGroupChannel || {};\n      const stateChannelUrl = stateChannel.url;\n      const actionChannelUrl = currentGroupChannel.url;\n      if (actionChannelUrl !== stateChannelUrl) {\n        return state;\n      }\n\n      // remove duplicate messages\n      const filteredAllMessages = state.allMessages.filter((msg) => (\n        !(receivedMessages.find(({ messageId }) => compareIds(messageId, msg.messageId)))\n      ));\n\n      const hasHasMoreToBottom = hasOwnProperty('hasMoreToBottom')(action.payload);\n      const hasLatestFetchedMessageTimeStamp = hasOwnProperty('latestFetchedMessageTimeStamp')(action.payload);\n      return {\n        ...state,\n        loading: false,\n        initialized: true,\n        hasMore: action.payload.hasMore,\n        lastMessageTimeStamp: action.payload.lastMessageTimeStamp,\n        // if present change else, keep\n        ...(hasHasMoreToBottom && {\n          hasMoreToBottom: action.payload.hasMoreToBottom,\n        }),\n        ...(hasLatestFetchedMessageTimeStamp && {\n          latestFetchedMessageTimeStamp: action.payload.latestFetchedMessageTimeStamp,\n        }),\n        allMessages: [\n          ...receivedMessages,\n          ...filteredAllMessages,\n        ],\n      };\n    }\n    case actionTypes.GET_NEXT_MESSAGES_SUCESS: {\n      const receivedMessages = action.payload.messages || [];\n      const { currentGroupChannel = {} } = action.payload;\n\n      const stateChannel = state.currentGroupChannel || {};\n      const stateChannelUrl = stateChannel.url;\n      const actionChannelUrl = currentGroupChannel.url;\n      if (actionChannelUrl !== stateChannelUrl) {\n        return state;\n      }\n\n      // remove duplicate messages\n      const filteredAllMessages = state.allMessages.filter((msg) => (\n        !(receivedMessages.find(({ messageId }) => compareIds(messageId, msg.messageId)))\n      ));\n\n      return {\n        ...state,\n        loading: false,\n        initialized: true,\n        hasMore: action.payload.hasMore,\n        lastMessageTimeStamp: action.payload.lastMessageTimeStamp,\n        hasMoreToBottom: action.payload.hasMoreToBottom,\n        latestFetchedMessageTimeStamp: action.payload.latestFetchedMessageTimeStamp,\n        allMessages: [\n          ...filteredAllMessages,\n          ...receivedMessages,\n        ],\n      };\n    }\n    case actionTypes.GET_NEXT_MESSAGES_FAILURE: {\n      return { ...state };\n    }\n    case actionTypes.SEND_MESSAGEGE_START:\n      return {\n        ...state,\n        allMessages: [\n          ...state.allMessages,\n          { ...action.payload },\n        ],\n      };\n    case actionTypes.SEND_MESSAGEGE_SUCESS: {\n      const newMessages = state.allMessages.map((m) => (\n        compareIds(m.reqId, action.payload.reqId) ? action.payload : m\n      ));\n      [...newMessages].sort((a, b) => (\n        (\n          a.sendingStatus\n          && b.sendingStatus\n          && a.sendingStatus === SUCCEEDED\n          && (\n            b.sendingStatus === PENDING\n            || b.sendingStatus === FAILED\n          )\n        ) ? -1 : 1\n      ));\n      return {\n        ...state,\n        allMessages: newMessages,\n      };\n    }\n    case actionTypes.SEND_MESSAGEGE_FAILURE: {\n      // eslint-disable-next-line no-param-reassign\n      action.payload.failed = true;\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.reqId, action.payload.reqId)\n            ? action.payload\n            : m\n        )),\n      };\n    }\n    case actionTypes.SET_CURRENT_CHANNEL: {\n      return {\n        ...state,\n        currentGroupChannel: action.payload,\n        isInvalid: false,\n      };\n    }\n    case actionTypes.SET_CHANNEL_INVALID: {\n      return {\n        ...state,\n        isInvalid: true,\n      };\n    }\n    case actionTypes.UPDATE_UNREAD_COUNT: {\n      const { channel } = action.payload;\n      const { currentGroupChannel = {}, unreadCount } = state;\n      const currentGroupChannelUrl = currentGroupChannel.url;\n      if (!compareIds(channel.url, currentGroupChannelUrl)) {\n        return state;\n      }\n      return {\n        ...state,\n        unreadSince: unreadCount + 1,\n      };\n    }\n    case actionTypes.ON_MESSAGE_RECEIVED: {\n      const { channel, message, scrollToEnd } = action.payload;\n      let unreadCount = 0;\n      const { currentGroupChannel = {}, unreadSince } = state;\n      const currentGroupChannelUrl = currentGroupChannel.url;\n\n      if (!compareIds(channel.url, currentGroupChannelUrl)) {\n        return state;\n      }\n      // Excluded overlapping messages\n      if (state.allMessages.some((msg) => msg.messageId === message.messageId)) {\n        return state;\n      }\n      // Filter by userFilledQuery\n      if (state.messageListParams && !filterMessageListParams(state.messageListParams, message)) {\n        return state;\n      }\n\n      unreadCount = state.unreadCount + 1;\n      // reset unreadCount if have to scrollToEnd\n      if (scrollToEnd) {\n        unreadCount = 0;\n      }\n\n      if (message.isAdminMessage && message.isAdminMessage()) {\n        return {\n          ...state,\n          allMessages: passUnsuccessfullMessages(state.allMessages, message),\n        };\n      }\n      return {\n        ...state,\n        unreadCount,\n        unreadSince: (unreadCount === 1)\n          ? format(new Date(), 'p MMM dd')\n          : unreadSince,\n        allMessages: passUnsuccessfullMessages(state.allMessages, message),\n      };\n    }\n    case actionTypes.ON_MESSAGE_UPDATED: {\n      const { message } = action.payload;\n      if (state.messageListParams && !filterMessageListParams(state.messageListParams, message)) {\n        // Delete the message if it doesn't match to the params anymore\n        return {\n          ...state,\n          allMessages: state.allMessages.filter((m) => (\n            !compareIds(m.messageId, message?.messageId)\n          )),\n        };\n      }\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.messageId, action.payload.message.messageId)\n            ? action.payload.message\n            : m\n        )),\n      };\n    }\n    case actionTypes.RESEND_MESSAGEGE_START:\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.reqId, action.payload.reqId)\n            ? action.payload\n            : m\n        )),\n      };\n    case actionTypes.MARK_AS_READ:\n      return {\n        ...state,\n        unreadCount: 0,\n        unreadSince: null,\n      };\n    case actionTypes.ON_MESSAGE_DELETED:\n      return {\n        ...state,\n        allMessages: state.allMessages.filter((m) => (\n          !compareIds(m.messageId, action.payload)\n        )),\n      };\n    case actionTypes.ON_MESSAGE_DELETED_BY_REQ_ID:\n      return {\n        ...state,\n        allMessages: state.allMessages.filter((m) => (\n          !compareIds(m.reqId, action.payload)\n        )),\n      };\n    case actionTypes.SET_EMOJI_CONTAINER: {\n      return {\n        ...state,\n        emojiContainer: action.payload,\n      };\n    }\n    case actionTypes.ON_REACTION_UPDATED: {\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => {\n          if (compareIds(m.messageId, action.payload.messageId)) {\n            if (m.applyReactionEvent && typeof m.applyReactionEvent === 'function') {\n              m.applyReactionEvent(action.payload);\n            }\n            return m;\n          }\n          return m;\n        }),\n      };\n    }\n    case actionTypes.MESSAGE_LIST_PARAMS_CHANGED: {\n      return {\n        ...state,\n        messageListParams: action.payload,\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { useEffect } from 'react';\n\nimport * as messageActions from '../dux/actionTypes';\nimport { uuidv4 } from '../../../utils/uuid';\nimport compareIds from '../../../utils/compareIds';\nimport { scrollIntoLast } from '../utils';\n\n/**\n * Handles ChannelEvents and send values to dispatcher using messagesDispatcher\n * messagesDispatcher: Dispatcher\n * sdk: sdkInstance\n * logger: loggerInstance\n * channelUrl: string\n * sdkInit: bool\n */\nfunction useHandleChannelEvents({ currentGroupChannel, sdkInit, hasMoreToBottom }, {\n  messagesDispatcher,\n  sdk,\n  logger,\n  scrollRef,\n}) {\n  const channelUrl = currentGroupChannel && currentGroupChannel.url;\n  useEffect(() => {\n    const messageReceiverId = uuidv4();\n    if (channelUrl && sdk && sdk.ChannelHandler) {\n      const ChannelHandler = new sdk.ChannelHandler();\n      logger.info('Channel | useHandleChannelEvents: Setup event handler', messageReceiverId);\n      ChannelHandler.onMessageReceived = (channel, message) => {\n        // donot update if hasMoreToBottom\n        if (compareIds(channel.url, currentGroupChannel.url) && !hasMoreToBottom) {\n          let scrollToEnd = false;\n          try {\n            const { current } = scrollRef;\n            scrollToEnd = current.offsetHeight + current.scrollTop >= current.scrollHeight;\n          } catch (error) {\n            //\n          }\n\n          logger.info('Channel | useHandleChannelEvents: onMessageReceived', message);\n          messagesDispatcher({\n            type: messageActions.ON_MESSAGE_RECEIVED,\n            payload: { channel, message, scrollToEnd },\n          });\n\n          if (scrollToEnd) {\n            try {\n              setTimeout(() => {\n                currentGroupChannel.markAsRead();\n                scrollIntoLast();\n              });\n            } catch (error) {\n              logger.warning('Channel | onMessageReceived | scroll to end failed');\n            }\n          }\n        }\n        if (compareIds(channel.url, currentGroupChannel.url) && hasMoreToBottom) {\n          messagesDispatcher({\n            type: messageActions.UPDATE_UNREAD_COUNT,\n            payload: { channel },\n          });\n        }\n      };\n\n      ChannelHandler.onMessageUpdated = (channel, message) => {\n        logger.info('Channel | useHandleChannelEvents: onMessageUpdated', message);\n        messagesDispatcher({\n          type: messageActions.ON_MESSAGE_UPDATED,\n          payload: { channel, message },\n        });\n      };\n\n      ChannelHandler.onMessageDeleted = (_, messageId) => {\n        logger.info('Channel | useHandleChannelEvents: onMessageDeleted', messageId);\n        messagesDispatcher({\n          type: messageActions.ON_MESSAGE_DELETED,\n          payload: messageId,\n        });\n      };\n\n      ChannelHandler.onReactionUpdated = (_, reactionEvent) => {\n        logger.info('Channel | useHandleChannelEvents: onReactionUpdated', reactionEvent);\n        messagesDispatcher({\n          type: messageActions.ON_REACTION_UPDATED,\n          payload: reactionEvent,\n        });\n      };\n\n      ChannelHandler.onChannelChanged = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelChanged', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onChannelFrozen = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelFrozen', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onChannelUnfrozen = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelUnFrozen', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onUserMuted = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onUserMuted', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onUserUnmuted = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onUserUnmuted', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onUserBanned = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onUserBanned', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onOperatorUpdated = (groupChannel) => {\n        if (compareIds(groupChannel.url, currentGroupChannel.url)) {\n          logger.info('Channel | useHandleChannelEvents: onOperatorUpdated', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      // Add this channel event handler to the SendBird object.\n      sdk.addChannelHandler(messageReceiverId, ChannelHandler);\n    }\n    return () => {\n      if (sdk && sdk.removeChannelHandler) {\n        logger.info('Channel | useHandleChannelEvents: Removing message reciver handler', messageReceiverId);\n        sdk.removeChannelHandler(messageReceiverId);\n      }\n    };\n  }, [channelUrl, sdkInit]);\n}\n\nexport default useHandleChannelEvents;\n","import { useEffect } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useSetChannel({ channelUrl, sdkInit }, {\n  messagesDispatcher,\n  sdk,\n  logger,\n}) {\n  useEffect(() => {\n    if (channelUrl && sdkInit && sdk && sdk.GroupChannel) {\n      logger.info('Channel | useSetChannel fetching channel', channelUrl);\n      sdk.GroupChannel.getChannel(channelUrl)\n        .then((groupChannel) => {\n          logger.info('Channel | useSetChannel fetched channel', groupChannel);\n          messagesDispatcher({\n            type: messageActionTypes.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n\n          logger.info('Channel: Mark as read', groupChannel);\n          // this order is important - this mark as read should update the event handler up above\n          groupChannel.markAsRead();\n        })\n        .catch((e) => {\n          logger.warning('Channel | useSetChannel fetch channel failed', { channelUrl, e });\n          messagesDispatcher({\n            type: messageActionTypes.SET_CHANNEL_INVALID,\n          });\n        });\n      sdk.getAllEmoji((emojiContainer_, err) => {\n        if (err) {\n          logger.error('Channel: Getting emojis failed', err);\n          return;\n        }\n        logger.info('Channel: Getting emojis success', emojiContainer_);\n        messagesDispatcher({\n          type: messageActionTypes.SET_EMOJI_CONTAINER,\n          payload: emojiContainer_,\n        });\n      });\n    }\n  }, [channelUrl, sdkInit]);\n}\n\nexport default useSetChannel;\n","import { useEffect } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\n\nconst PREV_RESULT_SIZE = 30;\nconst NEXT_RESULT_SIZE = 10;\n\nconst getLatestMessageTimeStamp = (messages = []) => {\n  const latestMessage = messages[messages.length - 1];\n  return (latestMessage && latestMessage.createdAt) || null;\n};\n\nfunction useInitialMessagesFetch({\n  currentGroupChannel,\n  userFilledMessageListQuery,\n  intialTimeStamp,\n}, {\n  sdk,\n  logger,\n  messagesDispatcher,\n}) {\n  const channelUrl = currentGroupChannel && currentGroupChannel.url;\n  useEffect(() => {\n    logger.info('Channel useInitialMessagesFetch: Setup started', currentGroupChannel);\n    messagesDispatcher({\n      type: messageActionTypes.RESET_MESSAGES,\n    });\n\n    if (sdk && sdk.MessageListParams\n      && currentGroupChannel && currentGroupChannel.getMessagesByTimestamp) {\n      const messageListParams = new sdk.MessageListParams();\n      messageListParams.prevResultSize = PREV_RESULT_SIZE;\n      messageListParams.isInclusive = true;\n      messageListParams.includeReplies = false;\n      messageListParams.includeReaction = true;\n      if (userFilledMessageListQuery) {\n        Object.keys(userFilledMessageListQuery).forEach((key) => {\n          messageListParams[key] = userFilledMessageListQuery[key];\n        });\n        logger.info('Channel useInitialMessagesFetch: Setup messageListParams', messageListParams);\n        messagesDispatcher({\n          type: messageActionTypes.MESSAGE_LIST_PARAMS_CHANGED,\n          payload: messageListParams,\n        });\n      }\n\n      logger.info('Channel: Fetching messages', { currentGroupChannel, userFilledMessageListQuery });\n      messagesDispatcher({\n        type: messageActionTypes.GET_PREV_MESSAGES_START,\n      });\n\n      if (intialTimeStamp) {\n        messageListParams.nextResultSize = NEXT_RESULT_SIZE;\n        currentGroupChannel.getMessagesByTimestamp(\n          intialTimeStamp,\n          messageListParams,\n        )\n          .then((messages) => {\n            const hasMore = (messages && messages.length > 0);\n            const lastMessageTimeStamp = hasMore\n              ? messages[0].createdAt\n              : null;\n            const latestFetchedMessageTimeStamp = getLatestMessageTimeStamp(messages);\n            // to make sure there are no more messages below\n            const nextMessageListParams = new sdk.MessageListParams();\n            nextMessageListParams.nextResultSize = NEXT_RESULT_SIZE;\n            currentGroupChannel.getMessagesByTimestamp(\n              latestFetchedMessageTimeStamp || new Date().getTime(),\n              nextMessageListParams,\n            ).then((nextMessages) => {\n              messagesDispatcher({\n                type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n                payload: {\n                  messages,\n                  hasMore,\n                  lastMessageTimeStamp,\n                  currentGroupChannel,\n                  latestFetchedMessageTimeStamp,\n                  hasMoreToBottom: nextMessages && nextMessages.length > 0,\n                },\n              });\n            });\n          })\n          .catch((error) => {\n            logger.error('Channel: Fetching messages failed', error);\n            messagesDispatcher({\n              type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n              payload: {\n                messages: [],\n                hasMore: false,\n                lastMessageTimeStamp: 0,\n                currentGroupChannel,\n              },\n            });\n          })\n          .finally(() => {\n            if (!intialTimeStamp) {\n              setTimeout(() => utils.scrollIntoLast());\n            }\n            currentGroupChannel.markAsRead();\n          });\n      } else {\n        currentGroupChannel.getMessagesByTimestamp(\n          new Date().getTime(),\n          messageListParams,\n        )\n          .then((messages) => {\n            const hasMore = (messages && messages.length > 0);\n            const lastMessageTimeStamp = hasMore\n              ? messages[0].createdAt\n              : null;\n            const latestFetchedMessageTimeStamp = getLatestMessageTimeStamp(messages);\n            messagesDispatcher({\n              type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n              payload: {\n                messages,\n                hasMore,\n                lastMessageTimeStamp,\n                currentGroupChannel,\n                latestFetchedMessageTimeStamp,\n                hasMoreToBottom: false,\n              },\n            });\n          })\n          .catch((error) => {\n            logger.error('Channel: Fetching messages failed', error);\n            messagesDispatcher({\n              type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n              payload: {\n                messages: [],\n                hasMore: false,\n                lastMessageTimeStamp: 0,\n                currentGroupChannel,\n              },\n            });\n          })\n          .finally(() => {\n            if (!intialTimeStamp) {\n              setTimeout(() => utils.scrollIntoLast());\n            }\n            currentGroupChannel.markAsRead();\n          });\n      }\n    }\n  }, [channelUrl, userFilledMessageListQuery, intialTimeStamp]);\n  /**\n   * Note - useEffect(() => {}, [currentGroupChannel])\n   * was buggy, that is why we did\n   * const channelUrl = currentGroupChannel && currentGroupChannel.url;\n   * useEffect(() => {}, [channelUrl])\n   * Again, this hook is supposed to execute when currentGroupChannel changes\n   * The 'channelUrl' here is not the same memory reference from Conversation.props\n   */\n}\n\nexport default useInitialMessagesFetch;\n","import { useEffect } from 'react';\n\nimport * as utils from '../utils';\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useHandleReconnect({ isOnline }, {\n  logger,\n  sdk,\n  currentGroupChannel,\n  messagesDispatcher,\n  userFilledMessageListQuery,\n}) {\n  useEffect(() => {\n    const wasOffline = !isOnline;\n    return () => {\n      // state changed from offline to online\n      if (wasOffline) {\n        logger.info('Refreshing conversation state');\n        const { appInfo = {} } = sdk;\n        const useReaction = appInfo.isUsingReaction || false;\n\n        const messageListParams = new sdk.MessageListParams();\n        messageListParams.prevResultSize = 30;\n        messageListParams.includeReplies = false;\n        messageListParams.includeReaction = useReaction;\n\n        if (userFilledMessageListQuery) {\n          Object.keys(userFilledMessageListQuery).forEach((key) => {\n            messageListParams[key] = userFilledMessageListQuery[key];\n          });\n        }\n        logger.info('Channel: Fetching messages', { currentGroupChannel, userFilledMessageListQuery });\n        messagesDispatcher({\n          type: messageActionTypes.GET_PREV_MESSAGES_START,\n        });\n\n        sdk.GroupChannel.getChannel(currentGroupChannel.url)\n          .then((groupChannel) => {\n            const lastMessageTime = new Date().getTime();\n\n            groupChannel.getMessagesByTimestamp(\n              lastMessageTime,\n              messageListParams,\n            )\n              .then((messages) => {\n                messagesDispatcher({\n                  type: messageActionTypes.CLEAR_SENT_MESSAGES,\n                });\n\n                const hasMore = (messages && messages.length > 0);\n                const lastMessageTimeStamp = hasMore\n                  ? messages[0].createdAt\n                  : null;\n                messagesDispatcher({\n                  type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n                  payload: {\n                    messages,\n                    hasMore,\n                    lastMessageTimeStamp,\n                    currentGroupChannel,\n                  },\n                });\n                setTimeout(() => utils.scrollIntoLast());\n              })\n              .catch((error) => {\n                logger.error('Channel: Fetching messages failed', error);\n              })\n              .finally(() => {\n                currentGroupChannel.markAsRead();\n              });\n          });\n      }\n    };\n  }, [isOnline]);\n}\n\nexport default useHandleReconnect;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useScrollCallback({\n  currentGroupChannel,\n  lastMessageTimeStamp,\n  userFilledMessageListQuery,\n}, {\n  hasMore,\n  logger,\n  messagesDispatcher,\n  sdk,\n}) {\n  return useCallback((cb) => {\n    if (!hasMore) { return; }\n    const messageListParams = new sdk.MessageListParams();\n    messageListParams.prevResultSize = 30;\n    messageListParams.includeReplies = false;\n    messageListParams.includeReaction = true;\n\n    if (userFilledMessageListQuery) {\n      Object.keys(userFilledMessageListQuery).forEach((key) => {\n        messageListParams[key] = userFilledMessageListQuery[key];\n      });\n    }\n    logger.info('Channel: Fetching messages', { currentGroupChannel, userFilledMessageListQuery });\n\n    currentGroupChannel.getMessagesByTimestamp(\n      lastMessageTimeStamp || new Date().getTime(),\n      messageListParams,\n    )\n      .then((messages) => {\n        const hasMoreMessages = (messages && messages.length > 0);\n        const lastMessageTs = hasMoreMessages\n          ? messages[0].createdAt\n          : null;\n\n        messagesDispatcher({\n          type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n          payload: {\n            messages,\n            hasMore: hasMoreMessages,\n            lastMessageTimeStamp: lastMessageTs,\n            currentGroupChannel,\n          },\n        });\n        cb([messages, null]);\n      })\n      .catch((error) => {\n        logger.error('Channel: Fetching messages failed', error);\n        messagesDispatcher({\n          type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n          payload: {\n            messages: [],\n            hasMore: false,\n            lastMessageTimeStamp: 0,\n            currentGroupChannel,\n          },\n        });\n        cb([null, error]);\n      })\n      .finally(() => {\n        currentGroupChannel.markAsRead();\n      });\n  }, [currentGroupChannel, lastMessageTimeStamp]);\n}\n\nexport default useScrollCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nconst RESULT_SIZE = 30;\n\nfunction useScrollDownCallback({\n  currentGroupChannel,\n  latestFetchedMessageTimeStamp,\n  userFilledMessageListQuery,\n  hasMoreToBottom,\n}, {\n  logger,\n  messagesDispatcher,\n  sdk,\n}) {\n  return useCallback((cb) => {\n    if (!hasMoreToBottom) { return; }\n    const messageListParams = new sdk.MessageListParams();\n    messageListParams.nextResultSize = RESULT_SIZE;\n    messageListParams.includeReplies = false;\n    messageListParams.includeReaction = true;\n\n    if (userFilledMessageListQuery) {\n      Object.keys(userFilledMessageListQuery).forEach((key) => {\n        messageListParams[key] = userFilledMessageListQuery[key];\n      });\n    }\n    logger.info('Channel: Fetching later messages', { currentGroupChannel, userFilledMessageListQuery });\n\n    currentGroupChannel.getMessagesByTimestamp(\n      latestFetchedMessageTimeStamp || new Date().getTime(),\n      messageListParams,\n    )\n      .then((messages) => {\n        const messagesLength = (messages && messages.length) || 0;\n        const hasMoreMessages = (messagesLength > 0)\n          && (messageListParams.nextResultSize === messagesLength);\n        const lastMessageTs = hasMoreMessages\n          ? messages[messages.length - 1].createdAt\n          : null;\n        messagesDispatcher({\n          type: messageActionTypes.GET_NEXT_MESSAGES_SUCESS,\n          payload: {\n            messages,\n            hasMoreToBottom: hasMoreMessages,\n            latestFetchedMessageTimeStamp: lastMessageTs,\n            currentGroupChannel,\n          },\n        });\n        cb([messages, null]);\n      })\n      .catch((error) => {\n        logger.error('Channel: Fetching later messages failed', error);\n        messagesDispatcher({\n          type: messageActionTypes.GET_NEXT_MESSAGES_FAILURE,\n          payload: {\n            messages: [],\n            hasMoreToBottom: false,\n            latestFetchedMessageTimeStamp: 0,\n            currentGroupChannel,\n          },\n        });\n        cb([null, error]);\n      })\n      .finally(() => {\n        currentGroupChannel.markAsRead();\n      });\n  }, [currentGroupChannel, latestFetchedMessageTimeStamp, hasMoreToBottom]);\n}\n\nexport default useScrollDownCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useDeleteMessageCallback({ currentGroupChannel, messagesDispatcher }, { logger }) {\n  return useCallback((message, cb) => {\n    logger.info('Channel | useDeleteMessageCallback: Deleting message', message);\n    const { requestState } = message;\n    logger.info('Channel | useDeleteMessageCallback: Deleting message requestState:', requestState);\n\n    // Message is only on local\n    if (requestState === 'failed' || requestState === 'pending') {\n      logger.info('Channel | useDeleteMessageCallback: Deleted message from local:', message);\n      messagesDispatcher({\n        type: messageActionTypes.ON_MESSAGE_DELETED_BY_REQ_ID,\n        payload: message.reqId,\n      });\n      if (cb) { cb(); }\n      return;\n    }\n\n    // Message is on server\n    currentGroupChannel.deleteMessage(message, (err) => {\n      logger.info('Channel | useDeleteMessageCallback: Deleting message from remote:', requestState);\n      if (cb) { cb(err); }\n      if (!err) {\n        logger.info('Channel | useDeleteMessageCallback: Deleting message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_DELETED,\n          payload: message.messageId,\n        });\n      } else {\n        logger.warning('Channel | useDeleteMessageCallback: Deleting message failed!', err);\n      }\n    });\n  }, [currentGroupChannel, messagesDispatcher]);\n}\n\nexport default useDeleteMessageCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as topics from '../../../lib/pubSub/topics';\n\nfunction useUpdateMessageCallback({\n  currentGroupChannel,\n  messagesDispatcher,\n  onBeforeUpdateUserMessage,\n}, {\n  logger,\n  pubSub,\n  sdk,\n}) {\n  return useCallback((messageId, text, cb) => {\n    const createParamsDefault = (txt) => {\n      const params = new sdk.UserMessageParams();\n      params.message = txt;\n      return params;\n    };\n\n    const createCustomPrams = onBeforeUpdateUserMessage\n      && typeof onBeforeUpdateUserMessage === 'function';\n\n    if (createCustomPrams) {\n      logger.info('Channel: creating params using onBeforeUpdateUserMessage', onBeforeUpdateUserMessage);\n    }\n\n    const params = onBeforeUpdateUserMessage\n      ? onBeforeUpdateUserMessage(text)\n      : createParamsDefault(text);\n\n    currentGroupChannel.updateUserMessage(messageId, params, (r, e) => {\n      logger.info('Channel: Updating message!', params);\n      const swapParams = sdk.getErrorFirstCallback();\n      let message = r;\n      let err = e;\n      if (swapParams) {\n        message = e;\n        err = r;\n      }\n      if (cb) {\n        cb(err, message);\n      }\n      if (!err) {\n        logger.info('Channel: Updating message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_UPDATED,\n          payload: {\n            channel: currentGroupChannel,\n            message,\n          },\n        });\n        pubSub.publish(\n          topics.UPDATE_USER_MESSAGE,\n          {\n            message,\n            channel: currentGroupChannel,\n          },\n        );\n      } else {\n        logger.warning('Channel: Updating message failed!', err);\n      }\n    });\n  }, [currentGroupChannel.url, messagesDispatcher, onBeforeUpdateUserMessage]);\n}\n\nexport default useUpdateMessageCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useResendMessageCallback({\n  currentGroupChannel,\n  messagesDispatcher,\n}, {\n  logger,\n}) {\n  return useCallback((failedMessage) => {\n    logger.info('Channel: Resending message has started', failedMessage);\n    const { messageType, file } = failedMessage;\n    if (failedMessage && typeof failedMessage.isResendable === 'function'\n      && failedMessage.isResendable()\n    ) {\n      // eslint-disable-next-line no-param-reassign\n      failedMessage.requestState = 'pending';\n      messagesDispatcher({\n        type: messageActionTypes.RESEND_MESSAGEGE_START,\n        payload: failedMessage,\n      });\n\n      // userMessage\n      if (messageType === 'user') {\n        currentGroupChannel\n          .resendUserMessage(failedMessage)\n          .then((message) => {\n            logger.info('Channel: Resending message success!', { message });\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n              payload: message,\n            });\n          })\n          .catch((e) => {\n            logger.warning('Channel: Resending message failed!', { e });\n            // eslint-disable-next-line no-param-reassign\n            failedMessage.requestState = 'failed';\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n              payload: failedMessage,\n            });\n          });\n\n        // eslint-disable-next-line no-param-reassign\n        failedMessage.requestState = 'pending';\n        messagesDispatcher({\n          type: messageActionTypes.RESEND_MESSAGEGE_START,\n          payload: failedMessage,\n        });\n        return;\n      }\n\n      if (messageType === 'file') {\n        currentGroupChannel\n          .resendFileMessage(failedMessage, file)\n          .then((message) => {\n            logger.info('Channel: Resending file message success!', { message });\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n              payload: message,\n            });\n          })\n          .catch((e) => {\n            logger.warning('Channel: Resending file message failed!', { e });\n            // eslint-disable-next-line no-param-reassign\n            failedMessage.requestState = 'failed';\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n              payload: failedMessage,\n            });\n          });\n\n        // eslint-disable-next-line no-param-reassign\n        failedMessage.requestState = 'pending';\n        messagesDispatcher({\n          type: messageActionTypes.RESEND_MESSAGEGE_START,\n          payload: failedMessage,\n        });\n      }\n    } else {\n      // to alert user on console\n      // eslint-disable-next-line no-console\n      console.error('Message is not resendable');\n      logger.warning('Message is not resendable', failedMessage);\n    }\n  }, [currentGroupChannel, messagesDispatcher]);\n}\n\nexport default useResendMessageCallback;\n","import { useRef, useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\nimport * as topics from '../../../lib/pubSub/topics';\n\nexport default function useSendMessageCallback({ currentGroupChannel, onBeforeSendUserMessage }, {\n  sdk,\n  logger,\n  pubSub,\n  messagesDispatcher,\n}) {\n  const messageInputRef = useRef(null);\n\n  const sendMessage = useCallback(\n    () => {\n      const text = messageInputRef.current.value;\n      const createParamsDefault = (txt) => {\n        const message = (typeof txt === 'string') ? txt.trim() : txt;\n        const params = new sdk.UserMessageParams();\n        params.message = message;\n        return params;\n      };\n\n      const createCustomPrams = onBeforeSendUserMessage\n        && typeof onBeforeSendUserMessage === 'function';\n\n      if (createCustomPrams) {\n        logger.info('Channel: creating params using onBeforeSendUserMessage', onBeforeSendUserMessage);\n      }\n\n      const params = onBeforeSendUserMessage\n        ? onBeforeSendUserMessage(text)\n        : createParamsDefault(text);\n\n      logger.info('Channel: Sending message has started', params);\n      const pendingMsg = currentGroupChannel.sendUserMessage(params, (res, err) => {\n        const swapParams = sdk.getErrorFirstCallback();\n        let message = res;\n        let error = err;\n        if (swapParams) {\n          message = err;\n          error = res;\n        }\n        // sending params instead of pending message\n        // to make sure that we can resend the message once it fails\n        if (error) {\n          logger.warning('Channel: Sending message failed!', {\n            message,\n          });\n          messagesDispatcher({\n            type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n            payload: message,\n          });\n          return;\n        }\n        logger.info('Channel: Sending message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n          payload: message,\n        });\n      });\n      pubSub.publish(topics.SEND_MESSAGE_START, {\n        /* pubSub is used instead of messagesDispatcher\n          to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n        message: pendingMsg,\n        channel: currentGroupChannel,\n      });\n      setTimeout(() => utils.scrollIntoLast());\n    },\n    [currentGroupChannel, onBeforeSendUserMessage],\n  );\n\n  return [messageInputRef, sendMessage];\n}\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\nimport * as topics from '../../../lib/pubSub/topics';\n\nexport default function useSendFileMessageCallback({\n  currentGroupChannel,\n  onBeforeSendFileMessage,\n  imageCompression = {},\n}, {\n  sdk,\n  logger,\n  pubSub,\n  messagesDispatcher,\n}) {\n  const sendMessage = useCallback((file) => {\n    const {\n      compressionRate,\n      resizingWidth,\n      resizingHeight,\n    } = imageCompression;\n    const createCustomParams = onBeforeSendFileMessage && typeof onBeforeSendFileMessage === 'function';\n\n    const compressibleFileType = (file.type === 'image/jpg' || file.type === 'image/png' || file.type === 'image/jpeg');\n    const compressibleRatio = (compressionRate > 0) && (compressionRate < 1);\n    // pxToNumber returns null if values are invalid\n    const compressibleDiamensions = utils.pxToNumber(resizingWidth)\n      || utils.pxToNumber(resizingHeight);\n\n    const canCompressImage = compressibleFileType && (compressibleRatio || compressibleDiamensions);\n\n    const createParamsDefault = (file_) => {\n      const params = new sdk.FileMessageParams();\n      params.file = file_;\n      return params;\n    };\n\n    if (canCompressImage) { // Using image compression\n      try {\n        const image = document.createElement('img');\n        image.src = URL.createObjectURL(file);\n        image.onload = () => {\n          URL.revokeObjectURL(image.src);\n          const canvas = document.createElement('canvas');\n          const imageWdith = image.naturalWidth || image.width;\n          const imageHeight = image.naturalHeight || image.height;\n\n          let targetWidth = utils.pxToNumber(resizingWidth) || imageWdith;\n          let targetHeight = utils.pxToNumber(resizingHeight) || imageHeight;\n\n          // In canvas.toBlob(callback, mimeType, qualityArgument)\n          // qualityArgument doesnt work\n          // so in case compressibleDiamensions are not present, we use ratio\n          if (file.type === 'image/png' && !compressibleDiamensions) {\n            targetWidth *= compressionRate;\n            targetHeight *= compressionRate;\n          }\n\n          canvas.width = targetWidth;\n          canvas.height = targetHeight;\n          const context = canvas.getContext('2d');\n          context.drawImage(image, 0, 0, targetWidth, targetHeight);\n          context.canvas.toBlob(\n            (newImageBlob) => {\n              const compressedFile = new File([newImageBlob], file.name, { type: file.type });\n              if (createCustomParams) {\n                logger.info('Channel: Creating params using onBeforeSendFileMessage', onBeforeSendFileMessage);\n              }\n              const params = createCustomParams\n                ? onBeforeSendFileMessage(compressedFile)\n                : createParamsDefault(compressedFile);\n              logger.info('Channel: Uploading file message start!', params);\n              const pendingMessage = currentGroupChannel.sendFileMessage(\n                params,\n                (response, err) => {\n                  const swapParams = sdk.getErrorFirstCallback();\n                  const [message, error] = swapParams ? [err, response] : [response, err];\n                  if (error) {\n                    // sending params instead of pending message\n                    // to make sure that we can resend the message once it fails\n                    logger.error('Channel: Sending file message failed!', { message, error });\n                    message.localUrl = URL.createObjectURL(compressedFile);\n                    message.file = compressedFile;\n                    messagesDispatcher({\n                      type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n                      payload: message,\n                    });\n                    return;\n                  }\n                  logger.info('Channel: Sending file message success!', message);\n                  messagesDispatcher({\n                    type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n                    payload: message,\n                  });\n                },\n              );\n              pubSub.publish(topics.SEND_MESSAGE_START, {\n                /* pubSub is used instead of messagesDispatcher\n                  to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n                message: {\n                  ...pendingMessage,\n                  url: URL.createObjectURL(compressedFile),\n                  // pending thumbnail message seems to be failed\n                  requestState: 'pending',\n                },\n                channel: currentGroupChannel,\n              });\n              setTimeout(() => utils.scrollIntoLast(), 1000);\n            },\n            file.type,\n            compressionRate,\n          );\n        };\n      } catch (error) {\n        logger.error('Channel: Sending file message failed!', error);\n      }\n    } else { // Not using image compression\n      if (createCustomParams) {\n        logger.info('Channel: creating params using onBeforeSendFileMessage', onBeforeSendFileMessage);\n      }\n      const params = onBeforeSendFileMessage\n        ? onBeforeSendFileMessage(file)\n        : createParamsDefault(file);\n      logger.info('Channel: Uploading file message start!', params);\n\n      const pendingMsg = currentGroupChannel.sendFileMessage(params, (response, err) => {\n        const swapParams = sdk.getErrorFirstCallback();\n        const [message, error] = swapParams ? [err, response] : [response, err];\n        if (error) {\n          // sending params instead of pending message\n          // to make sure that we can resend the message once it fails\n          logger.error('Channel: Sending file message failed!', { message, error });\n          message.localUrl = URL.createObjectURL(file);\n          message.file = file;\n          messagesDispatcher({\n            type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n            payload: message,\n          });\n          return;\n        }\n        logger.info('Channel: Sending message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n          payload: message,\n        });\n      });\n      pubSub.publish(topics.SEND_MESSAGE_START, {\n        /* pubSub is used instead of messagesDispatcher\n          to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n        message: {\n          ...pendingMsg,\n          url: URL.createObjectURL(file),\n          // pending thumbnail message seems to be failed\n          requestState: 'pending',\n        },\n        channel: currentGroupChannel,\n      });\n      setTimeout(() => utils.scrollIntoLast(), 1000);\n    }\n  }, [currentGroupChannel, onBeforeSendFileMessage, imageCompression]);\n  return [sendMessage];\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nconst ReactionButton = React.forwardRef((props, ref) => {\n  const {\n    className,\n    width,\n    height,\n    selected,\n    onClick,\n    children,\n  } = props;\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        `sendbird-reaction-button${selected ? '--selected' : ''}`,\n      ].join(' ')}\n      ref={ref}\n      role=\"button\"\n      style={{\n        width: typeof width === 'string' ? `${width.slice(0, -2) - 2}px` : `${width - 2}px`,\n        height: typeof height === 'string' ? `${height.slice(0, -2) - 2}px` : `${height - 2}px`,\n      }}\n      onClick={(e) => onClick(e)}\n      onKeyDown={(e) => onClick(e)}\n      tabIndex={0}\n    >\n      <div className=\"sendbird-reaction-button__inner\">\n        {children}\n      </div>\n    </div>\n  );\n});\n\nReactionButton.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  width: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  height: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  selected: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.element.isRequired,\n};\n\nReactionButton.defaultProps = {\n  className: '',\n  width: '36px',\n  height: '36px',\n  selected: false,\n  onClick: () => { },\n};\n\nexport default ReactionButton;\n","import React, { useMemo } from 'react';\n\nimport { EmojiListItems } from '../../../ui/ContextMenu';\nimport ReactionButton from '../../../ui/ReactionButton';\nimport ImageRenderer from '../../../ui/ImageRenderer';\nimport Icon, { IconTypes } from '../../../ui/Icon';\n\nexport default function useMemoizedEmojiListItems({\n  emojiContainer, toggleReaction,\n}, {\n  useReaction,\n  logger,\n  userId,\n  emojiAllList,\n}) {\n  /* eslint-disable react/prop-types */\n  return useMemo(() => ({\n    parentRef,\n    parentContainRef,\n    message,\n    closeDropdown,\n    spaceFromTrigger = {},\n  }) => {\n    if (!useReaction || !(parentRef || parentContainRef || message || closeDropdown)) {\n      logger.warning('Channel: Invalid Params in memoizedEmojiListItems');\n      return null;\n    }\n\n    return (\n      <EmojiListItems\n        parentRef={parentRef}\n        parentContainRef={parentContainRef}\n        closeDropdown={closeDropdown}\n        spaceFromTrigger={spaceFromTrigger}\n      >\n        {\n          emojiAllList.map((emoji) => {\n            const reactedReaction = message.reactions\n              .filter((reaction) => reaction.key === emoji.key)[0];\n            const isReacted = reactedReaction\n              ? !(reactedReaction.userIds.indexOf(userId) < 0)\n              : false;\n            return (\n              <ReactionButton\n                key={emoji.key}\n                width=\"36px\"\n                height=\"36px\"\n                selected={isReacted}\n                onClick={() => {\n                  closeDropdown();\n                  toggleReaction(message, emoji.key, isReacted);\n                }}\n              >\n                <ImageRenderer\n                  url={emoji.url}\n                  width=\"28px\"\n                  height=\"28px\"\n                  defaultComponent={\n                    <Icon width=\"28px\" height=\"28px\" type={IconTypes.QUESTION} />\n                  }\n                />\n              </ReactionButton>\n            );\n          })\n        }\n      </EmojiListItems>\n    );\n  }, [emojiContainer, toggleReaction]);\n}\n","import { useCallback } from 'react';\n\nexport default function useToggleReactionCallback({ currentGroupChannel }, { logger }) {\n  return useCallback((message, key, isReacted) => {\n    if (isReacted) {\n      currentGroupChannel.deleteReaction(message, key)\n        .then((res) => {\n          logger.info('Delete reaction success', res);\n        })\n        .catch((err) => {\n          logger.warning('Delete reaction failed', err);\n        });\n      return;\n    }\n    currentGroupChannel.addReaction(message, key)\n      .then((res) => {\n        logger.info('Add reaction success', res);\n      })\n      .catch((err) => {\n        logger.warning('Add reaction failed', err);\n      });\n  }, [currentGroupChannel]);\n}\n","import { useCallback } from 'react';\nimport { SendbirdTypes } from '../../../types';\nimport { Logger } from '../../../index';\n\ninterface useScrollToMessageDynamicParams {\n  setIntialTimeStamp(ts: number): null;\n  setHighLightedMessageId(id: number): null;\n  allMessages: SendbirdTypes['BaseMessageInstance'][];\n}\n\ninterface useScrollToMessageStaticParams {\n  logger: Logger;\n}\n\nfunction useScrollToMessage({\n  setIntialTimeStamp,\n  setHighLightedMessageId,\n  allMessages,\n}: useScrollToMessageDynamicParams, {\n  logger,\n}: useScrollToMessageStaticParams): (createdAt: number, messageId: number) => void {\n  return useCallback(\n    (createdAt: number, messageId: number) => {\n      const isPresent = allMessages.find((m) => (\n        m.messageId === messageId\n      ));\n      setHighLightedMessageId(null);\n      setTimeout(() => {\n        if (isPresent) {\n          logger.info('Channel: scroll to message - message is present');\n          setHighLightedMessageId(messageId);\n        } else {\n          logger.info('Channel: scroll to message - fetching older messages');\n          setIntialTimeStamp(null);\n          setIntialTimeStamp(createdAt);\n          setHighLightedMessageId(messageId);\n        }\n      });\n    }, [\n      setIntialTimeStamp,\n      setHighLightedMessageId,\n      allMessages,\n    ],\n  );\n}\n\nexport default useScrollToMessage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport Label, { LabelColors, LabelTypography } from '../Label';\nimport Loader from '../Loader';\n\nimport {\n  getMessageCreatedAt,\n  getOutgoingMessageStates,\n  isSentStatus,\n} from '../../utils';\n\nexport const MessageStatusTypes = getOutgoingMessageStates();\nexport default function MessageStatus({\n  className,\n  message,\n  status,\n}) {\n  const iconType = {\n    [MessageStatusTypes.SENT]: IconTypes.DONE,\n    [MessageStatusTypes.DELIVERED]: IconTypes.DONE_ALL,\n    [MessageStatusTypes.READ]: IconTypes.DONE_ALL,\n    [MessageStatusTypes.FAILED]: IconTypes.ERROR,\n  };\n  const iconColor = {\n    [MessageStatusTypes.SENT]: IconColors.SENT,\n    [MessageStatusTypes.DELIVERED]: IconColors.SENT,\n    [MessageStatusTypes.READ]: IconColors.READ,\n    [MessageStatusTypes.FAILED]: IconColors.ERROR,\n  };\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-message-status',\n      ].join(' ')}\n    >\n      {(status === MessageStatusTypes.PENDING)\n        ? (\n          <Loader\n            className=\"sendbird-message-status__icon\"\n            width=\"16px\"\n            height=\"16px\"\n          >\n            <Icon\n              type={IconTypes.SPINNER}\n              fillColor={IconColors.PRIMARY}\n              width=\"16px\"\n              height=\"16px\"\n            />\n          </Loader>\n        )\n        : (\n          <Icon\n            className=\"sendbird-message-status__icon\"\n            type={iconType[status] || IconTypes.ERROR}\n            fillColor={iconColor[status]}\n            width=\"16px\"\n            height=\"16px\"\n          />\n        )}\n      {isSentStatus(status) && (\n        <Label\n          className=\"sendbird-message-status__text\"\n          type={LabelTypography.CAPTION_3}\n          color={LabelColors.ONBACKGROUND_2}\n        >\n          {getMessageCreatedAt(message)}\n        </Label>\n      )}\n    </div>\n  );\n}\n\nMessageStatus.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  message: PropTypes.shape({\n    createdAt: PropTypes.number,\n    sender: PropTypes.shape({\n      friendName: PropTypes.string,\n      nickname: PropTypes.string,\n      userId: PropTypes.string,\n      profileUrl: PropTypes.string,\n    }),\n    sendingStatus: PropTypes.string,\n  }),\n  status: PropTypes.string,\n};\n\nMessageStatus.defaultProps = {\n  className: '',\n  message: null,\n  status: '',\n};\n","import React, { ReactElement, useContext, useRef } from 'react';\nimport { FileMessage, GroupChannel, OpenChannel, UserMessage } from 'sendbird';\n\nimport ContextMenu, { MenuItems, MenuItem } from '../ContextMenu';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport {\n  getClassName,\n  copyToClipboard,\n  isUserMessage,\n  isSentMessage,\n  isFailedMessage,\n  isPendingMessage,\n} from '../../utils/index';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: UserMessage | FileMessage;\n  channel: GroupChannel | OpenChannel;\n  isByMe?: boolean;\n  disabled?: boolean;\n  showEdit?: (bool: boolean) => void;\n  showRemove?: (bool: boolean) => void;\n  resendMessage?: (message: UserMessage | FileMessage) => void;\n  setSupposedHover?: (bool: boolean) => void;\n}\n\nexport default function MessageItemMenu({\n  className,\n  message,\n  channel,\n  isByMe = false,\n  disabled = false,\n  showEdit,\n  showRemove,\n  resendMessage,\n  setSupposedHover,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  const triggerRef = useRef(null);\n  const containerRef = useRef(null);\n\n  const showMenuItemCopy: boolean = isUserMessage(message as UserMessage);\n  const showMenuItemReply: boolean = false && !isFailedMessage(channel, message) && !isPendingMessage(channel, message);\n  const showMenuItemEdit: boolean = (isUserMessage(message as UserMessage) && isSentMessage(channel, message) && isByMe);\n  const showMenuItemResend: boolean = (isFailedMessage(channel, message) && message.isResendable() && isByMe);\n  const showMenuItemDelete: boolean = (isSentMessage(channel, message) && isByMe);\n\n  if (!(showMenuItemCopy || showMenuItemEdit || showMenuItemResend || showMenuItemDelete)) {\n    return null;\n  }\n  return (\n    <div\n      className={getClassName([className, 'sendbird-message-item-menu'])}\n      ref={containerRef}\n    >\n      <ContextMenu\n        menuTrigger={(toggleDropdown: () => void): ReactElement => (\n          <IconButton\n            className=\"sendbird-message-item-menu__trigger\"\n            ref={triggerRef}\n            width=\"32px\"\n            height=\"32px\"\n            onClick={(): void => {\n              toggleDropdown();\n              setSupposedHover(true);\n            }}\n            onBlur={(): void => {\n              setSupposedHover(false);\n            }}\n          >\n            <Icon\n              className=\"sendbird-message-item-menu__trigger__icon\"\n              type={IconTypes.MORE}\n              fillColor={IconColors.CONTENT_INVERSE}\n              width=\"24px\"\n              height=\"24px\"\n            />\n          </IconButton>\n        )}\n        menuItems={(close: () => void): ReactElement => {\n          const closeDropdown = (): void => {\n            close();\n            setSupposedHover(false);\n          };\n          return (\n            <MenuItems\n              className=\"sendbird-message-item-menu__list\"\n              parentRef={triggerRef}\n              parentContainRef={containerRef}\n              closeDropdown={closeDropdown}\n              openLeft={isByMe}\n            >\n              {showMenuItemCopy && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item\"\n                  onClick={() => {\n                    copyToClipboard((message as UserMessage)?.message);\n                    closeDropdown();\n                  }}\n                >\n                  {stringSet.MESSAGE_MENU__COPY}\n                </MenuItem>\n              )}\n              {showMenuItemReply && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item\"\n                  onClick={() => {\n                    // TODO: Add replying message logic\n                    closeDropdown();\n                  }}\n                  disable={message?.parentMessageId > 0}\n                >\n                  {stringSet.MESSAGE_MENU__REPLY}\n                </MenuItem>\n              )}\n              {showMenuItemEdit && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item\"\n                  onClick={() => {\n                    if (!disabled) {\n                      showEdit(true);\n                      closeDropdown();\n                    }\n                  }}\n                >\n                  {stringSet.MESSAGE_MENU__EDIT}\n                </MenuItem>\n              )}\n              {showMenuItemResend && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item\"\n                  onClick={() => {\n                    if (!disabled) {\n                      resendMessage(message);\n                      closeDropdown();\n                    }\n                  }}\n                >\n                  {stringSet.MESSAGE_MENU__RESEND}\n                </MenuItem>\n              )}\n              {showMenuItemDelete && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item\"\n                  onClick={() => {\n                    if (!disabled) {\n                      showRemove(true);\n                      closeDropdown();\n                    }\n                  }}\n                  disable={message?.threadInfo?.replyCount > 0}\n                >\n                  {stringSet.MESSAGE_MENU__DELETE}\n                </MenuItem>\n              )}\n            </MenuItems>\n          );\n        }}\n      />\n    </div>\n  );\n}\n","import React, { ReactElement, useRef } from 'react';\nimport { FileMessage, UserMessage, Emoji, Reaction, EmojiContainer } from 'sendbird';\nimport './index.scss';\n\nimport ContextMenu, { EmojiListItems } from '../ContextMenu';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport ImageRenderer from '../ImageRenderer';\nimport ReactionButton from '../ReactionButton';\nimport { getClassName, getEmojiListAll } from '../../utils';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: UserMessage | FileMessage;\n  userId: string;\n  spaceFromTrigger?: Record<string, unknown>;\n  emojiContainer?: EmojiContainer;\n  toggleReaction?: (message: UserMessage | FileMessage, reactionKey: string, isReacted: boolean) => void;\n  setSupposedHover?: (bool: boolean) => void;\n}\n\nexport default function MessageItemReactionMenu({\n  className,\n  message,\n  userId,\n  spaceFromTrigger = {},\n  emojiContainer,\n  toggleReaction,\n  setSupposedHover,\n}: Props): ReactElement {\n  const triggerRef = useRef(null);\n  const containerRef = useRef(null);\n\n  return (\n    <div\n      className={getClassName([className, 'sendbird-message-item-reaction-menu'])}\n      ref={containerRef}\n    >\n      <ContextMenu\n        menuTrigger={(toggleDropdown: () => void): ReactElement => (\n          <IconButton\n            className=\"sendbird-message-item-reaction-menu__trigger\"\n            ref={triggerRef}\n            width=\"32px\"\n            height=\"32px\"\n            onClick={(): void => {\n              toggleDropdown();\n              setSupposedHover(true);\n            }}\n            onBlur={(): void => {\n              setSupposedHover(false);\n            }}\n          >\n            <Icon\n              className=\"sendbird-message-item-reaction-menu__trigger__icon\"\n              type={IconTypes.EMOJI_MORE}\n              fillColor={IconColors.CONTENT_INVERSE}\n              width=\"24px\"\n              height=\"24px\"\n            />\n          </IconButton>\n        )}\n        menuItems={(close: () => void): ReactElement => {\n          const closeDropdown = (): void => {\n            close();\n            setSupposedHover(false);\n          };\n          return (\n            <EmojiListItems\n              parentRef={triggerRef}\n              parentContainRef={containerRef}\n              closeDropdown={closeDropdown}\n              spaceFromTrigger={spaceFromTrigger}\n            >\n              {getEmojiListAll(emojiContainer).map((emoji: Emoji): ReactElement => {\n                const isReacted: boolean = message?.reactions?.\n                  filter((reaction: Reaction) => reaction.key === emoji.key)[0]?.userIds?.\n                  some((reactorId: string) => reactorId === userId);\n                return (\n                  <ReactionButton\n                    key={emoji.key}\n                    width=\"36px\"\n                    height=\"36px\"\n                    selected={isReacted}\n                    onClick={() => {\n                      closeDropdown();\n                      toggleReaction(message, emoji.key, isReacted);\n                    }}\n                  >\n                    <ImageRenderer\n                      url={emoji.url}\n                      width=\"28px\"\n                      height=\"28px\"\n                      placeHolder={(style) => (\n                        <div style={style}>\n                          <Icon\n                            type={IconTypes.QUESTION}\n                            fillColor={IconColors.ON_BACKGROUND_3}\n                            width=\"28px\"\n                            height=\"28px\"\n                          />\n                        </div>\n                      )}\n                    />\n                  </ReactionButton>\n                );\n              })}\n            </EmojiListItems>\n          );\n        }}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nimport Label, { LabelColors, LabelTypography } from '../Label';\n\nexport default function Tooltip({\n  className,\n  children,\n}) {\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-tooltip',\n      ].join(' ')}\n    >\n      <Label\n        className=\"sendbird-tooltip__text\"\n        type={LabelTypography.CAPTION_2}\n        color={LabelColors.ONCONTENT_1}\n      >\n        {children}\n      </Label>\n    </div>\n  );\n}\n\nTooltip.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n};\n\nTooltip.defaultProps = {\n  className: '',\n  children: '',\n};\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nconst SPACE_FROM_TRIGGER = 8;\n\nexport default function TooltipWrapper({\n  className,\n  children,\n  hoverTooltip,\n  // clickTooltip can be added later\n}) {\n  const [showHoverTooltip, setShowHoverTooltip] = useState(false);\n  const childrenRef = useRef(null);\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-tooltip-wrapper',\n      ].join(' ')}\n      onMouseOver={() => { setShowHoverTooltip(true); }}\n      onFocus={() => { setShowHoverTooltip(true); }}\n      onMouseOut={() => { setShowHoverTooltip(false); }}\n      onBlur={() => { setShowHoverTooltip(false); }}\n    >\n      <div\n        className=\"sendbird-tooltip-wrapper__children\"\n        ref={childrenRef}\n      >\n        {children}\n      </div>\n      {\n        showHoverTooltip && (\n          <div\n            className=\"sendbird-tooltip-wrapper__hover-tooltip\"\n            style={{ bottom: `calc(100% + ${SPACE_FROM_TRIGGER}px)` }}\n          >\n            <div className=\"sendbird-tooltip-wrapper__hover-tooltip__inner\">\n              <div\n                className=\"sendbird-tooltip-wrapper__hover-tooltip__inner__tooltip-container\"\n                style={{ left: childrenRef.current && `calc(${childrenRef.current.offsetWidth / 2}px - 50%)` }}\n              >\n                {hoverTooltip}\n              </div>\n            </div>\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nTooltipWrapper.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  children: PropTypes.element.isRequired,\n  hoverTooltip: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]).isRequired,\n};\nTooltipWrapper.defaultProps = {\n  className: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Label, { LabelTypography, LabelColors } from '../Label';\n\nimport './index.scss';\n\nconst ReactionBadge = React.forwardRef((props, ref) => {\n  const {\n    className,\n    children,\n    count,\n    selected,\n    isAdd,\n    onClick,\n  } = props;\n\n  const getClassNameTail = () => {\n    if (selected && !isAdd) {\n      return '--selected';\n    }\n    if (isAdd) {\n      return '--is-add';\n    }\n    return '';\n  };\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        `sendbird-reaction-badge${getClassNameTail()}`,\n      ].join(' ')}\n      role=\"button\"\n      ref={ref}\n      onClick={onClick}\n      onKeyDown={onClick}\n      tabIndex={0}\n    >\n      <div className=\"sendbird-reaction-badge__inner\">\n        <div className=\"sendbird-reaction-badge__inner__icon\">\n          {children}\n        </div>\n        <Label\n          className={(children && count) && 'sendbird-reaction-badge__inner__count'}\n          type={LabelTypography.CAPTION_3}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {count}\n        </Label>\n      </div>\n    </div>\n  );\n});\n\nReactionBadge.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  children: PropTypes.element.isRequired,\n  count: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  selected: PropTypes.bool,\n  isAdd: PropTypes.bool,\n  onClick: PropTypes.func,\n};\n\nReactionBadge.defaultProps = {\n  className: '',\n  count: '',\n  selected: false,\n  isAdd: false,\n  onClick: () => { },\n};\n\nexport default ReactionBadge;\n","import React, { ReactElement, useContext, useRef } from 'react';\nimport { Emoji, EmojiContainer, FileMessage, Reaction, UserMessage } from 'sendbird';\nimport './index.scss';\n\nimport Tooltip from '../Tooltip';\nimport TooltipWrapper from '../TooltipWrapper';\nimport ReactionBadge from '../ReactionBadge';\nimport ReactionButton from '../ReactionButton';\nimport ImageRenderer from '../ImageRenderer';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport ContextMenu, { EmojiListItems } from '../ContextMenu';\n\nimport { getClassName, getEmojiListAll, getEmojiMapAll, getEmojiTooltipString, isReactedBy } from '../../utils';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\ninterface Props {\n  className?: string | Array<string>;\n  userId: string;\n  message: UserMessage | FileMessage;\n  emojiContainer: EmojiContainer;\n  memberNicknamesMap: Map<string, string>;\n  spaceFromTrigger?: Record<string, unknown>;\n  isByMe?: boolean;\n  toggleReaction?: (message: UserMessage | FileMessage, key: string, byMe: boolean) => void;\n}\n\nexport default function EmojiReactions2({\n  className,\n  userId,\n  message,\n  emojiContainer,\n  memberNicknamesMap,\n  spaceFromTrigger = {},\n  isByMe = false,\n  toggleReaction,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  const emojisMap = getEmojiMapAll(emojiContainer);\n  const addReactionRef = useRef(null);\n\n  return (\n    <div className={getClassName([\n      className, 'sendbird-emoji-reactions',\n      isByMe ? 'outgoing' : 'incoming',\n    ])}>\n      {(message?.reactions?.length > 0) && (\n        message.reactions.map((reaction: Reaction): ReactElement => {\n          const reactedByMe = isReactedBy(userId, reaction);\n          return (\n            <TooltipWrapper\n              className=\"sendbird-emoji-reactions__reaction-badge\"\n              key={reaction?.key}\n              hoverTooltip={(reaction?.userIds?.length > 0) && (\n                <Tooltip>\n                  {getEmojiTooltipString(reaction, userId, memberNicknamesMap, stringSet)}\n                </Tooltip>\n              )}\n            >\n              <ReactionBadge\n                count={reaction.userIds.length}\n                selected={reactedByMe}\n                onClick={() => toggleReaction(message, reaction.key, reactedByMe)}\n              >\n                <ImageRenderer\n                  circle\n                  url={emojisMap.get(reaction?.key)?.url || ''}\n                  width=\"20px\"\n                  height=\"20px\"\n                  defaultComponent={(\n                    <Icon width=\"20px\" height=\"20px\" type={IconTypes.QUESTION} />\n                  )}\n                />\n              </ReactionBadge>\n            </TooltipWrapper>\n          );\n        })\n      )}\n      {(message?.reactions?.length < emojisMap.size) && (\n        <ContextMenu\n          menuTrigger={(toggleDropdown: () => void): ReactElement => (\n            <ReactionBadge\n              className=\"sendbird-emoji-reactions__add-reaction-badge\"\n              ref={addReactionRef}\n              isAdd\n              onClick={toggleDropdown}\n            >\n              <Icon\n                type={IconTypes.EMOJI_MORE}\n                fillColor={IconColors.ON_BACKGROUND_3}\n                width=\"20px\"\n                height=\"20px\"\n              />\n            </ReactionBadge>\n          )}\n          menuItems={(closeDropdown: () => void): ReactElement => (\n            <EmojiListItems\n              parentRef={addReactionRef}\n              parentContainRef={addReactionRef}\n              closeDropdown={closeDropdown}\n              spacefromTrigger={spaceFromTrigger}\n            >\n              {getEmojiListAll(emojiContainer).map((emoji: Emoji): ReactElement => {\n                const isReacted: boolean = message?.reactions?.\n                  filter((reaction: Reaction): boolean => reaction.key === emoji.key)[0]?.userIds?.\n                  some((reactorId: string): boolean => reactorId === userId);\n                return (\n                  <ReactionButton\n                    key={emoji.key}\n                    width=\"36px\"\n                    height=\"36px\"\n                    selected={isReacted}\n                    onClick={(): void => {\n                      closeDropdown();\n                      toggleReaction(message, emoji.key, isReacted);\n                    }}\n                  >\n                    <ImageRenderer\n                      url={emoji?.url || ''}\n                      width=\"28px\"\n                      height=\"28px\"\n                      placeHolder={(style: Record<string, unknown>): ReactElement => (\n                        <div style={style}>\n                          <Icon\n                            type={IconTypes.QUESTION}\n                            fillColor={IconColors.ON_BACKGROUND_3}\n                            width=\"28px\"\n                            height=\"28px\"\n                          />\n                        </div>\n                      )}\n                    />\n                  </ReactionButton>\n                );\n              })}\n            </EmojiListItems>\n          )}\n        />\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport Label, { LabelColors, LabelTypography } from '../Label';\n\nexport default function AdminMessage({\n  className,\n  message,\n}) {\n  if (!(message.isAdminMessage || message.messageType) || !message.isAdminMessage() || message.messageType !== 'admin') {\n    return null;\n  }\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-admin-message',\n      ].join(' ')}\n    >\n      <Label\n        className=\"sendbird-admin-message__text\"\n        type={LabelTypography.CAPTION_2}\n        color={LabelColors.ONBACKGROUND_2}\n      >\n        {message.message}\n      </Label>\n    </div>\n  );\n}\n\nAdminMessage.propTypes = {\n  message: PropTypes.shape({\n    message: PropTypes.string,\n    messageType: PropTypes.string,\n    isAdminMessage: PropTypes.func,\n  }),\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n};\n\nAdminMessage.defaultProps = {\n  message: {},\n  className: '',\n};\n","import React, { ReactElement, useContext } from 'react';\nimport { UserMessage } from 'sendbird';\nimport './index.scss';\n\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport {\n  getClassName,\n  isEditedMessage,\n} from '../../utils';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: UserMessage;\n  isByMe?: boolean;\n  mouseHover?: boolean;\n}\n\nexport default function TextMessageItemBody({\n  className,\n  message,\n  isByMe = false,\n  mouseHover = false,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className={getClassName([\n      className,\n      'sendbird-text-message-item-body',\n      isByMe ? 'outgoing' : 'incoming',\n      mouseHover ? 'mouse-hover' : '',\n      message?.reactions?.length > 0 ? 'reactions' : '',\n    ])}>\n      {\n        message?.message.split(/\\r/).map((word) => (\n          (word === '')\n            ? <br key={word} />\n            : (\n              <Label\n                key={word}\n                className=\"sendbird-text-message-item-body__message\"\n                type={LabelTypography.BODY_1}\n                color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n              >\n                {word}\n              </Label>\n            )\n        ))\n      }\n      {\n        isEditedMessage(message) && (\n          <Label\n            className=\"sendbird-text-message-item-body__message edited\"\n            type={LabelTypography.BODY_1}\n            color={isByMe ? LabelColors.ONCONTENT_2 : LabelColors.ONBACKGROUND_2}\n          >\n            {` ${stringSet.MESSAGE_EDITED} `}\n          </Label>\n        )\n      }\n    </div>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport { FileMessage } from 'sendbird';\nimport './index.scss';\n\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport TextButton from '../TextButton';\nimport { getClassName, getUIKitFileType, truncateString } from '../../utils';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: FileMessage;\n  isByMe?: boolean;\n  mouseHover?: boolean;\n}\n\nexport default function FileMessageItemBody({\n  className,\n  message,\n  isByMe = false,\n  mouseHover = false,\n}: Props): ReactElement {\n\n  return (\n    <div className={getClassName([\n      className,\n      'sendbird-file-message-item-body',\n      isByMe ? 'outgoing' : 'incoming',\n      mouseHover ? 'mouse-hover' : '',\n      message?.reactions?.length > 0 ? 'reactions' : '',\n    ])}>\n      <div className=\"sendbird-file-message-item-body__file-icon\">\n        <Icon\n          className={'sendbird-file-message-item-body__file-icon__icon'}\n          type={{\n            IMAGE: IconTypes.PHOTO,\n            VIDEO: IconTypes.PLAY,\n            AUDIO: IconTypes.FILE_AUDIO,\n            GIF: IconTypes.GIF,\n            OTHERS: IconTypes.FILE_DOCUMENT,\n          }[getUIKitFileType(message?.type)]}\n          fillColor={IconColors.PRIMARY}\n          width=\"24px\"\n          height=\"24px\"\n        />\n      </div>\n      <TextButton\n        className=\"sendbird-file-message-item-body__file-name\"\n        onClick={() => { window.open(message?.url) }}\n        color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n      >\n        <Label\n          className=\"sendbird-file-message-item-body__file-name__text\"\n          type={LabelTypography.BODY_1}\n          color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n        >\n          {truncateString(message?.name || message?.url)}\n        </Label>\n      </TextButton>\n    </div>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport { FileMessage } from 'sendbird';\nimport './index.scss';\n\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport ImageRenderer from '../ImageRenderer';\nimport { getClassName, isGifMessage, isVideoMessage } from '../../utils';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: FileMessage;\n  isByMe?: boolean;\n  mouseHover?: boolean;\n  showFileViewer?: (bool: boolean) => void;\n}\n\nexport default function ThumbnailMessageItemBody({\n  className,\n  message,\n  isByMe = false,\n  mouseHover = false,\n  showFileViewer,\n}: Props): ReactElement {\n  const { thumbnails = [] } = message;\n  const thumbnailUrl: string = thumbnails.length > 0 ? thumbnails[0]?.url : '';\n\n  return (\n    <div\n      className={getClassName([\n        className,\n        'sendbird-thumbnail-message-item-body',\n        isByMe ? 'outgoing' : 'incoming',\n        mouseHover ? 'mouse-hover' : '',\n        message?.reactions?.length > 0 ? 'reactions' : '',\n      ])}\n      onClick={() => showFileViewer(true)}\n    >\n      <ImageRenderer\n        className=\"sendbird-thumbnail-message-item-body__thumbnail\"\n        url={thumbnailUrl || message?.url}\n        alt={message?.type}\n        width=\"360px\"\n        height=\"270px\"\n        placeHolder={(style) => (\n          <div\n            className=\"sendbird-thumbnail-message-item-body__placeholder\"\n            style={style}\n          >\n            <div className=\"sendbird-thumbnail-message-item-body__placeholder__icon\">\n              <Icon\n                type={isVideoMessage(message) ? IconTypes.PLAY : IconTypes.PHOTO}\n                fillColor={IconColors.ON_BACKGROUND_2}\n                width=\"34px\"\n                height=\"34px\"\n              />\n            </div>\n          </div>\n        )}\n      />\n      {\n        (isVideoMessage(message) && !thumbnailUrl) && (\n          <video className=\"sendbird-thumbnail-message-item-body__video\">\n            <source src={message?.url} type={message?.type} />\n          </video>\n        )\n      }\n      <div className=\"sendbird-thumbnail-message-item-body__image-cover\" />\n      {\n        (isVideoMessage(message) || isGifMessage(message)) && (\n          <div className=\"sendbird-thumbnail-message-item-body__icon-wrapper\">\n            <div className=\"sendbird-thumbnail-message-item-body__icon-wrapper__icon\">\n              <Icon\n                type={isVideoMessage(message) ? IconTypes.PLAY : IconTypes.GIF}\n                fillColor={IconColors.ON_BACKGROUND_2}\n                width=\"34px\"\n                height=\"34px\"\n              />\n            </div>\n          </div>\n        )\n      }\n    </div>\n  );\n}\n","import React, { ReactElement, useContext } from 'react';\nimport { UserMessage } from 'sendbird';\nimport './index.scss';\n\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport LinkLabel from '../LinkLabel';\nimport Icon, { IconTypes } from '../Icon';\nimport ImageRenderer from '../ImageRenderer';\nimport {\n  getClassName,\n  isEditedMessage,\n  isUrl,\n} from '../../utils';\nimport uuidv4 from '../../utils/uuid';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: UserMessage;\n  isByMe?: boolean;\n  mouseHover?: boolean;\n}\n\nexport default function OGMessageItemBody({\n  className,\n  message,\n  isByMe = false,\n  mouseHover = false,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  const openOGUrl = (): void => {\n    if (message?.ogMetaData?.url) window.open(message?.ogMetaData?.url);\n  };\n\n  return (\n    <div className={getClassName([\n      className,\n      'sendbird-og-message-item-body',\n      isByMe ? 'outgoing' : 'incoming',\n      mouseHover ? 'mouse-hover' : '',\n      message?.reactions?.length > 0 ? 'reactions' : '',\n    ])}>\n      <div className=\"sendbird-og-message-item-body__text-bubble\">\n        {\n          message?.message.split(' ').map((word: string) => (\n            isUrl(word)\n              ? (\n                <LinkLabel\n                  className=\"sendbird-og-message-item-body__text-bubble__message\"\n                  key={uuidv4()}\n                  src={word}\n                  type={LabelTypography.BODY_1}\n                  color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n                >\n                  {word}\n                </LinkLabel>\n              )\n              : (\n                <Label\n                  className=\"sendbird-og-message-item-body__text-bubble__message\"\n                  key={uuidv4()}\n                  type={LabelTypography.BODY_1}\n                  color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n                >\n                  {word}\n                </Label>\n              )\n          ))\n        }\n        {\n          isEditedMessage(message) && (\n            <Label\n              className=\"sendbird-og-message-item-body__text-bubble__message\"\n              type={LabelTypography.BODY_1}\n              color={isByMe ? LabelColors.ONCONTENT_2 : LabelColors.ONBACKGROUND_2}\n            >\n              {` ${stringSet.MESSAGE_EDITED} `}\n            </Label>\n          )\n        }\n      </div>\n      <div\n        className=\"sendbird-og-message-item-body__og-thumbnail\"\n        onClick={openOGUrl}\n      >\n        <ImageRenderer\n          className=\"sendbird-og-message-item-body__og-thumbnail__image\"\n          url={message?.ogMetaData?.defaultImage?.url || ''}\n          alt={message?.ogMetaData?.defaultImage?.alt}\n          // TODO: Change fixing width and height lengths\n          width=\"320px\"\n          height=\"180px\"\n          defaultComponent={(\n            <div className=\"sendbird-og-message-item-body__og-thumbnail__place-holder\">\n              <Icon\n                className=\"sendbird-og-message-item-body__og-thumbnail__place-holder__icon\"\n                type={IconTypes.THUMBNAIL_NONE}\n                width=\"56px\"\n                height=\"56px\"\n              />\n            </div>\n          )}\n        />\n      </div>\n      <div\n        className=\"sendbird-og-message-item-body__description\"\n        onClick={openOGUrl}\n      >\n        {message?.ogMetaData?.title && (\n          <Label\n            className=\"sendbird-og-message-item-body__description__title\"\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_1}\n          >\n            {message.ogMetaData.title}\n          </Label>\n        )}\n        {message?.ogMetaData?.description && (\n          <Label\n            className=\"sendbird-og-message-item-body__description__description\"\n            type={LabelTypography.BODY_2}\n            color={LabelColors.ONBACKGROUND_1}\n          >\n            {message.ogMetaData.description}\n          </Label>\n        )}\n        {message?.ogMetaData?.url && (\n          <Label\n            className=\"sendbird-og-message-item-body__description__url\"\n            type={LabelTypography.CAPTION_3}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {message.ogMetaData.url}\n          </Label>\n        )}\n      </div>\n      <div className=\"sendbird-og-message-item-body__cover\" />\n    </div>\n  );\n}\n","import React, { ReactElement, useContext } from 'react';\nimport './index.scss';\n\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport { CoreMessageType, getClassName } from '../../utils';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\ninterface Props {\n  className?: string | Array<string>;\n  isByMe?: boolean;\n  message: CoreMessageType;\n  mouseHover?: boolean;\n}\n\nexport default function UnknownMessageItemBody({\n  className,\n  message,\n  isByMe = false,\n  mouseHover = false,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className={getClassName([\n      className,\n      'sendbird-unknown-message-item-body',\n      isByMe ? 'outgoing' : 'incoming',\n      mouseHover ? 'mouse-hover' : '',\n      message?.reactions?.length > 0 ? 'reactions' : '',\n    ])}>\n      <Label\n        className=\"sendbird-unknown-message-item-body__header\"\n        type={LabelTypography.BODY_1}\n        color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n      >\n        {stringSet.UNKNOWN__UNKNOWN_MESSAGE_TYPE}\n      </Label>\n      <Label\n        className=\"sendbird-unknown-message-item-body__description\"\n        type={LabelTypography.BODY_1}\n        color={isByMe ? LabelColors.ONCONTENT_2 : LabelColors.ONBACKGROUND_2}\n      >\n        {stringSet.UNKNOWN__CANNOT_READ_MESSAGE}\n      </Label>\n    </div>\n  );\n}\n","import React, { ReactElement, useContext, useRef, useState } from 'react';\nimport { GroupChannel, AdminMessage, UserMessage, FileMessage, EmojiContainer } from 'sendbird';\nimport './index.scss';\n\nimport Avatar from '../Avatar';\nimport UserProfile from '../UserProfile';\nimport MessageStatus from '../MessageStatus';\nimport MessageItemMenu from '../MessageItemMenu';\nimport MessageItemReactionMenu from '../MessageItemReactionMenu';\nimport ContextMenu, { MenuItems } from '../ContextMenu';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport EmojiReactions from '../EmojiReactions';\n\nimport ClientAdminMessage from '../AdminMessage';\nimport TextMessageItemBody from '../TextMessageItemBody';\nimport FileMessageItemBody from '../FileMessageItemBody';\nimport ThumbnailMessageItemBody from '../ThumbnailMessageItemBody';\nimport OGMessageItemBody from '../OGMessageItemBody';\nimport UnknownMessageItemBody from '../UnknownMessageItemBody';\n\nimport {\n  getClassName,\n  getUIKitMessageTypes,\n  getUIKitMessageType,\n  isTextMessage,\n  isOGMessage,\n  isThumbnailMessage,\n  getOutgoingMessageState,\n  getSenderName,\n  getMessageCreatedAt,\n} from '../../utils';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\n\ninterface Props {\n  className?: string | Array<string>;\n  userId: string;\n  channel: GroupChannel;\n  message: AdminMessage | UserMessage | FileMessage;\n  disabled?: boolean;\n  chainTop?: boolean;\n  chainBottom?: boolean;\n  useReaction?: boolean;\n  useReplying?: boolean;\n  nicknamesMap?: Map<string, string>;\n  emojiContainer?: EmojiContainer;\n  scrollToMessage?: (createdAt: number, messageId: number) => void;\n  showEdit?: (bool: boolean) => void;\n  showRemove?: (bool: boolean) => void;\n  showFileViewer?: (bool: boolean) => void;\n  resendMessage?: (message: UserMessage | FileMessage) => void;\n  toggleReaction?: (message: UserMessage | FileMessage, reactionKey: string, isReacted: boolean) => void;\n}\nexport default function MessageContent({\n  className,\n  userId,\n  channel,\n  message,\n  disabled = false,\n  chainTop = false,\n  chainBottom = false,\n  useReaction = false,\n  // scrollToMessage,\n  // useReplying,\n  nicknamesMap,\n  emojiContainer,\n  showEdit,\n  showRemove,\n  showFileViewer,\n  resendMessage,\n  toggleReaction,\n}: Props): ReactElement {\n  // const useReplying: boolean = false; // FIXME: Open replying feature // message?.parentMessageId && getUseReplying(context)\n  const messageTypes = getUIKitMessageTypes();\n  const { disableUserProfile, renderUserProfile } = useContext(UserProfileContext);\n  const avatarRef = useRef(null);\n  const [mouseHover, setMouseHover] = useState(false);\n  const [supposedHover, setSupposedHover] = useState(false);\n\n  const isByMe = (userId === (message as UserMessage | FileMessage)?.sender?.userId)\n    || ((message as UserMessage | FileMessage).sendingStatus === 'pending')\n    || ((message as UserMessage | FileMessage).sendingStatus === 'failed');\n  const isByMeClassName = isByMe ? 'outgoing' : 'incoming';\n  const chainTopClassName = chainTop ? 'chain-top' : '';\n  const useReactionClassName = useReaction ? 'use-reactions' : '';\n  const supposedHoverClassName = supposedHover ? 'supposed-hover' : '';\n\n  if (message?.isAdminMessage?.() || message?.messageType === 'admin') {\n    return (<ClientAdminMessage message={message} />);\n  }\n  return (\n    <div\n      className={getClassName([className, 'sendbird-message-content', isByMeClassName])}\n      onMouseOver={() => setMouseHover(true)}\n      onMouseLeave={() => setMouseHover(false)}\n    >\n      {/* left */}\n      <div className={getClassName(['sendbird-message-content__left', useReactionClassName, isByMeClassName])}>\n        {(!isByMe && !chainBottom) && (\n          /** user profile */\n          <ContextMenu\n            menuTrigger={(toggleDropdown: () => void): ReactElement => (\n              <Avatar\n                className=\"sendbird-message-content__left__avatar\"\n                src={message?.sender?.profileUrl || ''}\n                ref={avatarRef}\n                width=\"28px\"\n                height=\"28px\"\n                onClick={(): void => { if (!disableUserProfile) toggleDropdown() }}\n              />\n            )}\n            menuItems={(closeDropdown: () => void): ReactElement => (\n              <MenuItems\n                /**\n                * parentRef: For catching location(x, y) of MenuItems\n                * parentContainRef: For toggling more options(menus & reactions)\n                */\n                parentRef={avatarRef}\n                parentContainRef={avatarRef}\n                closeDropdown={closeDropdown}\n                style={{ paddingTop: 0, paddingBottom: 0 }}\n              >\n                {renderUserProfile\n                  ? renderUserProfile({ user: message?.sender, close: closeDropdown })\n                  : (<UserProfile user={message.sender} onSuccess={closeDropdown} />)\n                }\n              </MenuItems>\n            )}\n          />\n        )}\n        {(isByMe && !chainBottom) && (\n          <div className={getClassName(['sendbird-message-content__left__created-at', supposedHoverClassName])}>\n            <MessageStatus\n              message={message}\n              status={getOutgoingMessageState(channel, message)}\n            />\n          </div>\n        )}\n        {/* outgoing menu */}\n        {isByMe && (\n          <div className={getClassName(['sendbird-message-content-menu', useReactionClassName, supposedHoverClassName, isByMeClassName])}>\n            <MessageItemMenu\n              className=\"sendbird-message-content-menu__normal-menu\"\n              channel={channel}\n              message={message as UserMessage | FileMessage}\n              isByMe={isByMe}\n              disabled={disabled}\n              showEdit={showEdit}\n              showRemove={showRemove}\n              resendMessage={resendMessage}\n              setSupposedHover={setSupposedHover}\n            />\n            {useReaction && (\n              <MessageItemReactionMenu\n                className=\"sendbird-message-content-menu__reaction-menu\"\n                message={message as UserMessage | FileMessage}\n                userId={userId}\n                spaceFromTrigger={{}}\n                emojiContainer={emojiContainer}\n                toggleReaction={toggleReaction}\n                setSupposedHover={setSupposedHover}\n              />\n            )}\n          </div>\n        )}\n      </div>\n      {/* middle */}\n      <div className=\"sendbird-message-content__middle\">\n        {(!isByMe && !chainTop) && (\n          <Label\n            className=\"sendbird-message-content__middle__sender-name\"\n            type={LabelTypography.CAPTION_2}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {getSenderName(message)}\n          </Label>\n        )}\n        {/* {useReplying && (\n          <ReplyingMessageAttachment scrollToMessage={scrollToMessage} replyingMessage={replyingMessage} />\n        )} */}\n        {/*\n          A ReplyingMessage should have an another interface\n          because it won't be perfect mesasge instance, it will be from properties of message\n        */}\n        {/* message item body components */}\n        {isTextMessage(message as UserMessage) && (\n          <TextMessageItemBody message={message as UserMessage} isByMe={isByMe} mouseHover={mouseHover} />\n        )}\n        {(isOGMessage(message as UserMessage)) && (\n          <OGMessageItemBody message={message as UserMessage} isByMe={isByMe} mouseHover={mouseHover} />\n        )}\n        {(getUIKitMessageType((message as FileMessage)) === messageTypes.FILE) && (\n          <FileMessageItemBody message={message as FileMessage} isByMe={isByMe} mouseHover={mouseHover} />\n        )}\n        {(isThumbnailMessage(message as FileMessage)) && (\n          <ThumbnailMessageItemBody message={message as FileMessage} isByMe={isByMe} mouseHover={mouseHover} showFileViewer={showFileViewer} />\n        )}\n        {(getUIKitMessageType((message as FileMessage)) === messageTypes.UNKNOWN) && (\n          <UnknownMessageItemBody message={message} isByMe={isByMe} mouseHover={mouseHover} />\n        )}\n        {/* reactions */}\n        {(useReaction && message?.reactions?.length > 0) && (\n          <div className={getClassName([\n            'sendbird-message-content-reactions',\n            (!isByMe || isThumbnailMessage(message as FileMessage) || isOGMessage(message as UserMessage)) ? '' : 'primary',\n            mouseHover ? 'mouse-hover' : '',\n          ])}>\n            <EmojiReactions\n              userId={userId}\n              message={message}\n              isByMe={isByMe}\n              emojiContainer={emojiContainer}\n              memberNicknamesMap={nicknamesMap}\n              toggleReaction={toggleReaction}\n            />\n          </div>\n        )}\n      </div>\n      {/* right */}\n      <div className={getClassName(['sendbird-message-content__right', chainTopClassName, useReactionClassName])}>\n        {(!isByMe && !chainBottom) && (\n          <Label\n            className={getClassName(['sendbird-message-content__right__created-at', supposedHoverClassName])}\n            type={LabelTypography.CAPTION_3}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {getMessageCreatedAt(message)}\n          </Label>\n        )}\n        {/* incoming menu */}\n        {!isByMe && (\n          <div className={getClassName(['sendbird-message-content-menu', chainTopClassName, supposedHoverClassName, isByMeClassName])}>\n            {useReaction && (\n              <MessageItemReactionMenu\n                className=\"sendbird-message-content-menu__reaction-menu\"\n                message={message as UserMessage | FileMessage}\n                userId={userId}\n                spaceFromTrigger={{}}\n                emojiContainer={emojiContainer}\n                toggleReaction={toggleReaction}\n                setSupposedHover={setSupposedHover}\n              />\n            )}\n            <MessageItemMenu\n              className=\"sendbird-message-content-menu__normal-menu\"\n              channel={channel}\n              message={message as UserMessage | FileMessage}\n              isByMe={isByMe}\n              disabled={disabled}\n              showEdit={showEdit}\n              showRemove={showRemove}\n              resendMessage={resendMessage}\n              setSupposedHover={setSupposedHover}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Modal from '../../../ui/Modal';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\n\nconst RemoveMessage = (props) => {\n  const {\n    onCloseModal,\n    onDeleteMessage,\n  } = props;\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <Modal\n      onCancel={onCloseModal}\n      onSubmit={onDeleteMessage}\n      submitText=\"Delete\"\n      titleText={stringSet.MODAL__DELETE_MESSAGE__TITLE}\n    />\n  );\n};\n\nRemoveMessage.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n  onDeleteMessage: PropTypes.func.isRequired,\n};\n\nexport default RemoveMessage;\n","import React, {\n  useState,\n  useRef,\n  useMemo,\n  useLayoutEffect,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport format from 'date-fns/format';\n\nimport MessageContent from '../../../ui/MessageContent';\nimport DateSeparator from '../../../ui/DateSeparator';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport MessageInput from '../../../ui/MessageInput';\nimport FileViewer from '../../../ui/FileViewer';\nimport RemoveMessageModal from './RemoveMessage';\n\nexport default function MessageHoc({\n  message,\n  userId,\n  disabled,\n  editDisabled,\n  hasSeparator,\n  deleteMessage,\n  updateMessage,\n  scrollToMessage,\n  resendMessage,\n  useReaction,\n  chainTop,\n  chainBottom,\n  membersMap,\n  emojiContainer,\n  highLightedMessageId,\n  toggleReaction,\n  renderCustomMessage,\n  currentGroupChannel,\n}) {\n  const { sender = {} } = message;\n  const [showEdit, setShowEdit] = useState(false);\n  const [showRemove, setShowRemove] = useState(false);\n  const [showFileViewer, setShowFileViewer] = useState(false);\n  const [isAnimated, setIsAnimated] = useState(false);\n  const editMessageInputRef = useRef(null);\n  const useMessageScrollRef = useRef(null);\n\n  useLayoutEffect(() => {\n    if (highLightedMessageId === message.messageId) {\n      if (useMessageScrollRef && useMessageScrollRef.current) {\n        useMessageScrollRef.current.scrollIntoView({\n          block: 'center',\n          inline: 'center',\n        });\n        setTimeout(() => {\n          setIsAnimated(true);\n        }, 500);\n      }\n    } else {\n      setIsAnimated(false);\n    }\n  }, [highLightedMessageId, useMessageScrollRef.current, message.messageId]);\n  const RenderedMessage = useMemo(() => {\n    if (renderCustomMessage) {\n      return renderCustomMessage(message, currentGroupChannel, chainTop, chainBottom);\n      // TODO: Let's change this to object type on next major version up\n      // and add params 'hasSeparator' and 'menuDisabled', scrollToMessage\n    }\n    return null;\n  }, [message, message.message, renderCustomMessage]);\n\n  const isByMe = (userId === sender.userId)\n    || (message.requestState === 'pending')\n    || (message.requestState === 'failed');\n\n  if (RenderedMessage) {\n    return (\n      <div\n        ref={useMessageScrollRef}\n        className={`\n          sendbird-msg-hoc sendbird-msg--scroll-ref\n          ${isAnimated ? 'sendbird-msg-hoc__animated' : ''}\n        `}\n      >\n        {/* date-separator */}\n        {\n          hasSeparator && (\n            <DateSeparator>\n              <Label type={LabelTypography.CAPTION_2} color={LabelColors.ONBACKGROUND_2}>\n                {format(message.createdAt, 'MMMM dd, yyyy')}\n              </Label>\n            </DateSeparator>\n          )\n        }\n        <RenderedMessage message={message} />\n      </div>\n    );\n  }\n\n  if (showEdit) {\n    return (\n      <MessageInput\n        isEdit\n        disabled={editDisabled}\n        ref={editMessageInputRef}\n        name={message.messageId}\n        onSendMessage={updateMessage}\n        onCancelEdit={() => { setShowEdit(false); }}\n        value={message.message}\n      />\n    );\n  }\n\n  return (\n    <div\n      ref={useMessageScrollRef}\n      className={`\n        sendbird-msg-hoc sendbird-msg--scroll-ref\n        ${isAnimated ? 'sendbird-msg-hoc__animated' : ''}\n      `}\n      style={{ marginBottom: '2px' }}\n    >\n      {/* date-separator */}\n      {\n        hasSeparator && (\n          <DateSeparator>\n            <Label type={LabelTypography.CAPTION_2} color={LabelColors.ONBACKGROUND_2}>\n              {format(message.createdAt, 'MMMM dd, yyyy')}\n            </Label>\n          </DateSeparator>\n        )\n      }\n      {/* Message */}\n      <MessageContent\n        className=\"sendbird-message-hoc__message-content\"\n        userId={userId}\n        scrollToMessage={scrollToMessage}\n        channel={currentGroupChannel}\n        message={message}\n        disabled={disabled}\n        chainTop={chainTop}\n        chainBottom={chainBottom}\n        useReaction={useReaction}\n        // useReplying={} TODO: Set useReplying\n        nicknamesMap={membersMap}\n        emojiContainer={emojiContainer}\n        showEdit={setShowEdit}\n        showRemove={setShowRemove}\n        showFileViewer={setShowFileViewer}\n        resendMessage={resendMessage}\n        toggleReaction={toggleReaction}\n      />\n      {/* Modal */}\n      {\n        showRemove && (\n          <RemoveMessageModal\n            onCloseModal={() => setShowRemove(false)}\n            onDeleteMessage={() => {\n              deleteMessage(message);\n            }}\n          />\n        )\n      }\n      {\n        showFileViewer && (\n          <FileViewer\n            onClose={() => setShowFileViewer(false)}\n            message={message}\n            onDelete={() => {\n              deleteMessage(message, () => {\n                setShowFileViewer(false);\n              });\n            }}\n            isByMe={isByMe}\n          />\n        )\n      }\n    </div>\n  );\n}\n\nMessageHoc.propTypes = {\n  userId: PropTypes.string,\n  message: PropTypes.shape({\n    isFileMessage: PropTypes.func,\n    isAdminMessage: PropTypes.func,\n    isUserMessage: PropTypes.func,\n    isDateseparator: PropTypes.func,\n    // should be a number, but there's a bug in SDK shich returns string\n    messageId: PropTypes.number,\n    type: PropTypes.string,\n    createdAt: PropTypes.number,\n    message: PropTypes.string,\n    requestState: PropTypes.string,\n    messageType: PropTypes.string,\n    sender: PropTypes.shape({ userId: PropTypes.string }),\n    ogMetaData: PropTypes.shape({}),\n  }),\n  highLightedMessageId: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  renderCustomMessage: PropTypes.func,\n  currentGroupChannel: PropTypes.shape({}),\n  hasSeparator: PropTypes.bool,\n  disabled: PropTypes.bool,\n  editDisabled: PropTypes.bool,\n  deleteMessage: PropTypes.func.isRequired,\n  scrollToMessage: PropTypes.func,\n  updateMessage: PropTypes.func.isRequired,\n  resendMessage: PropTypes.func.isRequired,\n  useReaction: PropTypes.bool.isRequired,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n  membersMap: PropTypes.instanceOf(Map).isRequired,\n  emojiContainer: PropTypes.shape({\n    emojiCategories: PropTypes.arrayOf(PropTypes.shape({\n      emojis: PropTypes.arrayOf(PropTypes.shape({\n        key: PropTypes.string,\n        url: PropTypes.string,\n      })),\n    })),\n  }),\n  toggleReaction: PropTypes.func,\n};\n\nMessageHoc.defaultProps = {\n  userId: '',\n  editDisabled: false,\n  renderCustomMessage: null,\n  currentGroupChannel: {},\n  message: {},\n  hasSeparator: false,\n  disabled: false,\n  highLightedMessageId: null,\n  toggleReaction: () => { },\n  scrollToMessage: () => { },\n  emojiContainer: {},\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport isSameDay from 'date-fns/isSameDay';\n\nimport './conversation-scroll.scss';\nimport * as messageActionTypes from '../dux/actionTypes';\n\nimport MessageHOC from './MessageHOC';\nimport { compareMessagesForGrouping } from '../utils';\nimport PlaceHolder, { PlaceHolderTypes } from '../../../ui/PlaceHolder';\nimport Icon, { IconTypes, IconColors } from '../../../ui/Icon';\n\nexport default class ConversationScroll extends Component {\n  onScroll = (e) => {\n    const {\n      scrollRef,\n      hasMore,\n      messagesDispatcher,\n      onScroll,\n      onScrollDown,\n      currentGroupChannel,\n    } = this.props;\n\n    const element = e.target;\n    const {\n      scrollTop,\n      clientHeight,\n      scrollHeight,\n    } = element;\n    if (scrollTop === 0) {\n      if (!hasMore) {\n        return;\n      }\n      const nodes = scrollRef.current.querySelectorAll('.sendbird-msg--scroll-ref');\n      const first = nodes && nodes[0];\n      onScroll(([messages]) => {\n        if (messages) {\n          // https://github.com/scabbiaza/react-scroll-position-on-updating-dom\n          try {\n            first.scrollIntoView();\n          } catch (error) {\n            //\n          }\n        }\n      });\n    }\n\n    if (clientHeight + scrollTop === scrollHeight) {\n      const nodes = scrollRef.current.querySelectorAll('.sendbird-msg--scroll-ref');\n      const last = nodes && nodes[nodes.length - 1];\n      onScrollDown(([messages]) => {\n        if (messages) {\n          // https://github.com/scabbiaza/react-scroll-position-on-updating-dom\n          try {\n            last.scrollIntoView();\n          } catch (error) {\n            //\n          }\n        }\n      });\n    }\n\n    // do this later\n    setTimeout(() => {\n      // mark as read if scroll is at end\n      if (clientHeight + scrollTop === scrollHeight) {\n        messagesDispatcher({\n          type: messageActionTypes.MARK_AS_READ,\n        });\n        currentGroupChannel.markAsRead();\n      }\n    }, 500);\n  }\n\n  render() {\n    const {\n      userId,\n      disabled,\n      scrollRef,\n      membersMap,\n      allMessages,\n      scrollToMessage,\n      useReaction,\n      emojiAllMap,\n      editDisabled,\n      deleteMessage,\n      updateMessage,\n      resendMessage,\n      renderCustomMessage,\n      renderChatItem,\n      highLightedMessageId,\n      emojiContainer,\n      toggleReaction,\n      useMessageGrouping,\n      currentGroupChannel,\n      memoizedEmojiListItems,\n      showScrollBot,\n      onClickScrollBot,\n    } = this.props;\n\n    if (allMessages.length < 1) {\n      return (\n        <PlaceHolder\n          className=\"sendbird-conversation__no-messages\"\n          type={PlaceHolderTypes.NO_MESSAGES}\n        />\n      );\n    }\n\n    return (\n      <div className=\"sendbird-conversation__messages\">\n        <div\n          ref={scrollRef}\n          className=\"sendbird-conversation__scroll-container\"\n          onScroll={this.onScroll}\n        >\n          <div className=\"sendbird-conversation__padding\" />\n          {/*\n            To do: Implement windowing\n            Implement windowing if you are dealing with large number of messages/channels\n            https://github.com/bvaughn/react-window -> recommendation\n            We hesitate to bring one more dependency to our library,\n            we are planning to implement it inside the library\n          */}\n          <div className=\"sendbird-conversation__messages-padding\">\n            {\n              allMessages.map(\n                (m, idx) => {\n                  const previousMessage = allMessages[idx - 1];\n                  const nextMessage = allMessages[idx + 1];\n                  const [chainTop, chainBottom] = useMessageGrouping\n                    ? compareMessagesForGrouping(previousMessage, m, nextMessage)\n                    : [false, false];\n                  const previousMessageCreatedAt = previousMessage && previousMessage.createdAt;\n                  const currentCreatedAt = m.createdAt;\n                  // https://stackoverflow.com/a/41855608\n                  const hasSeparator = !(previousMessageCreatedAt && (\n                    isSameDay(currentCreatedAt, previousMessageCreatedAt)\n                  ));\n                  if (renderChatItem) {\n                    return (\n                      <div\n                        key={m.messageId || m.reqId}\n                        className=\"sendbird-msg--scroll-ref\"\n                      >\n                        {\n                          renderChatItem({\n                            message: m,\n                            highLightedMessageId,\n                            channel: currentGroupChannel,\n                            onDeleteMessage: deleteMessage,\n                            onUpdateMessage: updateMessage,\n                            onResendMessage: resendMessage,\n                            onScrollToMessage: scrollToMessage,\n                            emojiContainer,\n                            chainTop,\n                            chainBottom,\n                            hasSeparator,\n                            menuDisabled: disabled,\n                          })\n                        }\n                      </div>\n                    );\n                  }\n\n                  return (\n                    <MessageHOC\n                      highLightedMessageId={highLightedMessageId}\n                      renderCustomMessage={renderCustomMessage}\n                      key={m.messageId || m.reqId}\n                      userId={userId}\n                      // show status for pending/failed messages\n                      message={m}\n                      scrollToMessage={scrollToMessage}\n                      currentGroupChannel={currentGroupChannel}\n                      disabled={disabled}\n                      membersMap={membersMap}\n                      chainTop={chainTop}\n                      useReaction={useReaction}\n                      emojiAllMap={emojiAllMap}\n                      emojiContainer={emojiContainer}\n                      editDisabled={editDisabled}\n                      hasSeparator={hasSeparator}\n                      chainBottom={chainBottom}\n                      updateMessage={updateMessage}\n                      deleteMessage={deleteMessage}\n                      resendMessage={resendMessage}\n                      toggleReaction={toggleReaction}\n                      memoizedEmojiListItems={memoizedEmojiListItems}\n                    />\n                  );\n                },\n              )\n            }\n          </div>\n        </div>\n        {\n          showScrollBot && (\n            <div\n              className=\"sendbird-conversation__scroll-bottom-button\"\n              onClick={onClickScrollBot}\n              onKeyDown={onClickScrollBot}\n              tabIndex={0}\n              role=\"button\"\n            >\n              <Icon\n                width=\"24px\"\n                height=\"24px\"\n                type={IconTypes.CHEVRON_DOWN}\n                fillColor={IconColors.PRIMARY}\n              />\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nConversationScroll.propTypes = {\n  // https://stackoverflow.com/a/52646941\n  scrollRef: PropTypes.shape({\n    current: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.shape({}),\n    ]),\n  }).isRequired,\n  hasMore: PropTypes.bool,\n  messagesDispatcher: PropTypes.func.isRequired,\n  onScroll: PropTypes.func,\n  onScrollDown: PropTypes.func,\n  editDisabled: PropTypes.bool,\n  disabled: PropTypes.bool,\n  userId: PropTypes.string,\n  allMessages: PropTypes.arrayOf(PropTypes.shape({\n    createdAt: PropTypes.number,\n  })).isRequired,\n  deleteMessage: PropTypes.func.isRequired,\n  resendMessage: PropTypes.func.isRequired,\n  updateMessage: PropTypes.func.isRequired,\n  readStatus: PropTypes.shape({}).isRequired,\n  currentGroupChannel: PropTypes.shape({\n    markAsRead: PropTypes.func,\n    members: PropTypes.arrayOf(PropTypes.shape({})),\n  }).isRequired,\n  highLightedMessageId: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  renderChatItem: PropTypes.element,\n  renderCustomMessage: PropTypes.func,\n  scrollToMessage: PropTypes.func,\n  useReaction: PropTypes.bool,\n  showScrollBot: PropTypes.bool,\n  onClickScrollBot: PropTypes.func,\n  emojiContainer: PropTypes.shape({}),\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  useMessageGrouping: PropTypes.bool,\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n};\n\nConversationScroll.defaultProps = {\n  hasMore: false,\n  editDisabled: false,\n  disabled: false,\n  userId: '',\n  renderCustomMessage: null,\n  renderChatItem: null,\n  highLightedMessageId: null,\n  onScroll: null,\n  onScrollDown: null,\n  useReaction: true,\n  emojiContainer: {},\n  showScrollBot: false,\n  onClickScrollBot: () => {},\n  scrollToMessage: () => {},\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  useMessageGrouping: true,\n  toggleReaction: () => { },\n  memoizedEmojiListItems: () => '',\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './notification.scss';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../../ui/Icon';\n\nexport default function Notification({\n  count,\n  time,\n  onClick,\n}) {\n  const { stringSet } = useContext(LocalizationContext);\n  const timeArray = time.split(' ');\n  timeArray.splice(-2, 0, stringSet.CHANNEL__MESSAGE_LIST__NOTIFICATION__ON);\n  return (\n    // eslint-disable-next-line\n    <div className=\"sendbird-notification\" onClick={onClick}>\n      <Label className=\"sendbird-notification__text\" color={LabelColors.ONCONTENT_1} type={LabelTypography.CAPTION_2}>\n        {`${count} `}\n        {stringSet.CHANNEL__MESSAGE_LIST__NOTIFICATION__NEW_MESSAGE}\n        {` ${timeArray.join(' ')}`}\n      </Label>\n      <Icon\n        width=\"24px\"\n        height=\"24px\"\n        type={IconTypes.CHEVRON_DOWN}\n        fillColor={IconColors.CONTENT}\n      />\n    </div>\n  );\n}\n\nNotification.propTypes = {\n  count: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  time: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\n\nNotification.defaultProps = {\n  count: 0,\n  time: '',\n};\n","import React, { useContext } from 'react';\n\nimport './notification.scss';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Label, { LabelTypography } from '../../../ui/Label';\n\nconst FrozenNotification = (): JSX.Element => {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-notification sendbird-notification--frozen\">\n      <Label\n        className=\"sendbird-notification__text\"\n        type={LabelTypography.CAPTION_2}\n      >\n        {stringSet.CHANNEL_FROZEN}\n      </Label>\n    </div>\n  );\n}\n\nexport default FrozenNotification;\n","import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport { uuidv4 } from '../../../utils/uuid';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\n\nconst TypingIndicatorText = ({ members }) => {\n  const { stringSet } = useContext(LocalizationContext);\n  if (!members || members.length === 0) {\n    return '';\n  }\n\n  if (members && members.length === 1) {\n    return `${members[0].nickname} ${stringSet.TYPING_INDICATOR__IS_TYPING}`;\n  }\n\n  if (members && members.length === 2) {\n    return `${members[0].nickname} ${stringSet.TYPING_INDICATOR__AND} ${members[1].nickname} ${stringSet.TYPING_INDICATOR__ARE_TYPING}`;\n  }\n\n  return stringSet.TYPING_INDICATOR__MULTIPLE_TYPING;\n};\n\nfunction TypingIndicator({ channelUrl, sb, logger }) {\n  const [handlerId, setHandlerId] = useState(uuidv4());\n  const [typingMembers, setTypingMembers] = useState([]);\n\n  useEffect(() => {\n    if (sb && sb.ChannelHandler) {\n      sb.removeChannelHandler(handlerId);\n      const newHandlerId = uuidv4();\n      const handler = new sb.ChannelHandler();\n      // there is a possible warning in here - setState called after unmount\n      handler.onTypingStatusUpdated = (groupChannel) => {\n        logger.info('Channel > Typing Indicator: onTypingStatusUpdated', groupChannel);\n        const members = groupChannel.getTypingMembers();\n        if (groupChannel.url === channelUrl) {\n          setTypingMembers(members);\n        }\n      };\n      sb.addChannelHandler(newHandlerId, handler);\n      setHandlerId(newHandlerId);\n    }\n\n    return () => {\n      setTypingMembers([]);\n      if (sb && sb.removeChannelHandler) {\n        sb.removeChannelHandler(handlerId);\n      }\n    };\n  }, [channelUrl]);\n\n  return (\n    <Label type={LabelTypography.CAPTION_2} color={LabelColors.ONBACKGROUND_2}>\n      <TypingIndicatorText members={typingMembers} />\n    </Label>\n  );\n}\n\nTypingIndicator.propTypes = {\n  channelUrl: PropTypes.string.isRequired,\n  sb: PropTypes.shape({\n    ChannelHandler: PropTypes.func,\n    removeChannelHandler: PropTypes.func,\n    addChannelHandler: PropTypes.func,\n  }).isRequired,\n  logger: PropTypes.shape({\n    info: PropTypes.func,\n  }).isRequired,\n};\n\nexport default TypingIndicator;\n","// Logic required to handle message input rendering\n\nimport React, { useContext } from 'react';\nimport Sendbird from 'sendbird';\n\nimport { RenderGroupChannelMessageInputProps } from '../../../index';\nimport * as utils from '../utils.js';\n\nimport MessageInput from '../../../ui/MessageInput';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\n\ninterface Props {\n  channel: Sendbird.GroupChannel;\n  user: Sendbird.User;\n  isOnline: boolean;\n  initialized: boolean;\n  onSendMessage(): void;\n  onFileUpload(): void;\n  renderMessageInput(renderProps: RenderGroupChannelMessageInputProps): JSX.Element;\n}\n\nconst MessageInputWrapper = ({\n  channel,\n  user,\n  onSendMessage,\n  onFileUpload,\n  renderMessageInput,\n  isOnline,\n  initialized,\n}: Props, ref: React.RefObject<HTMLInputElement>): JSX.Element => {\n  const { stringSet } = useContext(LocalizationContext);\n  const disabled = !initialized\n    || utils.isDisabledBecauseFrozen(channel)\n    || utils.isDisabledBecauseMuted(channel)\n    || !isOnline;\n\n  const isOperator = utils.isOperator(channel);\n  const { isBroadcast } = channel;\n\n  // custom message\n  if (renderMessageInput) {\n    return renderMessageInput({ channel, user, disabled });\n  }\n\n  // broadcast channel + not operator\n  if (isBroadcast && !isOperator) {\n    return null;\n  }\n\n  // other conditions\n  return (\n    <MessageInput\n      placeholder={(utils.isDisabledBecauseFrozen(channel)\n        && stringSet.CHANNEL__MESSAGE_INPUT__PLACE_HOLDER__DISABLED)\n        || (utils.isDisabledBecauseMuted(channel)\n          && stringSet.CHANNEL__MESSAGE_INPUT__PLACE_HOLDER__MUTED\n        )\n      }\n      ref={ref}\n      disabled={disabled}\n      onStartTyping={() => {\n        channel.startTyping();\n      }}\n      onSendMessage={onSendMessage}\n      onFileUpload={onFileUpload}\n    />\n  );\n}\n\nexport default React.forwardRef(MessageInputWrapper);\n","import React, { useContext } from 'react';\n\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nimport './index.scss';\n\nfunction ConnectionStatus() {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-connection-status\">\n      <Label\n        type={LabelTypography.BODY_2}\n        color={LabelColors.ONBACKGROUND_2}\n      >\n        {stringSet.TRYING_TO_CONNECT}\n      </Label>\n      <Icon\n        type={IconTypes.DISCONNECTED}\n        fillColor={IconColors.SENT}\n        width=\"14px\"\n        height=\"14px\"\n      />\n    </div>\n  );\n}\n\nexport default ConnectionStatus;\n","import formatDistanceToNowStrict from 'date-fns/formatDistanceToNowStrict';\nimport { LabelStringSet } from '../Label';\n\nexport const prettyDate = (date) => formatDistanceToNowStrict(date, { addSuffix: true });\n\nexport const getChannelTitle = (channel = {}, currentUserId, stringSet = LabelStringSet) => {\n  if (!channel || (!channel.name && !channel.members)) {\n    return stringSet.NO_TITLE;\n  }\n  if (channel.name && channel.name !== 'Group Channel') {\n    return channel.name;\n  }\n\n  if (channel.members.length === 1) {\n    return stringSet.NO_MEMBERS;\n  }\n\n  return channel.members\n    .filter(({ userId }) => userId !== currentUserId)\n    .map(({ nickname }) => (nickname || stringSet.NO_NAME))\n    .join(', ');\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport * as utils from './utils';\n\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport ChannelAvatar from '../ChannelAvatar/index';\n\nconst noop = () => { };\nexport default function ChatHeader(props) {\n  const {\n    currentGroupChannel,\n    currentUser,\n    title,\n    subTitle,\n    isMuted,\n    theme,\n    showSearchIcon,\n    onSearchClick,\n    onActionClick,\n  } = props;\n  const { userId } = currentUser;\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-chat-header\">\n      <div className=\"sendbird-chat-header__left\">\n        <ChannelAvatar\n          theme={theme}\n          channel={currentGroupChannel}\n          userId={userId}\n          height={32}\n          width={32}\n        />\n        <Label\n          className=\"sendbird-chat-header__left__title\"\n          type={LabelTypography.H_2}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {title || utils.getChannelTitle(currentGroupChannel, userId, stringSet)}\n        </Label>\n        <Label\n          className=\"sendbird-chat-header__left__subtitle\"\n          type={LabelTypography.BODY_1}\n          color={LabelColors.ONBACKGROUND_2}\n        >\n          {subTitle}\n        </Label>\n      </div>\n      <div className=\"sendbird-chat-header__right\">\n        {\n          ((typeof isMuted === 'string' && isMuted === 'true') || (typeof isMuted === 'boolean' && isMuted))\n            && (\n              <Icon\n                className=\"sendbird-chat-header__right__mute\"\n                type={IconTypes.NOTIFICATIONS_OFF_FILLED}\n                width=\"24px\"\n                height=\"24px\"\n              />\n            )\n        }\n        {\n          showSearchIcon && (\n            <IconButton\n              className=\"sendbird-chat-header__right__search\"\n              width=\"32px\"\n              height=\"32px\"\n              onClick={onSearchClick}\n            >\n              <Icon\n                type={IconTypes.SEARCH}\n                fillColor={IconColors.PRIMARY}\n                width=\"24px\"\n                height=\"24px\"\n              />\n            </IconButton>\n          )\n        }\n        <IconButton\n          className=\"sendbird-chat-header__right__info\"\n          width=\"32px\"\n          height=\"32px\"\n          onClick={onActionClick}\n        >\n          <Icon\n            type={IconTypes.INFO}\n            fillColor={IconColors.PRIMARY}\n            width=\"24px\"\n            height=\"24px\"\n          />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n\nChatHeader.propTypes = {\n  currentGroupChannel: PropTypes.shape({\n    members: PropTypes.arrayOf(PropTypes.shape({})),\n    coverUrl: PropTypes.string,\n  }),\n  currentUser: PropTypes.shape({\n    userId: PropTypes.string,\n  }),\n  title: PropTypes.string,\n  subTitle: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.string,\n  ]),\n  isMuted: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.bool,\n  ]),\n  theme: PropTypes.string,\n  showSearchIcon: PropTypes.bool,\n  onSearchClick: PropTypes.func,\n  onActionClick: PropTypes.func,\n};\n\nChatHeader.defaultProps = {\n  currentGroupChannel: {},\n  currentUser: {},\n  title: '',\n  subTitle: '',\n  isMuted: false,\n  theme: 'light',\n  showSearchIcon: false,\n  onSearchClick: noop,\n  onActionClick: noop,\n};\n","import React, {\n  useEffect,\n  useRef,\n  useReducer,\n  useMemo,\n  useState,\n} from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport * as utils from './utils';\n\nimport { UserProfileProvider } from '../../lib/UserProfileContext';\nimport withSendbirdContext from '../../lib/SendbirdSdkContext';\nimport * as messageActionTypes from './dux/actionTypes';\nimport messagesInitialState from './dux/initialState';\nimport messagesReducer from './dux/reducers';\n\nimport useHandleChannelEvents from './hooks/useHandleChannelEvents';\nimport useGetChannel from './hooks/useGetChannel';\nimport useInitialMessagesFetch from './hooks/useInitialMessagesFetch';\nimport useHandleReconnect from './hooks/useHandleReconnect';\nimport useScrollCallback from './hooks/useScrollCallback';\nimport useScrollDownCallback from './hooks/useScrollDownCallback';\nimport useDeleteMessageCallback from './hooks/useDeleteMessageCallback';\nimport useUpdateMessageCallback from './hooks/useUpdateMessageCallback';\nimport useResendMessageCallback from './hooks/useResendMessageCallback';\nimport useSendMessageCallback from './hooks/useSendMessageCallback';\nimport useSendFileMessageCallback from './hooks/useSendFileMessageCallback';\nimport useMemoizedEmojiListItems from './hooks/useMemoizedEmojiListItems';\nimport useToggleReactionCallback from './hooks/useToggleReactionCallback';\nimport useScrollToMessage from './hooks/useScrollToMessage';\n\nimport ConversationScroll from './components/ConversationScroll';\nimport Notification from './components/Notification';\nimport FrozenNotification from './components/FrozenNotification';\nimport TypingIndicator from './components/TypingIndicator';\nimport MessageInputWrapper from './components/MessageInputWrapper';\nimport ConnectionStatus from '../../ui/ConnectionStatus';\nimport ChatHeader from '../../ui/ChatHeader';\nimport PlaceHolder, { PlaceHolderTypes } from '../../ui/PlaceHolder';\n\nconst noop = () => { };\n\nexport const ConversationPanel = (props) => {\n  const {\n    channelUrl,\n    stores: { sdkStore, userStore },\n    config: {\n      userId,\n      logger,\n      pubSub,\n      isOnline,\n      theme,\n      imageCompression,\n    },\n    dispatchers: {\n      reconnect,\n    },\n    queries = {},\n    startingPoint,\n    highlightedMessage,\n    useReaction,\n    showSearchIcon,\n    onSearchClick,\n    renderChatItem,\n    renderChatHeader,\n    renderCustomMessage,\n    renderUserProfile,\n    disableUserProfile,\n    renderMessageInput,\n    useMessageGrouping,\n    onChatHeaderActionClick,\n    onBeforeSendUserMessage,\n    onBeforeSendFileMessage,\n    onBeforeUpdateUserMessage,\n  } = props;\n\n  const { sdk } = sdkStore;\n  const { config } = props;\n  const sdkError = sdkStore.error;\n  const sdkInit = sdkStore.initialized;\n  const { user } = userStore;\n  if (queries.messageListQuery) {\n    // eslint-disable-next-line no-console\n    console.warn('messageListQuery has been deprecated, please use messageListParams instead');\n  }\n\n  const [intialTimeStamp, setIntialTimeStamp] = useState(startingPoint);\n  useEffect(() => {\n    setIntialTimeStamp(startingPoint);\n  }, [startingPoint, channelUrl]);\n  const [highLightedMessageId, setHighLightedMessageId] = useState(highlightedMessage);\n  useEffect(() => {\n    setHighLightedMessageId(highlightedMessage);\n  }, [highlightedMessage]);\n  const userFilledMessageListQuery = queries.messageListParams;\n\n  const [messagesStore, messagesDispatcher] = useReducer(messagesReducer, messagesInitialState);\n  const scrollRef = useRef(null);\n\n  const {\n    allMessages,\n    loading,\n    initialized,\n    unreadCount,\n    unreadSince,\n    isInvalid,\n    currentGroupChannel = {},\n    hasMore,\n    lastMessageTimeStamp,\n    hasMoreToBottom,\n    latestFetchedMessageTimeStamp,\n    emojiContainer,\n    readStatus,\n  } = messagesStore;\n  const { isFrozen, isBroadcast, isSuper } = currentGroupChannel;\n  const { appInfo = {} } = sdk;\n  const usingReaction = (\n    appInfo.isUsingReaction && !isBroadcast && !isSuper && useReaction\n  );\n\n  const userDefinedDisableUserProfile = disableUserProfile || config.disableUserProfile;\n  const userDefinedRenderProfile = renderUserProfile || config.renderUserProfile;\n  const showScrollBot = hasMoreToBottom;\n\n  // TODO: emojiAllMap, emoijAllList, nicknamesMap => should be moved to messagesStore\n  const emojiAllMap = useMemo(() => (\n    usingReaction\n      ? utils.getAllEmojisMapFromEmojiContainer(emojiContainer)\n      : new Map()\n  ), [emojiContainer]);\n  const emojiAllList = useMemo(() => (\n    usingReaction\n      ? utils.getAllEmojisFromEmojiContainer(emojiContainer)\n      : []\n  ), [emojiContainer]);\n  const nicknamesMap = useMemo(() => (\n    usingReaction\n      ? utils.getNicknamesMapFromMembers(currentGroupChannel.members)\n      : new Map()\n  ), [currentGroupChannel.members]);\n\n  // Scrollup is default scroll for channel\n  const onScrollCallback = useScrollCallback({\n    currentGroupChannel, lastMessageTimeStamp, userFilledMessageListQuery,\n  }, {\n    hasMore,\n    logger,\n    messagesDispatcher,\n    sdk,\n  });\n\n  const scrollToMessage = useScrollToMessage({\n    setIntialTimeStamp,\n    setHighLightedMessageId,\n    allMessages,\n  }, { logger });\n\n  // onScrollDownCallback is added for navigation to different timestamps on messageSearch\n  // hasMoreToBottom, onScrollDownCallback -> scroll down\n  // hasMore, onScrollCallback -> scroll up(default behavior)\n  const onScrollDownCallback = useScrollDownCallback({\n    currentGroupChannel,\n    latestFetchedMessageTimeStamp,\n    userFilledMessageListQuery,\n    hasMoreToBottom,\n  }, {\n    logger,\n    messagesDispatcher,\n    sdk,\n  });\n\n  const toggleReaction = useToggleReactionCallback({ currentGroupChannel }, { logger });\n\n  const memoizedEmojiListItems = useMemoizedEmojiListItems({\n    emojiContainer, toggleReaction,\n  }, {\n    useReaction: usingReaction,\n    logger,\n    userId,\n    emojiAllList,\n  });\n\n  // to create message-datasource\n  // this hook sets currentGroupChannel asynchronously\n  useGetChannel(\n    { channelUrl, sdkInit },\n    { messagesDispatcher, sdk, logger },\n  );\n\n  // Hook to handle ChannelEvents and send values to useReducer using messagesDispatcher\n  useHandleChannelEvents(\n    { currentGroupChannel, sdkInit, hasMoreToBottom },\n    {\n      messagesDispatcher,\n      sdk,\n      logger,\n      scrollRef,\n    },\n  );\n\n  // hook that fetches messages when channel changes\n  // to be clear here useGetChannel sets currentGroupChannel\n  // and useInitialMessagesFetch executes when currentGroupChannel changes\n  // p.s This one executes on intialTimeStamp change too\n  useInitialMessagesFetch({\n    currentGroupChannel,\n    userFilledMessageListQuery,\n    intialTimeStamp,\n  }, {\n    sdk,\n    logger,\n    messagesDispatcher,\n  });\n\n  // handles API calls from withSendbird\n  useEffect(() => {\n    const subScriber = utils.pubSubHandler(channelUrl, pubSub, messagesDispatcher);\n    return () => {\n      utils.pubSubHandleRemover(subScriber);\n    };\n  }, [channelUrl, sdkInit]);\n\n  // handling connection breaks\n  useHandleReconnect({ isOnline }, {\n    logger,\n    sdk,\n    currentGroupChannel,\n    messagesDispatcher,\n    userFilledMessageListQuery,\n  });\n\n  // callbacks for Message CURD actions\n  const deleteMessage = useDeleteMessageCallback({ currentGroupChannel, messagesDispatcher },\n    { logger });\n  const updateMessage = useUpdateMessageCallback(\n    { currentGroupChannel, messagesDispatcher, onBeforeUpdateUserMessage },\n    { logger, sdk, pubSub },\n  );\n  const resendMessage = useResendMessageCallback(\n    { currentGroupChannel, messagesDispatcher },\n    { logger },\n  );\n  const [messageInputRef, onSendMessage] = useSendMessageCallback(\n    { currentGroupChannel, onBeforeSendUserMessage },\n    {\n      sdk,\n      logger,\n      pubSub,\n      messagesDispatcher,\n    },\n  );\n  const [onSendFileMessage] = useSendFileMessageCallback(\n    { currentGroupChannel, onBeforeSendFileMessage, imageCompression },\n    {\n      sdk,\n      logger,\n      pubSub,\n      messagesDispatcher,\n    },\n  );\n\n  if (!channelUrl) {\n    return (<div className=\"sendbird-conversation\"><PlaceHolder type={PlaceHolderTypes.NO_CHANNELS} /></div>);\n  }\n  if (isInvalid) {\n    return (<div className=\"sendbird-conversation\"><PlaceHolder type={PlaceHolderTypes.WRONG} /></div>);\n  }\n  if (sdkError) {\n    return (\n      <div className=\"sendbird-conversation\">\n        <PlaceHolder\n          type={PlaceHolderTypes.WRONG}\n          retryToConnect={() => {\n            logger.info('Channel: reconnecting');\n            reconnect();\n          }}\n        />\n      </div>\n    );\n  }\n  return (\n    <UserProfileProvider\n      className=\"sendbird-conversation\"\n      disableUserProfile={userDefinedDisableUserProfile}\n      renderUserProfile={userDefinedRenderProfile}\n    >\n      {\n        renderChatHeader\n          ? renderChatHeader({ channel: currentGroupChannel, user })\n          : (\n            <ChatHeader\n              theme={theme}\n              currentGroupChannel={currentGroupChannel}\n              currentUser={user}\n              showSearchIcon={showSearchIcon}\n              onSearchClick={onSearchClick}\n              onActionClick={onChatHeaderActionClick}\n              subTitle={currentGroupChannel.members && currentGroupChannel.members.length !== 2}\n              isMuted={false}\n            />\n          )\n      }\n      {\n        isFrozen && (\n          <FrozenNotification />\n        )\n      }\n      {\n        unreadCount > 0 && (\n          <Notification\n            count={unreadCount}\n            onClick={() => {\n              if (intialTimeStamp) {\n                setIntialTimeStamp(null);\n                setHighLightedMessageId(null);\n              } else {\n                utils.scrollIntoLast();\n                // there is no scroll\n                if (scrollRef.current.scrollTop === 0) {\n                  currentGroupChannel.markAsRead();\n                  messagesDispatcher({\n                    type: messageActionTypes.MARK_AS_READ,\n                  });\n                }\n              }\n            }}\n            time={unreadSince}\n          />\n        )\n      }\n      {\n        loading\n          ? (\n            <div className=\"sendbird-conversation\">\n              <PlaceHolder type={PlaceHolderTypes.LOADING} />\n            </div>\n          ) : (\n            <ConversationScroll\n              swapParams={\n                sdk && sdk.getErrorFirstCallback && sdk.getErrorFirstCallback()\n              }\n              highLightedMessageId={highLightedMessageId}\n              userId={userId}\n              hasMore={hasMore}\n              disabled={!isOnline}\n              onScroll={onScrollCallback}\n              onScrollDown={onScrollDownCallback}\n              scrollRef={scrollRef}\n              readStatus={readStatus}\n              useReaction={usingReaction}\n              allMessages={allMessages}\n              scrollToMessage={scrollToMessage}\n              emojiAllMap={emojiAllMap}\n              membersMap={nicknamesMap}\n              editDisabled={utils.isDisabledBecauseFrozen(currentGroupChannel)}\n              deleteMessage={deleteMessage}\n              updateMessage={updateMessage}\n              resendMessage={resendMessage}\n              toggleReaction={toggleReaction}\n              emojiContainer={emojiContainer}\n              renderChatItem={renderChatItem}\n              showScrollBot={showScrollBot}\n              onClickScrollBot={() => {\n                setIntialTimeStamp(null);\n                setHighLightedMessageId(null);\n              }}\n              renderCustomMessage={renderCustomMessage}\n              useMessageGrouping={useMessageGrouping}\n              messagesDispatcher={messagesDispatcher}\n              currentGroupChannel={currentGroupChannel}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n            />\n          )\n      }\n      <div className=\"sendbird-conversation__footer\">\n        <MessageInputWrapper\n          channel={currentGroupChannel}\n          user={user}\n          ref={messageInputRef}\n          onSendMessage={onSendMessage}\n          onFileUpload={onSendFileMessage}\n          renderMessageInput={renderMessageInput}\n          isOnline={isOnline}\n          initialized={initialized}\n        />\n        <div className=\"sendbird-conversation__typing-indicator\">\n          <TypingIndicator channelUrl={channelUrl} sb={sdk} logger={logger} />\n        </div>\n        {\n          !isOnline && (\n            <ConnectionStatus sdkInit={sdkInit} sb={sdk} logger={logger} />\n          )\n        }\n      </div>\n    </UserProfileProvider>\n  );\n};\n\nConversationPanel.propTypes = {\n  channelUrl: PropTypes.string,\n  stores: PropTypes.shape({\n    sdkStore: PropTypes.shape({\n      initialized: PropTypes.bool,\n      sdk: PropTypes.shape({\n        getErrorFirstCallback: PropTypes.func,\n        removeChannelHandler: PropTypes.func,\n        GroupChannel: PropTypes.any,\n        ChannelHandler: PropTypes.any,\n        addChannelHandler: PropTypes.func,\n        UserMessageParams: PropTypes.any,\n        FileMessageParams: PropTypes.any,\n        getAllEmoji: PropTypes.func,\n        appInfo: PropTypes.shape({}),\n      }),\n      error: PropTypes.bool,\n    }),\n    userStore: PropTypes.shape({\n      user: PropTypes.shape({}),\n    }),\n  }).isRequired,\n  dispatchers: PropTypes.shape({\n    reconnect: PropTypes.func,\n  }).isRequired,\n  config: PropTypes.shape({\n    disableUserProfile: PropTypes.bool,\n    renderUserProfile: PropTypes.func,\n    userId: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired,\n    theme: PropTypes.string,\n    logger: PropTypes.shape({\n      info: PropTypes.func,\n      error: PropTypes.func,\n      warning: PropTypes.func,\n    }),\n    pubSub: PropTypes.shape({\n      subscribe: PropTypes.func,\n      publish: PropTypes.func,\n    }),\n    imageCompression: PropTypes.shape({\n      compressionRate: PropTypes.number,\n      resizingWidth: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n      ]),\n      resizingHeight: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n      ]),\n    }),\n  }).isRequired,\n  queries: PropTypes.shape({\n    messageListParams: PropTypes.shape({\n      includeMetaArray: PropTypes.bool,\n      includeParentMessageText: PropTypes.bool,\n      includeReaction: PropTypes.bool,\n      includeReplies: PropTypes.bool,\n      includeThreadInfo: PropTypes.bool,\n      limit: PropTypes.number,\n      reverse: PropTypes.bool,\n      senderUserIdsFilter: PropTypes.arrayOf(PropTypes.string),\n    }),\n  }),\n  startingPoint: PropTypes.number,\n  highlightedMessage: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  onBeforeSendUserMessage: PropTypes.func, // onBeforeSendUserMessage(text)\n  onBeforeSendFileMessage: PropTypes.func, // onBeforeSendFileMessage(File)\n  onBeforeUpdateUserMessage: PropTypes.func,\n  renderChatItem: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  renderCustomMessage: PropTypes.func,\n  renderMessageInput: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  renderChatHeader: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  showSearchIcon: PropTypes.bool,\n  onSearchClick: PropTypes.func,\n  onChatHeaderActionClick: PropTypes.func,\n  useReaction: PropTypes.bool,\n  disableUserProfile: PropTypes.bool,\n  renderUserProfile: PropTypes.func,\n  useMessageGrouping: PropTypes.bool,\n};\n\nConversationPanel.defaultProps = {\n  channelUrl: null,\n  queries: {},\n  onBeforeSendUserMessage: null,\n  onBeforeSendFileMessage: null,\n  onBeforeUpdateUserMessage: null,\n  startingPoint: null,\n  highlightedMessage: null,\n  renderChatItem: null,\n  renderCustomMessage: null,\n  renderMessageInput: null,\n  renderChatHeader: null,\n  useReaction: true,\n  showSearchIcon: false,\n  onSearchClick: noop,\n  disableUserProfile: false,\n  renderUserProfile: null,\n  useMessageGrouping: true,\n  onChatHeaderActionClick: noop,\n};\n\nexport const {\n  getEmojiCategoriesFromEmojiContainer,\n  getAllEmojisFromEmojiContainer,\n  getEmojisFromEmojiContainer,\n} = utils;\n\nexport default withSendbirdContext(ConversationPanel);\n"],"names":["RESET_MESSAGES","RESET_STATE","CLEAR_SENT_MESSAGES","GET_PREV_MESSAGES_START","GET_PREV_MESSAGES_SUCESS","GET_NEXT_MESSAGES_SUCESS","GET_NEXT_MESSAGES_FAILURE","SEND_MESSAGEGE_START","SEND_MESSAGEGE_SUCESS","SEND_MESSAGEGE_FAILURE","RESEND_MESSAGEGE_START","ON_MESSAGE_RECEIVED","UPDATE_UNREAD_COUNT","ON_MESSAGE_UPDATED","ON_MESSAGE_DELETED","ON_MESSAGE_DELETED_BY_REQ_ID","SET_CURRENT_CHANNEL","SET_CHANNEL_INVALID","MARK_AS_READ","ON_REACTION_UPDATED","SET_EMOJI_CONTAINER","MESSAGE_LIST_PARAMS_CHANGED","getOutgoingMessageStates","UNDEFINED","getSendingMessageStatus","SUCCEEDED","FAILED","PENDING","scrollIntoLast","intialTry","MAX_TRIES","currentTry","scrollDOM","document","querySelector","scrollTop","scrollHeight","error","setTimeout","pubSubHandleRemover","subscriber","forEach","s","remove","pubSubHandler","channelUrl","pubSub","dispatcher","Map","subscribe","set","topics","msg","channel","message","url","type","channelActions","payload","fromSelector","messageId","isOperator","groupChannel","myRole","isDisabledBecauseFrozen","isFrozen","isDisabledBecauseMuted","myMutedState","getEmojiCategoriesFromEmojiContainer","emojiContainer","emojiCategories","getAllEmojisFromEmojiContainer","allEmojis","categoryIndex","length","emojis","emojiIndex","push","getEmojisFromEmojiContainer","emojiCategoryId","filter","emojiCategory","id","getAllEmojisMapFromEmojiContainer","allEmojisMap","key","getNicknamesMapFromMembers","members","nicknamesMap","memberIndex","userId","nickname","getMessageCreatedAt","format","createdAt","isSameGroup","comparingMessage","sender","sendingStatus","compareMessagesForGrouping","prevMessage","currMessage","nextMessage","hasOwnProperty","property","passUnsuccessfullMessages","allMessages","newMessage","lastIndexOfSucceededMessage","map","isAdminMessage","lastIndexOf","messages","splice","pxToNumber","px","parsed","Number","parseFloat","isNaN","initialized","loading","currentGroupChannel","hasMore","lastMessageTimeStamp","hasMoreToBottom","latestFetchedMessageTimeStamp","unreadCount","unreadSince","isInvalid","messageListParams","reducer","state","action","actionTypes","initialState","m","receivedMessages","stateChannel","stateChannelUrl","actionChannelUrl","filteredAllMessages","find","compareIds","hasHasMoreToBottom","hasLatestFetchedMessageTimeStamp","newMessages","reqId","sort","a","b","failed","currentGroupChannelUrl","scrollToEnd","some","filterMessageListParams","Date","applyReactionEvent","useHandleChannelEvents","sdkInit","messagesDispatcher","sdk","logger","scrollRef","useEffect","messageReceiverId","uuidv4","ChannelHandler","info","onMessageReceived","current","offsetHeight","messageActions","markAsRead","warning","onMessageUpdated","onMessageDeleted","_","onReactionUpdated","reactionEvent","onChannelChanged","onChannelFrozen","onChannelUnfrozen","onUserMuted","onUserUnmuted","onUserBanned","onOperatorUpdated","addChannelHandler","removeChannelHandler","useSetChannel","GroupChannel","getChannel","then","messageActionTypes","catch","e","getAllEmoji","emojiContainer_","err","PREV_RESULT_SIZE","NEXT_RESULT_SIZE","getLatestMessageTimeStamp","latestMessage","useInitialMessagesFetch","userFilledMessageListQuery","intialTimeStamp","MessageListParams","getMessagesByTimestamp","prevResultSize","isInclusive","includeReplies","includeReaction","Object","keys","nextResultSize","nextMessageListParams","getTime","nextMessages","finally","utils","useHandleReconnect","isOnline","wasOffline","appInfo","useReaction","isUsingReaction","lastMessageTime","useScrollCallback","useCallback","cb","hasMoreMessages","lastMessageTs","RESULT_SIZE","useScrollDownCallback","messagesLength","useDeleteMessageCallback","requestState","deleteMessage","useUpdateMessageCallback","onBeforeUpdateUserMessage","text","createParamsDefault","txt","params","UserMessageParams","createCustomPrams","updateUserMessage","r","swapParams","getErrorFirstCallback","publish","useResendMessageCallback","failedMessage","messageType","file","isResendable","resendUserMessage","resendFileMessage","console","useSendMessageCallback","onBeforeSendUserMessage","messageInputRef","useRef","sendMessage","value","trim","pendingMsg","sendUserMessage","res","useSendFileMessageCallback","onBeforeSendFileMessage","imageCompression","compressionRate","resizingWidth","resizingHeight","createCustomParams","compressibleFileType","compressibleRatio","compressibleDiamensions","canCompressImage","file_","FileMessageParams","image","createElement","src","URL","createObjectURL","onload","revokeObjectURL","canvas","imageWdith","naturalWidth","width","imageHeight","naturalHeight","height","targetWidth","targetHeight","context","getContext","drawImage","toBlob","newImageBlob","compressedFile","File","name","pendingMessage","sendFileMessage","response","localUrl","ReactionButton","React","forwardRef","props","ref","className","selected","onClick","children","Array","isArray","join","slice","propTypes","PropTypes","oneOfType","string","arrayOf","number","bool","func","element","isRequired","defaultProps","useMemoizedEmojiListItems","toggleReaction","emojiAllList","useMemo","parentRef","parentContainRef","closeDropdown","spaceFromTrigger","EmojiListItems","emoji","reactedReaction","reactions","reaction","isReacted","userIds","indexOf","ImageRenderer","Icon","IconTypes","QUESTION","useToggleReactionCallback","deleteReaction","addReaction","useScrollToMessage","_a","_b","setIntialTimeStamp","setHighLightedMessageId","isPresent","MessageStatusTypes","MessageStatus","status","iconType","SENT","DONE","DELIVERED","DONE_ALL","READ","ERROR","iconColor","IconColors","Loader","SPINNER","PRIMARY","isSentStatus","Label","LabelTypography","CAPTION_3","LabelColors","ONBACKGROUND_2","shape","friendName","profileUrl","MessageItemMenu","isByMe","_c","disabled","showEdit","showRemove","resendMessage","setSupposedHover","stringSet","useContext","LocalizationContext","triggerRef","containerRef","showMenuItemCopy","isUserMessage","showMenuItemReply","showMenuItemEdit","isSentMessage","showMenuItemResend","isFailedMessage","showMenuItemDelete","getClassName","ContextMenu","toggleDropdown","IconButton","MORE","CONTENT_INVERSE","close","MenuItems","MenuItem","copyToClipboard","MESSAGE_MENU__COPY","MESSAGE_MENU__EDIT","MESSAGE_MENU__RESEND","threadInfo","replyCount","MESSAGE_MENU__DELETE","MessageItemReactionMenu","EMOJI_MORE","getEmojiListAll","reactorId","style","ON_BACKGROUND_3","Tooltip","CAPTION_2","ONCONTENT_1","SPACE_FROM_TRIGGER","TooltipWrapper","hoverTooltip","useState","showHoverTooltip","setShowHoverTooltip","childrenRef","bottom","left","offsetWidth","ReactionBadge","count","isAdd","getClassNameTail","ONBACKGROUND_1","EmojiReactions2","memberNicknamesMap","_d","_e","emojisMap","getEmojiMapAll","addReactionRef","reactedByMe","isReactedBy","getEmojiTooltipString","get","size","AdminMessage","TextMessageItemBody","mouseHover","split","word","BODY_1","isEditedMessage","ONCONTENT_2","MESSAGE_EDITED","FileMessageItemBody","IMAGE","PHOTO","VIDEO","PLAY","AUDIO","FILE_AUDIO","GIF","OTHERS","FILE_DOCUMENT","getUIKitFileType","TextButton","window","open","truncateString","ThumbnailMessageItemBody","showFileViewer","_f","thumbnails","thumbnailUrl","isVideoMessage","ON_BACKGROUND_2","isGifMessage","OGMessageItemBody","_k","_l","openOGUrl","ogMetaData","isUrl","LinkLabel","defaultImage","alt","THUMBNAIL_NONE","title","SUBTITLE_2","description","BODY_2","UnknownMessageItemBody","UNKNOWN__UNKNOWN_MESSAGE_TYPE","UNKNOWN__CANNOT_READ_MESSAGE","MessageContent","_g","chainTop","_h","chainBottom","_j","messageTypes","getUIKitMessageTypes","UserProfileContext","disableUserProfile","renderUserProfile","avatarRef","setMouseHover","_m","supposedHover","isByMeClassName","chainTopClassName","useReactionClassName","supposedHoverClassName","ClientAdminMessage","Avatar","paddingTop","paddingBottom","user","UserProfile","getOutgoingMessageState","getSenderName","isTextMessage","isOGMessage","getUIKitMessageType","FILE","isThumbnailMessage","UNKNOWN","EmojiReactions","RemoveMessage","onCloseModal","onDeleteMessage","Modal","MODAL__DELETE_MESSAGE__TITLE","MessageHoc","editDisabled","hasSeparator","updateMessage","scrollToMessage","membersMap","highLightedMessageId","renderCustomMessage","setShowEdit","setShowRemove","setShowFileViewer","isAnimated","setIsAnimated","editMessageInputRef","useMessageScrollRef","useLayoutEffect","scrollIntoView","block","inline","RenderedMessage","DateSeparator","MessageInput","marginBottom","RemoveMessageModal","FileViewer","isFileMessage","isDateseparator","instanceOf","ConversationScroll","onScroll","onScrollDown","target","clientHeight","nodes","querySelectorAll","first","last","emojiAllMap","renderChatItem","useMessageGrouping","memoizedEmojiListItems","showScrollBot","onClickScrollBot","PlaceHolder","PlaceHolderTypes","NO_MESSAGES","idx","previousMessage","previousMessageCreatedAt","currentCreatedAt","isSameDay","onUpdateMessage","onResendMessage","onScrollToMessage","menuDisabled","MessageHOC","CHEVRON_DOWN","Component","readStatus","Notification","time","timeArray","CHANNEL__MESSAGE_LIST__NOTIFICATION__ON","CHANNEL__MESSAGE_LIST__NOTIFICATION__NEW_MESSAGE","CONTENT","FrozenNotification","CHANNEL_FROZEN","TypingIndicatorText","TYPING_INDICATOR__IS_TYPING","TYPING_INDICATOR__AND","TYPING_INDICATOR__ARE_TYPING","TYPING_INDICATOR__MULTIPLE_TYPING","TypingIndicator","sb","handlerId","setHandlerId","typingMembers","setTypingMembers","newHandlerId","handler","onTypingStatusUpdated","getTypingMembers","MessageInputWrapper","onSendMessage","onFileUpload","renderMessageInput","isBroadcast","CHANNEL__MESSAGE_INPUT__PLACE_HOLDER__DISABLED","CHANNEL__MESSAGE_INPUT__PLACE_HOLDER__MUTED","startTyping","ConnectionStatus","TRYING_TO_CONNECT","DISCONNECTED","getChannelTitle","currentUserId","LabelStringSet","NO_TITLE","NO_MEMBERS","NO_NAME","noop","ChatHeader","currentUser","subTitle","isMuted","theme","showSearchIcon","onSearchClick","onActionClick","ChannelAvatar","H_2","NOTIFICATIONS_OFF_FILLED","SEARCH","INFO","coverUrl","ConversationPanel","stores","sdkStore","userStore","config","reconnect","dispatchers","queries","startingPoint","highlightedMessage","renderChatHeader","onChatHeaderActionClick","sdkError","messageListQuery","warn","useReducer","messagesReducer","messagesInitialState","messagesStore","isSuper","usingReaction","userDefinedDisableUserProfile","userDefinedRenderProfile","onScrollCallback","onScrollDownCallback","useGetChannel","subScriber","onSendFileMessage","NO_CHANNELS","WRONG","UserProfileProvider","LOADING","any","includeMetaArray","includeParentMessageText","includeThreadInfo","limit","reverse","senderUserIdsFilter","withSendbirdContext"],"mappings":"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"}